(herald "DHCR: unified model (UM) original" (bound 20) (limit 8000)
  (algebra diffie-hellman))

(comment "CPSA 3.6.11")
(comment "All input read from tst/dhcr_um.scm")
(comment "Step count limited to 8000")
(comment "Strand count bounded at 20")

(defprotocol dhcr-um diffie-hellman
  (defrole init
    (vars (ltxa ltxb x rndx) (y expt) (a b name) (na nb data))
    (trace (recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))))
      (send nb))
    (uniq-orig na)
    (uniq-gen x)
    (fn-of ("ltx-of" (a ltxa) (b ltxb))
      ("principal-of" (ltxa a) (ltxb b)))
    (neq ((exp (gen) y) (gen)))
    (absent (x (exp (gen) ltxa)) (x (exp (gen) ltxb))))
  (defrole resp
    (vars (ltxa ltxb y rndx) (x expt) (a b name) (na nb data))
    (trace (recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x))))))
      (recv nb))
    (uniq-orig nb)
    (uniq-gen y)
    (fn-of ("ltx-of" (a ltxa) (b ltxb))
      ("principal-of" (ltxa a) (ltxb b)))
    (neq ((exp (gen) x) (gen)))
    (absent (y (exp (gen) ltxa)) (y (exp (gen) ltxb))
      (y (exp (gen) x))))
  (defrole ltx-gen
    (vars (self name) (l rndx))
    (trace (send (cat self (exp (gen) l))) (recv "end-of-protocol")
      (send l))
    (uniq-gen l)
    (fn-of ("ltx-of" (self l)) ("principal-of" (l self)))))

(defskeleton dhcr-um
  (vars (na nb data) (a b self self-0 name) (ltxa ltxb x rndx) (y expt))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y y))
  (defstrand ltx-gen 1 (self self) (l ltxa))
  (defstrand ltx-gen 1 (self self-0) (l ltxb))
  (absent (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (self-0 ltxb) (self ltxa) (a ltxa) (b ltxb))
    ("principal-of" (ltxb self-0) (ltxa self) (ltxa a) (ltxb b)))
  (neq (a b) ((exp (gen) y) (gen)))
  (non-orig ltxa ltxb)
  (uniq-gen ltxa ltxb x)
  (uniq-orig na)
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))))
      (send nb)) ((send (cat self (exp (gen) ltxa))))
    ((send (cat self-0 (exp (gen) ltxb)))))
  (label 0)
  (unrealized (0 0) (0 2))
  (preskeleton)
  (origs (na (0 1)))
  (comment "Not a skeleton"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa ltxb x rndx) (y expt))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y y))
  (defstrand ltx-gen 1 (self a) (l ltxa))
  (defstrand ltx-gen 1 (self b) (l ltxb))
  (precedes ((1 0) (0 0)) ((2 0) (0 0)))
  (absent (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (b ltxb) (a ltxa))
    ("principal-of" (ltxb b) (ltxa a)))
  (neq (a b) ((exp (gen) y) (gen)))
  (non-orig ltxa ltxb)
  (uniq-gen ltxa ltxb x)
  (uniq-orig na)
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))))
      (send nb)) ((send (cat a (exp (gen) ltxa))))
    ((send (cat b (exp (gen) ltxb)))))
  (label 1)
  (parent 0)
  (unrealized (0 2))
  (origs (na (0 1)))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa ltxb x y rndx) (x-0 expt))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul (rec x) y x-0)))
  (defstrand ltx-gen 1 (self a) (l ltxa))
  (defstrand ltx-gen 1 (self b) (l ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x x-0))
  (precedes ((0 1) (3 1)) ((1 0) (0 0)) ((1 0) (3 0)) ((2 0) (0 0))
    ((2 0) (3 0)) ((3 2) (0 2)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) ltxb)) (y (exp (gen) x-0))
    (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a ltxa) (b ltxb))
    ("principal-of" (ltxa a) (ltxb b)))
  (neq ((exp (gen) x-0) (gen)) (a b)
    ((exp (gen) (mul (rec x) y x-0)) (gen)))
  (non-orig ltxa ltxb)
  (uniq-gen ltxa ltxb x y)
  (uniq-orig na nb)
  (operation encryption-test (added-strand resp 3)
    (enc na nb a b
      (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x-0)))) (0 2))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y x-0))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul y x-0)))))) (send nb))
    ((send (cat a (exp (gen) ltxa)))) ((send (cat b (exp (gen) ltxb))))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) x-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul y x-0))))))))
  (label 2)
  (parent 1)
  (unrealized (0 2))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa ltxb x rndx) (y expt))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y y))
  (defstrand ltx-gen 1 (self a) (l ltxa))
  (defstrand ltx-gen 1 (self b) (l ltxb))
  (deflistener (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))
  (precedes ((0 1) (3 0)) ((1 0) (0 0)) ((2 0) (0 0)) ((3 1) (0 2)))
  (absent (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (b ltxb) (a ltxa))
    ("principal-of" (ltxb b) (ltxa a)))
  (neq (a b) ((exp (gen) y) (gen)))
  (non-orig ltxa ltxb)
  (uniq-gen ltxa ltxb x)
  (uniq-orig na)
  (operation encryption-test
    (added-listener
      (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))
    (enc na nb a b
      (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y)))) (0 2))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))))
      (send nb)) ((send (cat a (exp (gen) ltxa))))
    ((send (cat b (exp (gen) ltxb))))
    ((recv (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))))
  (label 3)
  (parent 1)
  (unrealized (3 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa ltxb x y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y y))
  (defstrand ltx-gen 1 (self a) (l ltxa))
  (defstrand ltx-gen 1 (self b) (l ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x x))
  (precedes ((0 1) (3 1)) ((1 0) (0 0)) ((1 0) (3 0)) ((2 0) (0 0))
    ((2 0) (3 0)) ((3 2) (0 2)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) ltxb)) (y (exp (gen) x))
    (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a ltxa) (b ltxb))
    ("principal-of" (ltxa a) (ltxb b)))
  (neq ((exp (gen) x) (gen)) (a b) ((exp (gen) y) (gen)))
  (non-orig ltxa ltxb)
  (uniq-gen ltxa ltxb x y)
  (uniq-orig na nb)
  (operation nonce-test (displaced 4 3 resp 3) (exp (gen) y-0) (0 2))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))))
      (send nb)) ((send (cat a (exp (gen) ltxa))))
    ((send (cat b (exp (gen) ltxb))))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x y))))))))
  (label 4)
  (parent 2)
  (unrealized)
  (shape)
  (maps
    ((0 1 2)
      ((ltxa ltxa) (ltxb ltxb) (a a) (b b) (x x) (y y) (na na)
        (nb nb))))
  (origs (nb (3 2)) (na (0 1))))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa ltxb x y rndx) (x-0 w expt))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul (rec x) y x-0)))
  (defstrand ltx-gen 1 (self a) (l ltxa))
  (defstrand ltx-gen 1 (self b) (l ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x x-0))
  (deflistener (cat (exp (gen) (mul (rec x) y x-0 (rec w))) w))
  (precedes ((0 1) (3 1)) ((1 0) (0 0)) ((1 0) (3 0)) ((2 0) (0 0))
    ((2 0) (3 0)) ((3 2) (4 0)) ((4 1) (0 2)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) ltxb)) (y (exp (gen) x-0))
    (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a ltxa) (b ltxb))
    ("principal-of" (ltxa a) (ltxb b)))
  (neq ((exp (gen) x-0) (gen)) (a b)
    ((exp (gen) (mul (rec x) y x-0)) (gen)))
  (non-orig ltxa ltxb)
  (uniq-gen ltxa ltxb x y)
  (uniq-orig na nb)
  (precur (4 0))
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec x) y x-0 (rec w))) w))
    (exp (gen) (mul (rec x) y x-0)) (0 2))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y x-0))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul y x-0)))))) (send nb))
    ((send (cat a (exp (gen) ltxa)))) ((send (cat b (exp (gen) ltxb))))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) x-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul y x-0)))))))
    ((recv (cat (exp (gen) (mul (rec x) y x-0 (rec w))) w))
      (send (cat (exp (gen) (mul (rec x) y x-0 (rec w))) w))))
  (label 5)
  (parent 2)
  (unrealized (4 0))
  (comment "8 in cohort - 8 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa ltxb x rndx) (y expt))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y y))
  (defstrand ltx-gen 1 (self a) (l ltxa))
  (defstrand ltx-gen 1 (self b) (l ltxb))
  (deflistener (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))
  (precedes ((0 1) (4 0)) ((1 0) (0 0)) ((2 0) (0 0)) ((3 1) (0 2))
    ((4 1) (3 0)))
  (absent (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (b ltxb) (a ltxa))
    ("principal-of" (ltxb b) (ltxa a)))
  (neq (a b) ((exp (gen) y) (gen)))
  (non-orig ltxa ltxb)
  (uniq-gen ltxa ltxb x)
  (uniq-orig na)
  (operation encryption-test
    (added-listener
      (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))
    (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))) (3 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))))
      (send nb)) ((send (cat a (exp (gen) ltxa))))
    ((send (cat b (exp (gen) ltxb))))
    ((recv (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))))
  (label 6)
  (parent 3)
  (unrealized (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa ltxb x rndx) (w expt) (y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul w y)))
  (defstrand ltx-gen 1 (self a) (l ltxa))
  (defstrand ltx-gen 1 (self b) (l ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x (mul x w)))
  (deflistener (cat (gen) (mul w y)))
  (precedes ((0 1) (3 1)) ((1 0) (0 0)) ((1 0) (3 0)) ((2 0) (0 0))
    ((2 0) (3 0)) ((3 2) (4 0)) ((4 1) (0 2)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) ltxb))
    (y (exp (gen) (mul x w))) (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a ltxa) (b ltxb))
    ("principal-of" (ltxa a) (ltxb b)))
  (neq ((exp (gen) (mul x w)) (gen)) (a b)
    ((exp (gen) (mul w y)) (gen)))
  (non-orig ltxa ltxb)
  (uniq-gen ltxa ltxb x y)
  (uniq-orig na nb)
  (precur (4 0))
  (operation nonce-test
    (contracted (x-0 x) (y-0 y) (x-1 (mul x w)) (w-0 (mul w y)) (y-1 y)
      (w (mul w y))) (gen) (4 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x w y)))))) (send nb))
    ((send (cat a (exp (gen) ltxa)))) ((send (cat b (exp (gen) ltxb))))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul x w))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x w y)))))))
    ((recv (cat (gen) (mul w y))) (send (cat (gen) (mul w y)))))
  (label 7)
  (parent 5)
  (unrealized (4 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (w expt) (ltxa ltxb x y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul w x y)))
  (defstrand ltx-gen 1 (self a) (l ltxa))
  (defstrand ltx-gen 1 (self b) (l ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x (mul w x x)))
  (deflistener (cat (exp (gen) x) (mul w y)))
  (precedes ((0 1) (3 1)) ((1 0) (0 0)) ((1 0) (3 0)) ((2 0) (0 0))
    ((2 0) (3 0)) ((3 2) (4 0)) ((4 1) (0 2)))
  (absent (x (exp (gen) ltxa)) (x (exp (gen) ltxb)) (y (exp (gen) ltxa))
    (y (exp (gen) ltxb)) (y (exp (gen) (mul w x x))))
  (fn-of ("ltx-of" (a ltxa) (b ltxb))
    ("principal-of" (ltxa a) (ltxb b)))
  (neq ((exp (gen) (mul w x x)) (gen)) (a b)
    ((exp (gen) (mul w x y)) (gen)))
  (non-orig ltxa ltxb)
  (precur (4 0))
  (uniq-gen ltxa ltxb x y)
  (uniq-orig na nb)
  (operation nonce-test (displaced 5 0 init 2) (exp (gen) x-0) (4 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w x y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul w x x y)))))) (send nb))
    ((send (cat a (exp (gen) ltxa)))) ((send (cat b (exp (gen) ltxb))))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul w x x))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul w x x y)))))))
    ((recv (cat (exp (gen) x) (mul w y)))
      (send (cat (exp (gen) x) (mul w y)))))
  (label 8)
  (parent 5)
  (unrealized (0 2) (3 1) (4 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb na-0 data) (a b a-0 b-0 name)
    (ltxa ltxb ltxa-0 ltxb-0 x rndx) (w expt) (x-0 y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul w x-0 y)))
  (defstrand ltx-gen 1 (self a) (l ltxa))
  (defstrand ltx-gen 1 (self b) (l ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x (mul x w x-0)))
  (deflistener (cat (exp (gen) x-0) (mul w y)))
  (defstrand init 2 (na na-0) (a a-0) (b b-0) (ltxa ltxa-0)
    (ltxb ltxb-0) (x x-0))
  (precedes ((0 1) (3 1)) ((1 0) (0 0)) ((1 0) (3 0)) ((2 0) (0 0))
    ((2 0) (3 0)) ((3 2) (4 0)) ((4 1) (0 2)) ((5 1) (3 1)))
  (absent (x-0 (exp (gen) ltxa-0)) (x-0 (exp (gen) ltxb-0))
    (y (exp (gen) ltxa)) (y (exp (gen) ltxb))
    (y (exp (gen) (mul x w x-0))) (x (exp (gen) ltxa))
    (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a-0 ltxa-0) (b-0 ltxb-0) (a ltxa) (b ltxb))
    ("principal-of" (ltxa-0 a-0) (ltxb-0 b-0) (ltxa a) (ltxb b)))
  (neq ((exp (gen) (mul x w x-0)) (gen)) (a b)
    ((exp (gen) (mul w x-0 y)) (gen)))
  (non-orig ltxa ltxb)
  (precur (4 0))
  (uniq-gen ltxa ltxb x x-0 y)
  (uniq-orig na nb na-0)
  (operation nonce-test (added-strand init 2) (exp (gen) x-0) (4 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w x-0 y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x w x-0 y)))))) (send nb))
    ((send (cat a (exp (gen) ltxa)))) ((send (cat b (exp (gen) ltxb))))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul x w x-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x w x-0 y)))))))
    ((recv (cat (exp (gen) x-0) (mul w y)))
      (send (cat (exp (gen) x-0) (mul w y))))
    ((recv (cat (exp (gen) ltxa-0) (exp (gen) ltxb-0)))
      (send (cat na-0 a-0 b-0 (exp (gen) x-0)))))
  (label 9)
  (parent 5)
  (unrealized (0 2) (3 1) (4 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa ltxb x rndx) (w expt) (y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul w y)))
  (defstrand ltx-gen 1 (self a) (l ltxa))
  (defstrand ltx-gen 1 (self b) (l ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x (mul x w)))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 1) (3 1)) ((1 0) (0 0)) ((1 0) (3 0)) ((2 0) (0 0))
    ((2 0) (3 0)) ((3 2) (4 0)) ((4 1) (0 2)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) ltxb))
    (y (exp (gen) (mul x w))) (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a ltxa) (b ltxb))
    ("principal-of" (ltxa a) (ltxb b)))
  (neq ((exp (gen) (mul x w)) (gen)) (a b)
    ((exp (gen) (mul w y)) (gen)))
  (non-orig ltxa ltxb)
  (precur (4 0))
  (uniq-gen ltxa ltxb x y)
  (uniq-orig na nb)
  (operation nonce-test (displaced 5 3 resp 3) (exp (gen) y-0) (4 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x w y)))))) (send nb))
    ((send (cat a (exp (gen) ltxa)))) ((send (cat b (exp (gen) ltxb))))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul x w))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x w y)))))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 10)
  (parent 5)
  (seen 2)
  (unrealized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb na-0 nb-0 data) (a b a-0 b-0 name)
    (ltxa ltxb ltxa-0 ltxb-0 rndx) (x expt) (x-0 rndx) (w expt)
    (y y-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x-0) (y (mul w y y-0)))
  (defstrand ltx-gen 1 (self a) (l ltxa))
  (defstrand ltx-gen 1 (self b) (l ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y-0) (x (mul x-0 w y)))
  (deflistener (cat (exp (gen) y) (mul w y-0)))
  (defstrand resp 3 (na na-0) (nb nb-0) (a a-0) (b b-0) (ltxa ltxa-0)
    (ltxb ltxb-0) (y y) (x x))
  (precedes ((0 1) (3 1)) ((1 0) (0 0)) ((1 0) (3 0)) ((2 0) (0 0))
    ((2 0) (3 0)) ((3 2) (4 0)) ((4 1) (0 2)) ((5 2) (3 1)))
  (absent (y (exp (gen) ltxa-0)) (y (exp (gen) ltxb-0))
    (y (exp (gen) x)) (y-0 (exp (gen) ltxa)) (y-0 (exp (gen) ltxb))
    (y-0 (exp (gen) (mul x-0 w y))) (x-0 (exp (gen) ltxa))
    (x-0 (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a-0 ltxa-0) (b-0 ltxb-0) (a ltxa) (b ltxb))
    ("principal-of" (ltxa-0 a-0) (ltxb-0 b-0) (ltxa a) (ltxb b)))
  (neq ((exp (gen) x) (gen)) ((exp (gen) (mul x-0 w y)) (gen)) (a b)
    ((exp (gen) (mul w y y-0)) (gen)))
  (non-orig ltxa ltxb)
  (precur (4 0))
  (uniq-gen ltxa ltxb x-0 y y-0)
  (uniq-orig na nb nb-0)
  (operation nonce-test (added-strand resp 3) (exp (gen) y) (4 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x-0)))
      (recv
        (cat (exp (gen) (mul w y y-0))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x-0 w y y-0)))))) (send nb))
    ((send (cat a (exp (gen) ltxa)))) ((send (cat b (exp (gen) ltxb))))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul x-0 w y))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x-0 w y y-0)))))))
    ((recv (cat (exp (gen) y) (mul w y-0)))
      (send (cat (exp (gen) y) (mul w y-0))))
    ((recv (cat (exp (gen) ltxa-0) (exp (gen) ltxb-0)))
      (recv (cat na-0 a-0 b-0 (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul ltxa-0 ltxb-0))
              (exp (gen) (mul x y))))))))
  (label 11)
  (parent 5)
  (unrealized (0 2) (3 1) (4 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxb x rndx) (w expt) (l y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa l) (ltxb ltxb)
    (x x) (y (mul w l y)))
  (defstrand ltx-gen 1 (self a) (l l))
  (defstrand ltx-gen 1 (self b) (l ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa l) (ltxb ltxb)
    (y y) (x (mul x w l)))
  (deflistener (cat (exp (gen) l) (mul w y)))
  (precedes ((0 1) (3 1)) ((1 0) (0 0)) ((1 0) (3 0)) ((2 0) (0 0))
    ((2 0) (3 0)) ((3 2) (4 0)) ((4 1) (0 2)))
  (absent (y (exp (gen) l)) (y (exp (gen) ltxb))
    (y (exp (gen) (mul x w l))) (x (exp (gen) l)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a l) (b ltxb)) ("principal-of" (l a) (ltxb b)))
  (neq ((exp (gen) (mul x w l)) (gen)) (a b)
    ((exp (gen) (mul w l y)) (gen)))
  (non-orig ltxb l)
  (precur (4 0))
  (uniq-gen ltxb x l y)
  (uniq-orig na nb)
  (operation nonce-test (displaced 5 1 ltx-gen 1) (exp (gen) l-0) (4 0))
  (traces
    ((recv (cat (exp (gen) l) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w l y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxb l)) (exp (gen) (mul x w l y))))))
      (send nb)) ((send (cat a (exp (gen) l))))
    ((send (cat b (exp (gen) ltxb))))
    ((recv (cat (exp (gen) l) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul x w l))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxb l))
              (exp (gen) (mul x w l y)))))))
    ((recv (cat (exp (gen) l) (mul w y)))
      (send (cat (exp (gen) l) (mul w y)))))
  (label 12)
  (parent 5)
  (unrealized (0 2) (3 1) (4 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa x rndx) (w expt) (l y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb l)
    (x x) (y (mul w l y)))
  (defstrand ltx-gen 1 (self a) (l ltxa))
  (defstrand ltx-gen 1 (self b) (l l))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb l)
    (y y) (x (mul x w l)))
  (deflistener (cat (exp (gen) l) (mul w y)))
  (precedes ((0 1) (3 1)) ((1 0) (0 0)) ((1 0) (3 0)) ((2 0) (0 0))
    ((2 0) (3 0)) ((3 2) (4 0)) ((4 1) (0 2)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) l))
    (y (exp (gen) (mul x w l))) (x (exp (gen) ltxa)) (x (exp (gen) l)))
  (fn-of ("ltx-of" (b l) (a ltxa)) ("principal-of" (l b) (ltxa a)))
  (neq ((exp (gen) (mul x w l)) (gen)) (a b)
    ((exp (gen) (mul w l y)) (gen)))
  (non-orig ltxa l)
  (precur (4 0))
  (uniq-gen ltxa x l y)
  (uniq-orig na nb)
  (operation nonce-test (displaced 5 2 ltx-gen 1) (exp (gen) l-0) (4 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) l)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w l y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa l)) (exp (gen) (mul x w l y))))))
      (send nb)) ((send (cat a (exp (gen) ltxa))))
    ((send (cat b (exp (gen) l))))
    ((recv (cat (exp (gen) ltxa) (exp (gen) l)))
      (recv (cat na a b (exp (gen) (mul x w l))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa l))
              (exp (gen) (mul x w l y)))))))
    ((recv (cat (exp (gen) l) (mul w y)))
      (send (cat (exp (gen) l) (mul w y)))))
  (label 13)
  (parent 5)
  (unrealized (0 2) (3 1) (4 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb data) (a b self name) (ltxa ltxb x rndx) (w expt)
    (l y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul w l y)))
  (defstrand ltx-gen 1 (self a) (l ltxa))
  (defstrand ltx-gen 1 (self b) (l ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x (mul x w l)))
  (deflistener (cat (exp (gen) l) (mul w y)))
  (defstrand ltx-gen 1 (self self) (l l))
  (precedes ((0 1) (3 1)) ((1 0) (0 0)) ((1 0) (3 0)) ((2 0) (0 0))
    ((2 0) (3 0)) ((3 2) (4 0)) ((4 1) (0 2)) ((5 0) (3 1)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) ltxb))
    (y (exp (gen) (mul x w l))) (x (exp (gen) ltxa))
    (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (self l) (a ltxa) (b ltxb))
    ("principal-of" (l self) (ltxa a) (ltxb b)))
  (neq ((exp (gen) (mul x w l)) (gen)) (a b)
    ((exp (gen) (mul w l y)) (gen)))
  (non-orig ltxa ltxb)
  (precur (4 0))
  (uniq-gen ltxa ltxb x l y)
  (uniq-orig na nb)
  (operation nonce-test (added-strand ltx-gen 1) (exp (gen) l) (4 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w l y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x w l y)))))) (send nb))
    ((send (cat a (exp (gen) ltxa)))) ((send (cat b (exp (gen) ltxb))))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul x w l))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x w l y)))))))
    ((recv (cat (exp (gen) l) (mul w y)))
      (send (cat (exp (gen) l) (mul w y))))
    ((send (cat self (exp (gen) l)))))
  (label 14)
  (parent 5)
  (unrealized (0 2) (3 1) (4 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa ltxb x rndx) (w expt) (y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul w y)))
  (defstrand ltx-gen 1 (self a) (l ltxa))
  (defstrand ltx-gen 1 (self b) (l ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x (mul x w)))
  (deflistener (cat (gen) (mul w y)))
  (deflistener y)
  (precedes ((0 1) (3 1)) ((1 0) (0 0)) ((1 0) (3 0)) ((2 0) (0 0))
    ((2 0) (3 0)) ((3 2) (5 0)) ((4 1) (0 2)) ((5 1) (4 0)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) ltxb))
    (y (exp (gen) (mul x w))) (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a ltxa) (b ltxb))
    ("principal-of" (ltxa a) (ltxb b)))
  (neq ((exp (gen) (mul x w)) (gen)) (a b)
    ((exp (gen) (mul w y)) (gen)))
  (non-orig ltxa ltxb)
  (uniq-gen ltxa ltxb x y)
  (uniq-orig na nb)
  (precur (4 0))
  (operation nonce-test (added-listener y) (mul w y) (4 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x w y)))))) (send nb))
    ((send (cat a (exp (gen) ltxa)))) ((send (cat b (exp (gen) ltxb))))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul x w))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x w y)))))))
    ((recv (cat (gen) (mul w y))) (send (cat (gen) (mul w y))))
    ((recv y) (send y)))
  (label 15)
  (parent 7)
  (unrealized (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (w expt) (ltxa ltxb x y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul w x y)))
  (defstrand ltx-gen 1 (self a) (l ltxa))
  (defstrand ltx-gen 1 (self b) (l ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x (mul w x x)))
  (deflistener (cat (exp (gen) x) (mul w y)))
  (deflistener y)
  (precedes ((0 1) (3 1)) ((1 0) (0 0)) ((1 0) (3 0)) ((2 0) (0 0))
    ((2 0) (3 0)) ((3 2) (5 0)) ((4 1) (0 2)) ((5 1) (4 0)))
  (absent (x (exp (gen) ltxa)) (x (exp (gen) ltxb)) (y (exp (gen) ltxa))
    (y (exp (gen) ltxb)) (y (exp (gen) (mul w x x))))
  (fn-of ("ltx-of" (a ltxa) (b ltxb))
    ("principal-of" (ltxa a) (ltxb b)))
  (neq ((exp (gen) (mul w x x)) (gen)) (a b)
    ((exp (gen) (mul w x y)) (gen)))
  (non-orig ltxa ltxb)
  (precur (4 0))
  (uniq-gen ltxa ltxb x y)
  (uniq-orig na nb)
  (operation nonce-test (added-listener y) (mul w y) (4 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w x y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul w x x y)))))) (send nb))
    ((send (cat a (exp (gen) ltxa)))) ((send (cat b (exp (gen) ltxb))))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul w x x))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul w x x y)))))))
    ((recv (cat (exp (gen) x) (mul w y)))
      (send (cat (exp (gen) x) (mul w y)))) ((recv y) (send y)))
  (label 16)
  (parent 8)
  (unrealized (3 1) (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (na nb na-0 data) (a b a-0 b-0 name)
    (ltxa ltxb ltxa-0 ltxb-0 x rndx) (w expt) (x-0 y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul w x-0 y)))
  (defstrand ltx-gen 1 (self a) (l ltxa))
  (defstrand ltx-gen 1 (self b) (l ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x (mul x w x-0)))
  (deflistener (cat (exp (gen) x-0) (mul w y)))
  (defstrand init 2 (na na-0) (a a-0) (b b-0) (ltxa ltxa-0)
    (ltxb ltxb-0) (x x-0))
  (deflistener y)
  (precedes ((0 1) (3 1)) ((1 0) (0 0)) ((1 0) (3 0)) ((2 0) (0 0))
    ((2 0) (3 0)) ((3 2) (6 0)) ((4 1) (0 2)) ((5 1) (3 1))
    ((6 1) (4 0)))
  (absent (x-0 (exp (gen) ltxa-0)) (x-0 (exp (gen) ltxb-0))
    (y (exp (gen) ltxa)) (y (exp (gen) ltxb))
    (y (exp (gen) (mul x w x-0))) (x (exp (gen) ltxa))
    (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a-0 ltxa-0) (b-0 ltxb-0) (a ltxa) (b ltxb))
    ("principal-of" (ltxa-0 a-0) (ltxb-0 b-0) (ltxa a) (ltxb b)))
  (neq ((exp (gen) (mul x w x-0)) (gen)) (a b)
    ((exp (gen) (mul w x-0 y)) (gen)))
  (non-orig ltxa ltxb)
  (precur (4 0))
  (uniq-gen ltxa ltxb x x-0 y)
  (uniq-orig na nb na-0)
  (operation nonce-test (added-listener y) (mul w y) (4 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w x-0 y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x w x-0 y)))))) (send nb))
    ((send (cat a (exp (gen) ltxa)))) ((send (cat b (exp (gen) ltxb))))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul x w x-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x w x-0 y)))))))
    ((recv (cat (exp (gen) x-0) (mul w y)))
      (send (cat (exp (gen) x-0) (mul w y))))
    ((recv (cat (exp (gen) ltxa-0) (exp (gen) ltxb-0)))
      (send (cat na-0 a-0 b-0 (exp (gen) x-0)))) ((recv y) (send y)))
  (label 17)
  (parent 9)
  (unrealized (3 1) (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (na nb na-0 nb-0 data) (a b a-0 b-0 name)
    (ltxa ltxb ltxa-0 ltxb-0 rndx) (x expt) (x-0 rndx) (w expt)
    (y y-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x-0) (y (mul w y y-0)))
  (defstrand ltx-gen 1 (self a) (l ltxa))
  (defstrand ltx-gen 1 (self b) (l ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y-0) (x (mul x-0 w y)))
  (deflistener (cat (exp (gen) y) (mul w y-0)))
  (defstrand resp 3 (na na-0) (nb nb-0) (a a-0) (b b-0) (ltxa ltxa-0)
    (ltxb ltxb-0) (y y) (x x))
  (deflistener y-0)
  (precedes ((0 1) (3 1)) ((1 0) (0 0)) ((1 0) (3 0)) ((2 0) (0 0))
    ((2 0) (3 0)) ((3 2) (6 0)) ((4 1) (0 2)) ((5 2) (3 1))
    ((6 1) (4 0)))
  (absent (y (exp (gen) ltxa-0)) (y (exp (gen) ltxb-0))
    (y (exp (gen) x)) (y-0 (exp (gen) ltxa)) (y-0 (exp (gen) ltxb))
    (y-0 (exp (gen) (mul x-0 w y))) (x-0 (exp (gen) ltxa))
    (x-0 (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a-0 ltxa-0) (b-0 ltxb-0) (a ltxa) (b ltxb))
    ("principal-of" (ltxa-0 a-0) (ltxb-0 b-0) (ltxa a) (ltxb b)))
  (neq ((exp (gen) x) (gen)) ((exp (gen) (mul x-0 w y)) (gen)) (a b)
    ((exp (gen) (mul w y y-0)) (gen)))
  (non-orig ltxa ltxb)
  (precur (4 0))
  (uniq-gen ltxa ltxb x-0 y y-0)
  (uniq-orig na nb nb-0)
  (operation nonce-test (added-listener y-0) (mul w y-0) (4 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x-0)))
      (recv
        (cat (exp (gen) (mul w y y-0))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x-0 w y y-0)))))) (send nb))
    ((send (cat a (exp (gen) ltxa)))) ((send (cat b (exp (gen) ltxb))))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul x-0 w y))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x-0 w y y-0)))))))
    ((recv (cat (exp (gen) y) (mul w y-0)))
      (send (cat (exp (gen) y) (mul w y-0))))
    ((recv (cat (exp (gen) ltxa-0) (exp (gen) ltxb-0)))
      (recv (cat na-0 a-0 b-0 (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul ltxa-0 ltxb-0))
              (exp (gen) (mul x y))))))) ((recv y-0) (send y-0)))
  (label 18)
  (parent 11)
  (unrealized (3 1) (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxb x rndx) (w expt) (l y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa l) (ltxb ltxb)
    (x x) (y (mul w l y)))
  (defstrand ltx-gen 1 (self a) (l l))
  (defstrand ltx-gen 1 (self b) (l ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa l) (ltxb ltxb)
    (y y) (x (mul x w l)))
  (deflistener (cat (exp (gen) l) (mul w y)))
  (deflistener y)
  (precedes ((0 1) (3 1)) ((1 0) (0 0)) ((1 0) (3 0)) ((2 0) (0 0))
    ((2 0) (3 0)) ((3 2) (5 0)) ((4 1) (0 2)) ((5 1) (4 0)))
  (absent (y (exp (gen) l)) (y (exp (gen) ltxb))
    (y (exp (gen) (mul x w l))) (x (exp (gen) l)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a l) (b ltxb)) ("principal-of" (l a) (ltxb b)))
  (neq ((exp (gen) (mul x w l)) (gen)) (a b)
    ((exp (gen) (mul w l y)) (gen)))
  (non-orig ltxb l)
  (precur (4 0))
  (uniq-gen ltxb x l y)
  (uniq-orig na nb)
  (operation nonce-test (added-listener y) (mul w y) (4 0))
  (traces
    ((recv (cat (exp (gen) l) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w l y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxb l)) (exp (gen) (mul x w l y))))))
      (send nb)) ((send (cat a (exp (gen) l))))
    ((send (cat b (exp (gen) ltxb))))
    ((recv (cat (exp (gen) l) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul x w l))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxb l))
              (exp (gen) (mul x w l y)))))))
    ((recv (cat (exp (gen) l) (mul w y)))
      (send (cat (exp (gen) l) (mul w y)))) ((recv y) (send y)))
  (label 19)
  (parent 12)
  (unrealized (3 1) (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa x rndx) (w expt) (l y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb l)
    (x x) (y (mul w l y)))
  (defstrand ltx-gen 1 (self a) (l ltxa))
  (defstrand ltx-gen 1 (self b) (l l))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb l)
    (y y) (x (mul x w l)))
  (deflistener (cat (exp (gen) l) (mul w y)))
  (deflistener y)
  (precedes ((0 1) (3 1)) ((1 0) (0 0)) ((1 0) (3 0)) ((2 0) (0 0))
    ((2 0) (3 0)) ((3 2) (5 0)) ((4 1) (0 2)) ((5 1) (4 0)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) l))
    (y (exp (gen) (mul x w l))) (x (exp (gen) ltxa)) (x (exp (gen) l)))
  (fn-of ("ltx-of" (b l) (a ltxa)) ("principal-of" (l b) (ltxa a)))
  (neq ((exp (gen) (mul x w l)) (gen)) (a b)
    ((exp (gen) (mul w l y)) (gen)))
  (non-orig ltxa l)
  (precur (4 0))
  (uniq-gen ltxa x l y)
  (uniq-orig na nb)
  (operation nonce-test (added-listener y) (mul w y) (4 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) l)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w l y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa l)) (exp (gen) (mul x w l y))))))
      (send nb)) ((send (cat a (exp (gen) ltxa))))
    ((send (cat b (exp (gen) l))))
    ((recv (cat (exp (gen) ltxa) (exp (gen) l)))
      (recv (cat na a b (exp (gen) (mul x w l))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa l))
              (exp (gen) (mul x w l y)))))))
    ((recv (cat (exp (gen) l) (mul w y)))
      (send (cat (exp (gen) l) (mul w y)))) ((recv y) (send y)))
  (label 20)
  (parent 13)
  (unrealized (3 1) (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (na nb data) (a b self name) (ltxa ltxb x rndx) (w expt)
    (l y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul w l y)))
  (defstrand ltx-gen 1 (self a) (l ltxa))
  (defstrand ltx-gen 1 (self b) (l ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x (mul x w l)))
  (deflistener (cat (exp (gen) l) (mul w y)))
  (defstrand ltx-gen 1 (self self) (l l))
  (deflistener y)
  (precedes ((0 1) (3 1)) ((1 0) (0 0)) ((1 0) (3 0)) ((2 0) (0 0))
    ((2 0) (3 0)) ((3 2) (6 0)) ((4 1) (0 2)) ((5 0) (3 1))
    ((6 1) (4 0)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) ltxb))
    (y (exp (gen) (mul x w l))) (x (exp (gen) ltxa))
    (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (self l) (a ltxa) (b ltxb))
    ("principal-of" (l self) (ltxa a) (ltxb b)))
  (neq ((exp (gen) (mul x w l)) (gen)) (a b)
    ((exp (gen) (mul w l y)) (gen)))
  (non-orig ltxa ltxb)
  (precur (4 0))
  (uniq-gen ltxa ltxb x l y)
  (uniq-orig na nb)
  (operation nonce-test (added-listener y) (mul w y) (4 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w l y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x w l y)))))) (send nb))
    ((send (cat a (exp (gen) ltxa)))) ((send (cat b (exp (gen) ltxb))))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul x w l))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x w l y)))))))
    ((recv (cat (exp (gen) l) (mul w y)))
      (send (cat (exp (gen) l) (mul w y))))
    ((send (cat self (exp (gen) l)))) ((recv y) (send y)))
  (label 21)
  (parent 14)
  (unrealized (3 1) (6 0))
  (dead)
  (comment "empty cohort"))

(comment "Nothing left to do")

(defprotocol dhcr-um diffie-hellman
  (defrole init
    (vars (ltxa ltxb x rndx) (y expt) (a b name) (na nb data))
    (trace (recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))))
      (send nb))
    (uniq-orig na)
    (uniq-gen x)
    (fn-of ("ltx-of" (a ltxa) (b ltxb))
      ("principal-of" (ltxa a) (ltxb b)))
    (neq ((exp (gen) y) (gen)))
    (absent (x (exp (gen) ltxa)) (x (exp (gen) ltxb))))
  (defrole resp
    (vars (ltxa ltxb y rndx) (x expt) (a b name) (na nb data))
    (trace (recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x))))))
      (recv nb))
    (uniq-orig nb)
    (uniq-gen y)
    (fn-of ("ltx-of" (a ltxa) (b ltxb))
      ("principal-of" (ltxa a) (ltxb b)))
    (neq ((exp (gen) x) (gen)))
    (absent (y (exp (gen) ltxa)) (y (exp (gen) ltxb))
      (y (exp (gen) x))))
  (defrole ltx-gen
    (vars (self name) (l rndx))
    (trace (send (cat self (exp (gen) l))) (recv "end-of-protocol")
      (send l))
    (uniq-gen l)
    (fn-of ("ltx-of" (self l)) ("principal-of" (l self)))))

(defskeleton dhcr-um
  (vars (na nb data) (a b self name) (ltxa ltxb x rndx) (y expt))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y y))
  (defstrand ltx-gen 1 (self self) (l ltxb))
  (absent (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (self ltxb) (a ltxa) (b ltxb))
    ("principal-of" (ltxb self) (ltxa a) (ltxb b)))
  (neq (a b) ((exp (gen) y) (gen)))
  (non-orig ltxb)
  (uniq-gen ltxb x)
  (uniq-orig na)
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))))
      (send nb)) ((send (cat self (exp (gen) ltxb)))))
  (label 22)
  (unrealized (0 0) (0 2))
  (preskeleton)
  (origs (na (0 1)))
  (comment "Not a skeleton"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa ltxb x rndx) (y expt))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y y))
  (defstrand ltx-gen 1 (self b) (l ltxb))
  (precedes ((1 0) (0 0)))
  (absent (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (b ltxb) (a ltxa))
    ("principal-of" (ltxb b) (ltxa a)))
  (neq (a b) ((exp (gen) y) (gen)))
  (non-orig ltxb)
  (uniq-gen ltxb x)
  (uniq-orig na)
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))))
      (send nb)) ((send (cat b (exp (gen) ltxb)))))
  (label 23)
  (parent 22)
  (unrealized)
  (shape)
  (maps
    ((0 1)
      ((ltxa ltxa) (ltxb ltxb) (a a) (b b) (x x) (y y) (na na)
        (nb nb))))
  (origs (na (0 1))))

(comment "Nothing left to do")

(defprotocol dhcr-um diffie-hellman
  (defrole init
    (vars (ltxa ltxb x rndx) (y expt) (a b name) (na nb data))
    (trace (recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))))
      (send nb))
    (uniq-orig na)
    (uniq-gen x)
    (fn-of ("ltx-of" (a ltxa) (b ltxb))
      ("principal-of" (ltxa a) (ltxb b)))
    (neq ((exp (gen) y) (gen)))
    (absent (x (exp (gen) ltxa)) (x (exp (gen) ltxb))))
  (defrole resp
    (vars (ltxa ltxb y rndx) (x expt) (a b name) (na nb data))
    (trace (recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x))))))
      (recv nb))
    (uniq-orig nb)
    (uniq-gen y)
    (fn-of ("ltx-of" (a ltxa) (b ltxb))
      ("principal-of" (ltxa a) (ltxb b)))
    (neq ((exp (gen) x) (gen)))
    (absent (y (exp (gen) ltxa)) (y (exp (gen) ltxb))
      (y (exp (gen) x))))
  (defrole ltx-gen
    (vars (self name) (l rndx))
    (trace (send (cat self (exp (gen) l))) (recv "end-of-protocol")
      (send l))
    (uniq-gen l)
    (fn-of ("ltx-of" (self l)) ("principal-of" (l self)))))

(defskeleton dhcr-um
  (vars (na nb data) (a b self self-0 name) (ltxa ltxb y rndx) (x expt))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x x))
  (defstrand ltx-gen 1 (self self) (l ltxa))
  (defstrand ltx-gen 1 (self self-0) (l ltxb))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) ltxb)) (y (exp (gen) x)))
  (fn-of ("ltx-of" (self-0 ltxb) (self ltxa) (a ltxa) (b ltxb))
    ("principal-of" (ltxb self-0) (ltxa self) (ltxa a) (ltxb b)))
  (neq (a b) ((exp (gen) x) (gen)))
  (non-orig ltxa ltxb)
  (uniq-gen ltxa ltxb y)
  (uniq-orig nb)
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x))))))
      (recv nb)) ((send (cat self (exp (gen) ltxa))))
    ((send (cat self-0 (exp (gen) ltxb)))))
  (label 24)
  (unrealized (0 0) (0 3))
  (preskeleton)
  (origs (nb (0 2)))
  (comment "Not a skeleton"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa ltxb y rndx) (x expt))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x x))
  (defstrand ltx-gen 1 (self a) (l ltxa))
  (defstrand ltx-gen 1 (self b) (l ltxb))
  (precedes ((1 0) (0 0)) ((2 0) (0 0)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) ltxb)) (y (exp (gen) x)))
  (fn-of ("ltx-of" (b ltxb) (a ltxa))
    ("principal-of" (ltxb b) (ltxa a)))
  (neq (a b) ((exp (gen) x) (gen)))
  (non-orig ltxa ltxb)
  (uniq-gen ltxa ltxb y)
  (uniq-orig nb)
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x))))))
      (recv nb)) ((send (cat a (exp (gen) ltxa))))
    ((send (cat b (exp (gen) ltxb)))))
  (label 25)
  (parent 24)
  (unrealized (0 3))
  (origs (nb (0 2)))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa ltxb x rndx) (y expt) (y-0 rndx))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y-0) (x (mul x y)))
  (defstrand ltx-gen 1 (self a) (l ltxa))
  (defstrand ltx-gen 1 (self b) (l ltxb))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul y y-0)))
  (precedes ((0 2) (3 2)) ((1 0) (0 0)) ((1 0) (3 0)) ((2 0) (0 0))
    ((2 0) (3 0)) ((3 1) (0 1)) ((3 3) (0 3)))
  (absent (x (exp (gen) ltxa)) (x (exp (gen) ltxb))
    (y-0 (exp (gen) ltxa)) (y-0 (exp (gen) ltxb))
    (y-0 (exp (gen) (mul x y))))
  (fn-of ("ltx-of" (a ltxa) (b ltxb))
    ("principal-of" (ltxa a) (ltxb b)))
  (neq ((exp (gen) (mul y y-0)) (gen)) (a b)
    ((exp (gen) (mul x y)) (gen)))
  (non-orig ltxa ltxb)
  (uniq-gen ltxa ltxb x y-0)
  (uniq-orig na nb)
  (operation nonce-test (added-strand init 4) nb (0 3)
    (enc na nb a b
      (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y y-0)))))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul x y))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x y y-0)))))) (recv nb))
    ((send (cat a (exp (gen) ltxa)))) ((send (cat b (exp (gen) ltxb))))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y y-0))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x y y-0)))))) (send nb)))
  (label 26)
  (parent 25)
  (unrealized)
  (shape)
  (maps
    ((0 1 2)
      ((ltxa ltxa) (ltxb ltxb) (a a) (b b) (y y-0) (x (mul x y)) (na na)
        (nb nb))))
  (origs (na (3 1)) (nb (0 2))))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa ltxb y rndx) (x expt))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x x))
  (defstrand ltx-gen 1 (self a) (l ltxa))
  (defstrand ltx-gen 1 (self b) (l ltxb))
  (deflistener (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x))))
  (precedes ((0 2) (3 0)) ((1 0) (0 0)) ((2 0) (0 0)) ((3 1) (0 3)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) ltxb)) (y (exp (gen) x)))
  (fn-of ("ltx-of" (b ltxb) (a ltxa))
    ("principal-of" (ltxb b) (ltxa a)))
  (neq (a b) ((exp (gen) x) (gen)))
  (non-orig ltxa ltxb)
  (uniq-gen ltxa ltxb y)
  (uniq-orig nb)
  (operation nonce-test
    (added-listener
      (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x)))) nb (0 3)
    (enc na nb a b
      (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x)))))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x))))))
      (recv nb)) ((send (cat a (exp (gen) ltxa))))
    ((send (cat b (exp (gen) ltxb))))
    ((recv (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x))))
      (send (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x))))))
  (label 27)
  (parent 25)
  (unrealized (3 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa ltxb y rndx) (x expt))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x x))
  (defstrand ltx-gen 1 (self a) (l ltxa))
  (defstrand ltx-gen 1 (self b) (l ltxb))
  (deflistener (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x))))
  (deflistener (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x))))
  (precedes ((0 2) (4 0)) ((1 0) (0 0)) ((2 0) (0 0)) ((3 1) (0 3))
    ((4 1) (3 0)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) ltxb)) (y (exp (gen) x)))
  (fn-of ("ltx-of" (b ltxb) (a ltxa))
    ("principal-of" (ltxb b) (ltxa a)))
  (neq (a b) ((exp (gen) x) (gen)))
  (non-orig ltxa ltxb)
  (uniq-gen ltxa ltxb y)
  (uniq-orig nb)
  (operation encryption-test
    (added-listener
      (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x))))
    (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x))) (3 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x))))))
      (recv nb)) ((send (cat a (exp (gen) ltxa))))
    ((send (cat b (exp (gen) ltxb))))
    ((recv (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x))))
      (send (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x)))))
    ((recv (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x))))
      (send (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x))))))
  (label 28)
  (parent 27)
  (unrealized (4 0))
  (dead)
  (comment "empty cohort"))

(comment "Nothing left to do")

(defprotocol dhcr-um diffie-hellman
  (defrole init
    (vars (ltxa ltxb x rndx) (y expt) (a b name) (na nb data))
    (trace (recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))))
      (send nb))
    (uniq-orig na)
    (uniq-gen x)
    (fn-of ("ltx-of" (a ltxa) (b ltxb))
      ("principal-of" (ltxa a) (ltxb b)))
    (neq ((exp (gen) y) (gen)))
    (absent (x (exp (gen) ltxa)) (x (exp (gen) ltxb))))
  (defrole resp
    (vars (ltxa ltxb y rndx) (x expt) (a b name) (na nb data))
    (trace (recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x))))))
      (recv nb))
    (uniq-orig nb)
    (uniq-gen y)
    (fn-of ("ltx-of" (a ltxa) (b ltxb))
      ("principal-of" (ltxa a) (ltxb b)))
    (neq ((exp (gen) x) (gen)))
    (absent (y (exp (gen) ltxa)) (y (exp (gen) ltxb))
      (y (exp (gen) x))))
  (defrole ltx-gen
    (vars (self name) (l rndx))
    (trace (send (cat self (exp (gen) l))) (recv "end-of-protocol")
      (send l))
    (uniq-gen l)
    (fn-of ("ltx-of" (self l)) ("principal-of" (l self)))))

(defskeleton dhcr-um
  (vars (na nb data) (a b self name) (ltxa ltxb y rndx) (x expt))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x x))
  (defstrand ltx-gen 1 (self self) (l ltxa))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) ltxb)) (y (exp (gen) x)))
  (fn-of ("ltx-of" (self ltxa) (a ltxa) (b ltxb))
    ("principal-of" (ltxa self) (ltxa a) (ltxb b)))
  (neq (a b) ((exp (gen) x) (gen)))
  (non-orig ltxa)
  (uniq-gen ltxa y)
  (uniq-orig nb)
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x))))))
      (recv nb)) ((send (cat self (exp (gen) ltxa)))))
  (label 29)
  (unrealized (0 0) (0 3))
  (preskeleton)
  (origs (nb (0 2)))
  (comment "Not a skeleton"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa ltxb y rndx) (x expt))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x x))
  (defstrand ltx-gen 1 (self a) (l ltxa))
  (precedes ((1 0) (0 0)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) ltxb)) (y (exp (gen) x)))
  (fn-of ("ltx-of" (a ltxa) (b ltxb))
    ("principal-of" (ltxa a) (ltxb b)))
  (neq (a b) ((exp (gen) x) (gen)))
  (non-orig ltxa)
  (uniq-gen ltxa y)
  (uniq-orig nb)
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x))))))
      (recv nb)) ((send (cat a (exp (gen) ltxa)))))
  (label 30)
  (parent 29)
  (unrealized)
  (shape)
  (maps
    ((0 1)
      ((ltxa ltxa) (ltxb ltxb) (a a) (b b) (y y) (x x) (na na)
        (nb nb))))
  (origs (nb (0 2))))

(comment "Nothing left to do")

(defprotocol dhcr-um diffie-hellman
  (defrole init
    (vars (ltxa ltxb x rndx) (y expt) (a b name) (na nb data))
    (trace (recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))))
      (send nb))
    (uniq-orig na)
    (uniq-gen x)
    (fn-of ("ltx-of" (a ltxa) (b ltxb))
      ("principal-of" (ltxa a) (ltxb b)))
    (neq ((exp (gen) y) (gen)))
    (absent (x (exp (gen) ltxa)) (x (exp (gen) ltxb))))
  (defrole resp
    (vars (ltxa ltxb y rndx) (x expt) (a b name) (na nb data))
    (trace (recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x))))))
      (recv nb))
    (uniq-orig nb)
    (uniq-gen y)
    (fn-of ("ltx-of" (a ltxa) (b ltxb))
      ("principal-of" (ltxa a) (ltxb b)))
    (neq ((exp (gen) x) (gen)))
    (absent (y (exp (gen) ltxa)) (y (exp (gen) ltxb))
      (y (exp (gen) x))))
  (defrole ltx-gen
    (vars (self name) (l rndx))
    (trace (send (cat self (exp (gen) l))) (recv "end-of-protocol")
      (send l))
    (uniq-gen l)
    (fn-of ("ltx-of" (self l)) ("principal-of" (l self)))))

(defskeleton dhcr-um
  (vars (na nb data) (a b self self-0 name) (ltxa ltxb x rndx) (y expt))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y y))
  (deflistener (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))
  (defstrand ltx-gen 3 (self self) (l ltxa))
  (defstrand ltx-gen 3 (self self-0) (l ltxb))
  (precedes ((0 3) (2 1)) ((0 3) (3 1)))
  (absent (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (self-0 ltxb) (self ltxa) (a ltxa) (b ltxb))
    ("principal-of" (ltxb self-0) (ltxa self) (ltxa a) (ltxb b)))
  (neq (a b) ((exp (gen) y) (gen)))
  (uniq-gen ltxa ltxb x)
  (uniq-orig na)
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y)))))
    ((send (cat self (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat self-0 (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb)))
  (label 31)
  (unrealized (0 0) (0 2) (1 0))
  (preskeleton)
  (origs (na (0 1)))
  (comment "Not a skeleton"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa ltxb x rndx) (y expt))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y y))
  (deflistener (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (precedes ((0 1) (1 0)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((3 0) (0 0)))
  (absent (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (b ltxb) (a ltxa))
    ("principal-of" (ltxb b) (ltxa a)))
  (neq (a b) ((exp (gen) y) (gen)))
  (uniq-gen ltxa ltxb x)
  (uniq-orig na)
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb)))
  (label 32)
  (parent 31)
  (unrealized (0 2) (1 0))
  (origs (na (0 1)))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa ltxb x rndx) (y expt))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y y))
  (deflistener (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))
  (precedes ((0 1) (4 0)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((3 0) (0 0)) ((4 1) (1 0)))
  (absent (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (b ltxb) (a ltxa))
    ("principal-of" (ltxb b) (ltxa a)))
  (neq (a b) ((exp (gen) y) (gen)))
  (uniq-gen ltxa ltxb x)
  (uniq-orig na)
  (operation encryption-test
    (added-listener
      (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))
    (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))) (1 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))))
  (label 33)
  (parent 32)
  (unrealized (0 2) (4 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa ltxb x rndx) (y expt))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y y))
  (deflistener (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) ltxa) ltxb))
  (precedes ((0 1) (4 0)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (5 0)) ((3 0) (0 0)) ((3 0) (5 0)) ((4 1) (1 0))
    ((5 1) (4 0)))
  (absent (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (b ltxb) (a ltxa))
    ("principal-of" (ltxb b) (ltxa a)))
  (neq (a b) ((exp (gen) y) (gen)))
  (uniq-gen ltxa ltxb x)
  (uniq-orig na)
  (operation nonce-test (added-listener (cat (exp (gen) ltxa) ltxb))
    (exp (gen) (mul ltxa ltxb)) (4 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) ltxa) ltxb))
      (send (cat (exp (gen) ltxa) ltxb))))
  (label 34)
  (parent 33)
  (unrealized (0 2) (5 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa ltxb x rndx) (y expt))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y y))
  (deflistener (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) ltxb) ltxa))
  (precedes ((0 1) (4 0)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (5 0)) ((3 0) (0 0)) ((3 0) (5 0)) ((4 1) (1 0))
    ((5 1) (4 0)))
  (absent (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (b ltxb) (a ltxa))
    ("principal-of" (ltxb b) (ltxa a)))
  (neq (a b) ((exp (gen) y) (gen)))
  (uniq-gen ltxa ltxb x)
  (uniq-orig na)
  (operation nonce-test (added-listener (cat (exp (gen) ltxb) ltxa))
    (exp (gen) (mul ltxa ltxb)) (4 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) ltxb) ltxa))
      (send (cat (exp (gen) ltxb) ltxa))))
  (label 35)
  (parent 33)
  (unrealized (0 2) (5 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa x rndx) (y expt) (l rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb l)
    (x x) (y y))
  (deflistener (hash (exp (gen) (mul ltxa l)) (exp (gen) (mul x y))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l l))
  (deflistener (cat (exp (gen) (mul ltxa l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) ltxa) l))
  (precedes ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0)) ((3 0) (0 0))
    ((3 2) (5 0)) ((4 1) (1 0)) ((5 1) (4 0)))
  (absent (x (exp (gen) ltxa)) (x (exp (gen) l)))
  (fn-of ("ltx-of" (b l) (a ltxa)) ("principal-of" (l b) (ltxa a)))
  (neq (a b) ((exp (gen) y) (gen)))
  (uniq-gen ltxa x l)
  (uniq-orig na)
  (operation nonce-test (displaced 6 3 ltx-gen 3) l (5 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) l)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul ltxa l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul ltxa l)) (exp (gen) (mul x y)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) l))) (recv "end-of-protocol") (send l))
    ((recv (cat (exp (gen) (mul ltxa l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul ltxa l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) ltxa) l)) (send (cat (exp (gen) ltxa) l))))
  (label 36)
  (parent 34)
  (unrealized (0 2))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxb x rndx) (y expt) (l rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa l) (ltxb ltxb)
    (x x) (y y))
  (deflistener (hash (exp (gen) (mul ltxb l)) (exp (gen) (mul x y))))
  (defstrand ltx-gen 3 (self a) (l l))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener (cat (exp (gen) (mul ltxb l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) ltxb) l))
  (precedes ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0)) ((2 2) (5 0))
    ((3 0) (0 0)) ((4 1) (1 0)) ((5 1) (4 0)))
  (absent (x (exp (gen) l)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a l) (b ltxb)) ("principal-of" (l a) (ltxb b)))
  (neq (a b) ((exp (gen) y) (gen)))
  (uniq-gen ltxb x l)
  (uniq-orig na)
  (operation nonce-test (displaced 6 2 ltx-gen 3) l (5 0))
  (traces
    ((recv (cat (exp (gen) l) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxb l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul ltxb l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul ltxb l)) (exp (gen) (mul x y)))))
    ((send (cat a (exp (gen) l))) (recv "end-of-protocol") (send l))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) (mul ltxb l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul ltxb l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) ltxb) l)) (send (cat (exp (gen) ltxb) l))))
  (label 37)
  (parent 35)
  (unrealized (0 2))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa ltxb x y rndx) (x-0 expt))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul (rec x) y x-0)))
  (deflistener
    (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x-0))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener
    (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x-0))))
  (deflistener (cat (exp (gen) ltxa) ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x x-0))
  (precedes ((0 1) (6 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (6 0)) ((3 0) (0 0)) ((3 0) (6 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (0 2)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) ltxb)) (y (exp (gen) x-0))
    (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a ltxa) (b ltxb))
    ("principal-of" (ltxa a) (ltxb b)))
  (neq ((exp (gen) x-0) (gen)) (a b)
    ((exp (gen) (mul (rec x) y x-0)) (gen)))
  (uniq-gen ltxa ltxb x y)
  (uniq-orig na nb)
  (operation encryption-test (added-strand resp 3)
    (enc na nb a b
      (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x-0)))) (0 2))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y x-0))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul y x-0)))))) (send nb))
    ((recv (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x-0))))
      (send (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x-0)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x-0))))
      (send (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x-0)))))
    ((recv (cat (exp (gen) ltxa) ltxb))
      (send (cat (exp (gen) ltxa) ltxb)))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) x-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul y x-0))))))))
  (label 38)
  (parent 36)
  (unrealized (0 2))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa x rndx) (y expt) (l rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb l)
    (x x) (y y))
  (deflistener (hash (exp (gen) (mul ltxa l)) (exp (gen) (mul x y))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l l))
  (deflistener (cat (exp (gen) (mul ltxa l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) ltxa) l))
  (deflistener (hash (exp (gen) (mul ltxa l)) (exp (gen) (mul x y))))
  (precedes ((0 1) (6 0)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((3 0) (0 0)) ((3 2) (5 0)) ((4 1) (1 0)) ((5 1) (4 0))
    ((6 1) (0 2)))
  (absent (x (exp (gen) ltxa)) (x (exp (gen) l)))
  (fn-of ("ltx-of" (b l) (a ltxa)) ("principal-of" (l b) (ltxa a)))
  (neq (a b) ((exp (gen) y) (gen)))
  (uniq-gen ltxa x l)
  (uniq-orig na)
  (operation encryption-test
    (added-listener
      (hash (exp (gen) (mul ltxa l)) (exp (gen) (mul x y))))
    (enc na nb a b
      (hash (exp (gen) (mul ltxa l)) (exp (gen) (mul x y)))) (0 2))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) l)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul ltxa l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul ltxa l)) (exp (gen) (mul x y)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) l))) (recv "end-of-protocol") (send l))
    ((recv (cat (exp (gen) (mul ltxa l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul ltxa l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) ltxa) l)) (send (cat (exp (gen) ltxa) l)))
    ((recv (hash (exp (gen) (mul ltxa l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul ltxa l)) (exp (gen) (mul x y))))))
  (label 39)
  (parent 36)
  (unrealized (6 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa ltxb x y rndx) (x-0 expt))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul (rec x) y x-0)))
  (deflistener
    (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x-0))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener
    (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x-0))))
  (deflistener (cat (exp (gen) ltxb) ltxa))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x x-0))
  (precedes ((0 1) (6 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (6 0)) ((2 2) (5 0)) ((3 0) (0 0)) ((3 0) (6 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (0 2)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) ltxb)) (y (exp (gen) x-0))
    (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a ltxa) (b ltxb))
    ("principal-of" (ltxa a) (ltxb b)))
  (neq ((exp (gen) x-0) (gen)) (a b)
    ((exp (gen) (mul (rec x) y x-0)) (gen)))
  (uniq-gen ltxa ltxb x y)
  (uniq-orig na nb)
  (operation encryption-test (added-strand resp 3)
    (enc na nb a b
      (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x-0)))) (0 2))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y x-0))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul y x-0)))))) (send nb))
    ((recv (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x-0))))
      (send (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x-0)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x-0))))
      (send (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x-0)))))
    ((recv (cat (exp (gen) ltxb) ltxa))
      (send (cat (exp (gen) ltxb) ltxa)))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) x-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul y x-0))))))))
  (label 40)
  (parent 37)
  (unrealized (0 2))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxb x rndx) (y expt) (l rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa l) (ltxb ltxb)
    (x x) (y y))
  (deflistener (hash (exp (gen) (mul ltxb l)) (exp (gen) (mul x y))))
  (defstrand ltx-gen 3 (self a) (l l))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener (cat (exp (gen) (mul ltxb l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) ltxb) l))
  (deflistener (hash (exp (gen) (mul ltxb l)) (exp (gen) (mul x y))))
  (precedes ((0 1) (6 0)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 2) (5 0)) ((3 0) (0 0)) ((4 1) (1 0)) ((5 1) (4 0))
    ((6 1) (0 2)))
  (absent (x (exp (gen) l)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a l) (b ltxb)) ("principal-of" (l a) (ltxb b)))
  (neq (a b) ((exp (gen) y) (gen)))
  (uniq-gen ltxb x l)
  (uniq-orig na)
  (operation encryption-test
    (added-listener
      (hash (exp (gen) (mul ltxb l)) (exp (gen) (mul x y))))
    (enc na nb a b
      (hash (exp (gen) (mul ltxb l)) (exp (gen) (mul x y)))) (0 2))
  (traces
    ((recv (cat (exp (gen) l) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxb l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul ltxb l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul ltxb l)) (exp (gen) (mul x y)))))
    ((send (cat a (exp (gen) l))) (recv "end-of-protocol") (send l))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) (mul ltxb l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul ltxb l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) ltxb) l)) (send (cat (exp (gen) ltxb) l)))
    ((recv (hash (exp (gen) (mul ltxb l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul ltxb l)) (exp (gen) (mul x y))))))
  (label 41)
  (parent 37)
  (unrealized (6 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa ltxb x y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y y))
  (deflistener (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) ltxa) ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x x))
  (precedes ((0 1) (6 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (6 0)) ((3 0) (0 0)) ((3 0) (6 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (0 2)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) ltxb)) (y (exp (gen) x))
    (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a ltxa) (b ltxb))
    ("principal-of" (ltxa a) (ltxb b)))
  (neq ((exp (gen) x) (gen)) (a b) ((exp (gen) y) (gen)))
  (uniq-gen ltxa ltxb x y)
  (uniq-orig na nb)
  (operation nonce-test (displaced 7 6 resp 3) (exp (gen) y-0) (0 2))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) ltxa) ltxb))
      (send (cat (exp (gen) ltxa) ltxb)))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x y))))))))
  (label 42)
  (parent 38)
  (unrealized (4 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa ltxb x y rndx) (x-0 w expt))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul (rec x) y x-0)))
  (deflistener
    (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x-0))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener
    (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x-0))))
  (deflistener (cat (exp (gen) ltxa) ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x x-0))
  (deflistener (cat (exp (gen) (mul (rec x) y x-0 (rec w))) w))
  (precedes ((0 1) (6 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (6 0)) ((3 0) (0 0)) ((3 0) (6 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (7 0)) ((7 1) (0 2)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) ltxb)) (y (exp (gen) x-0))
    (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a ltxa) (b ltxb))
    ("principal-of" (ltxa a) (ltxb b)))
  (neq ((exp (gen) x-0) (gen)) (a b)
    ((exp (gen) (mul (rec x) y x-0)) (gen)))
  (uniq-gen ltxa ltxb x y)
  (uniq-orig na nb)
  (precur (7 0))
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec x) y x-0 (rec w))) w))
    (exp (gen) (mul (rec x) y x-0)) (0 2))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y x-0))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul y x-0)))))) (send nb))
    ((recv (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x-0))))
      (send (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x-0)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x-0))))
      (send (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x-0)))))
    ((recv (cat (exp (gen) ltxa) ltxb))
      (send (cat (exp (gen) ltxa) ltxb)))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) x-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul y x-0)))))))
    ((recv (cat (exp (gen) (mul (rec x) y x-0 (rec w))) w))
      (send (cat (exp (gen) (mul (rec x) y x-0 (rec w))) w))))
  (label 43)
  (parent 38)
  (unrealized (7 0))
  (comment "8 in cohort - 8 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa x rndx) (y expt) (l rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb l)
    (x x) (y y))
  (deflistener (hash (exp (gen) (mul ltxa l)) (exp (gen) (mul x y))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l l))
  (deflistener (cat (exp (gen) (mul ltxa l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) ltxa) l))
  (deflistener (hash (exp (gen) (mul ltxa l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul ltxa l)) (exp (gen) (mul x y))))
  (precedes ((0 1) (7 0)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((3 0) (0 0)) ((3 2) (5 0)) ((4 1) (1 0)) ((5 1) (4 0))
    ((6 1) (0 2)) ((7 1) (6 0)))
  (absent (x (exp (gen) ltxa)) (x (exp (gen) l)))
  (fn-of ("ltx-of" (b l) (a ltxa)) ("principal-of" (l b) (ltxa a)))
  (neq (a b) ((exp (gen) y) (gen)))
  (uniq-gen ltxa x l)
  (uniq-orig na)
  (operation encryption-test
    (added-listener
      (cat (exp (gen) (mul ltxa l)) (exp (gen) (mul x y))))
    (hash (exp (gen) (mul ltxa l)) (exp (gen) (mul x y))) (6 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) l)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul ltxa l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul ltxa l)) (exp (gen) (mul x y)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) l))) (recv "end-of-protocol") (send l))
    ((recv (cat (exp (gen) (mul ltxa l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul ltxa l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) ltxa) l)) (send (cat (exp (gen) ltxa) l)))
    ((recv (hash (exp (gen) (mul ltxa l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul ltxa l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul ltxa l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul ltxa l)) (exp (gen) (mul x y))))))
  (label 44)
  (parent 39)
  (unrealized (7 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa ltxb x y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y y))
  (deflistener (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) ltxb) ltxa))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x x))
  (precedes ((0 1) (6 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (6 0)) ((2 2) (5 0)) ((3 0) (0 0)) ((3 0) (6 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (0 2)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) ltxb)) (y (exp (gen) x))
    (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a ltxa) (b ltxb))
    ("principal-of" (ltxa a) (ltxb b)))
  (neq ((exp (gen) x) (gen)) (a b) ((exp (gen) y) (gen)))
  (uniq-gen ltxa ltxb x y)
  (uniq-orig na nb)
  (operation nonce-test (displaced 7 6 resp 3) (exp (gen) y-0) (0 2))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) ltxb) ltxa))
      (send (cat (exp (gen) ltxb) ltxa)))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x y))))))))
  (label 45)
  (parent 40)
  (unrealized (4 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa ltxb x y rndx) (x-0 w expt))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul (rec x) y x-0)))
  (deflistener
    (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x-0))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener
    (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x-0))))
  (deflistener (cat (exp (gen) ltxb) ltxa))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x x-0))
  (deflistener (cat (exp (gen) (mul (rec x) y x-0 (rec w))) w))
  (precedes ((0 1) (6 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (6 0)) ((2 2) (5 0)) ((3 0) (0 0)) ((3 0) (6 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (7 0)) ((7 1) (0 2)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) ltxb)) (y (exp (gen) x-0))
    (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a ltxa) (b ltxb))
    ("principal-of" (ltxa a) (ltxb b)))
  (neq ((exp (gen) x-0) (gen)) (a b)
    ((exp (gen) (mul (rec x) y x-0)) (gen)))
  (uniq-gen ltxa ltxb x y)
  (uniq-orig na nb)
  (precur (7 0))
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec x) y x-0 (rec w))) w))
    (exp (gen) (mul (rec x) y x-0)) (0 2))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y x-0))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul y x-0)))))) (send nb))
    ((recv (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x-0))))
      (send (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x-0)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x-0))))
      (send (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x-0)))))
    ((recv (cat (exp (gen) ltxb) ltxa))
      (send (cat (exp (gen) ltxb) ltxa)))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) x-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul y x-0)))))))
    ((recv (cat (exp (gen) (mul (rec x) y x-0 (rec w))) w))
      (send (cat (exp (gen) (mul (rec x) y x-0 (rec w))) w))))
  (label 46)
  (parent 40)
  (unrealized (7 0))
  (comment "8 in cohort - 8 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxb x rndx) (y expt) (l rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa l) (ltxb ltxb)
    (x x) (y y))
  (deflistener (hash (exp (gen) (mul ltxb l)) (exp (gen) (mul x y))))
  (defstrand ltx-gen 3 (self a) (l l))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener (cat (exp (gen) (mul ltxb l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) ltxb) l))
  (deflistener (hash (exp (gen) (mul ltxb l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul ltxb l)) (exp (gen) (mul x y))))
  (precedes ((0 1) (7 0)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 2) (5 0)) ((3 0) (0 0)) ((4 1) (1 0)) ((5 1) (4 0))
    ((6 1) (0 2)) ((7 1) (6 0)))
  (absent (x (exp (gen) l)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a l) (b ltxb)) ("principal-of" (l a) (ltxb b)))
  (neq (a b) ((exp (gen) y) (gen)))
  (uniq-gen ltxb x l)
  (uniq-orig na)
  (operation encryption-test
    (added-listener
      (cat (exp (gen) (mul ltxb l)) (exp (gen) (mul x y))))
    (hash (exp (gen) (mul ltxb l)) (exp (gen) (mul x y))) (6 0))
  (traces
    ((recv (cat (exp (gen) l) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxb l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul ltxb l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul ltxb l)) (exp (gen) (mul x y)))))
    ((send (cat a (exp (gen) l))) (recv "end-of-protocol") (send l))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) (mul ltxb l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul ltxb l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) ltxb) l)) (send (cat (exp (gen) ltxb) l)))
    ((recv (hash (exp (gen) (mul ltxb l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul ltxb l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul ltxb l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul ltxb l)) (exp (gen) (mul x y))))))
  (label 47)
  (parent 41)
  (unrealized (7 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa ltxb x y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y y))
  (deflistener (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) ltxa) ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x x))
  (deflistener (cat (exp (gen) x) y))
  (precedes ((0 1) (6 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (6 0)) ((3 0) (0 0)) ((3 0) (6 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (0 2)) ((6 2) (7 0))
    ((7 1) (4 0)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) ltxb)) (y (exp (gen) x))
    (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a ltxa) (b ltxb))
    ("principal-of" (ltxa a) (ltxb b)))
  (neq ((exp (gen) x) (gen)) (a b) ((exp (gen) y) (gen)))
  (uniq-gen ltxa ltxb x y)
  (uniq-orig na nb)
  (operation nonce-test (added-listener (cat (exp (gen) x) y))
    (exp (gen) (mul x y)) (4 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) ltxa) ltxb))
      (send (cat (exp (gen) ltxa) ltxb)))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) x) y)) (send (cat (exp (gen) x) y))))
  (label 48)
  (parent 42)
  (unrealized (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa ltxb x y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y y))
  (deflistener (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) ltxa) ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x x))
  (deflistener (cat (exp (gen) y) x))
  (precedes ((0 1) (6 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (6 0)) ((3 0) (0 0)) ((3 0) (6 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (0 2)) ((6 2) (7 0))
    ((7 1) (4 0)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) ltxb)) (y (exp (gen) x))
    (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a ltxa) (b ltxb))
    ("principal-of" (ltxa a) (ltxb b)))
  (neq ((exp (gen) x) (gen)) (a b) ((exp (gen) y) (gen)))
  (uniq-gen ltxa ltxb x y)
  (uniq-orig na nb)
  (operation nonce-test (added-listener (cat (exp (gen) y) x))
    (exp (gen) (mul x y)) (4 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) ltxa) ltxb))
      (send (cat (exp (gen) ltxa) ltxb)))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) y) x)) (send (cat (exp (gen) y) x))))
  (label 49)
  (parent 42)
  (unrealized (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa ltxb x rndx) (w expt) (y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul w y)))
  (deflistener
    (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w y))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener
    (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w y))))
  (deflistener (cat (exp (gen) ltxa) ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x (mul x w)))
  (deflistener (cat (gen) (mul w y)))
  (precedes ((0 1) (6 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (6 0)) ((3 0) (0 0)) ((3 0) (6 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (7 0)) ((7 1) (0 2)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) ltxb))
    (y (exp (gen) (mul x w))) (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a ltxa) (b ltxb))
    ("principal-of" (ltxa a) (ltxb b)))
  (neq ((exp (gen) (mul x w)) (gen)) (a b)
    ((exp (gen) (mul w y)) (gen)))
  (uniq-gen ltxa ltxb x y)
  (uniq-orig na nb)
  (precur (7 0))
  (operation nonce-test
    (contracted (x-0 x) (y-0 y) (x-1 (mul x w)) (w-0 (mul w y)) (y-1 y)
      (w (mul w y))) (gen) (7 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x w y)))))) (send nb))
    ((recv (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w y))))
      (send (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w y)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w y))))
      (send (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w y)))))
    ((recv (cat (exp (gen) ltxa) ltxb))
      (send (cat (exp (gen) ltxa) ltxb)))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul x w))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x w y)))))))
    ((recv (cat (gen) (mul w y))) (send (cat (gen) (mul w y)))))
  (label 50)
  (parent 43)
  (unrealized (4 0) (7 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (w expt) (ltxa ltxb x y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul w x y)))
  (deflistener
    (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w x x y))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener
    (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w x x y))))
  (deflistener (cat (exp (gen) ltxa) ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x (mul w x x)))
  (deflistener (cat (exp (gen) x) (mul w y)))
  (precedes ((0 1) (6 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (6 0)) ((3 0) (0 0)) ((3 0) (6 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (7 0)) ((7 1) (0 2)))
  (absent (x (exp (gen) ltxa)) (x (exp (gen) ltxb)) (y (exp (gen) ltxa))
    (y (exp (gen) ltxb)) (y (exp (gen) (mul w x x))))
  (fn-of ("ltx-of" (a ltxa) (b ltxb))
    ("principal-of" (ltxa a) (ltxb b)))
  (neq ((exp (gen) (mul w x x)) (gen)) (a b)
    ((exp (gen) (mul w x y)) (gen)))
  (precur (7 0))
  (uniq-gen ltxa ltxb x y)
  (uniq-orig na nb)
  (operation nonce-test (displaced 8 0 init 2) (exp (gen) x-0) (7 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w x y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul w x x y)))))) (send nb))
    ((recv (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w x x y))))
      (send
        (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w x x y)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w x x y))))
      (send
        (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w x x y)))))
    ((recv (cat (exp (gen) ltxa) ltxb))
      (send (cat (exp (gen) ltxa) ltxb)))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul w x x))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul w x x y)))))))
    ((recv (cat (exp (gen) x) (mul w y)))
      (send (cat (exp (gen) x) (mul w y)))))
  (label 51)
  (parent 43)
  (unrealized (0 2) (4 0) (6 1) (7 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb na-0 data) (a b a-0 b-0 name)
    (ltxa ltxb ltxa-0 ltxb-0 x rndx) (w expt) (x-0 y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul w x-0 y)))
  (deflistener
    (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w x-0 y))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener
    (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w x-0 y))))
  (deflistener (cat (exp (gen) ltxa) ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x (mul x w x-0)))
  (deflistener (cat (exp (gen) x-0) (mul w y)))
  (defstrand init 2 (na na-0) (a a-0) (b b-0) (ltxa ltxa-0)
    (ltxb ltxb-0) (x x-0))
  (precedes ((0 1) (6 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (6 0)) ((3 0) (0 0)) ((3 0) (6 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (7 0)) ((7 1) (0 2))
    ((8 1) (6 1)))
  (absent (x-0 (exp (gen) ltxa-0)) (x-0 (exp (gen) ltxb-0))
    (y (exp (gen) ltxa)) (y (exp (gen) ltxb))
    (y (exp (gen) (mul x w x-0))) (x (exp (gen) ltxa))
    (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a-0 ltxa-0) (b-0 ltxb-0) (a ltxa) (b ltxb))
    ("principal-of" (ltxa-0 a-0) (ltxb-0 b-0) (ltxa a) (ltxb b)))
  (neq ((exp (gen) (mul x w x-0)) (gen)) (a b)
    ((exp (gen) (mul w x-0 y)) (gen)))
  (precur (7 0))
  (uniq-gen ltxa ltxb x x-0 y)
  (uniq-orig na nb na-0)
  (operation nonce-test (added-strand init 2) (exp (gen) x-0) (7 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w x-0 y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x w x-0 y)))))) (send nb))
    ((recv
       (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w x-0 y))))
      (send
        (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w x-0 y)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv
       (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w x-0 y))))
      (send
        (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w x-0 y)))))
    ((recv (cat (exp (gen) ltxa) ltxb))
      (send (cat (exp (gen) ltxa) ltxb)))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul x w x-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x w x-0 y)))))))
    ((recv (cat (exp (gen) x-0) (mul w y)))
      (send (cat (exp (gen) x-0) (mul w y))))
    ((recv (cat (exp (gen) ltxa-0) (exp (gen) ltxb-0)))
      (send (cat na-0 a-0 b-0 (exp (gen) x-0)))))
  (label 52)
  (parent 43)
  (unrealized (0 2) (4 0) (6 1) (7 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa ltxb x rndx) (w expt) (y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul w y)))
  (deflistener
    (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w y))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener
    (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w y))))
  (deflistener (cat (exp (gen) ltxa) ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x (mul x w)))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 1) (6 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (6 0)) ((3 0) (0 0)) ((3 0) (6 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (7 0)) ((7 1) (0 2)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) ltxb))
    (y (exp (gen) (mul x w))) (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a ltxa) (b ltxb))
    ("principal-of" (ltxa a) (ltxb b)))
  (neq ((exp (gen) (mul x w)) (gen)) (a b)
    ((exp (gen) (mul w y)) (gen)))
  (precur (7 0))
  (uniq-gen ltxa ltxb x y)
  (uniq-orig na nb)
  (operation nonce-test (displaced 8 6 resp 3) (exp (gen) y-0) (7 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x w y)))))) (send nb))
    ((recv (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w y))))
      (send (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w y)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w y))))
      (send (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w y)))))
    ((recv (cat (exp (gen) ltxa) ltxb))
      (send (cat (exp (gen) ltxa) ltxb)))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul x w))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x w y)))))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 53)
  (parent 43)
  (unrealized (4 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb na-0 nb-0 data) (a b a-0 b-0 name)
    (ltxa ltxb ltxa-0 ltxb-0 rndx) (x expt) (x-0 rndx) (w expt)
    (y y-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x-0) (y (mul w y y-0)))
  (deflistener
    (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x-0 w y y-0))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener
    (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x-0 w y y-0))))
  (deflistener (cat (exp (gen) ltxa) ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y-0) (x (mul x-0 w y)))
  (deflistener (cat (exp (gen) y) (mul w y-0)))
  (defstrand resp 3 (na na-0) (nb nb-0) (a a-0) (b b-0) (ltxa ltxa-0)
    (ltxb ltxb-0) (y y) (x x))
  (precedes ((0 1) (6 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (6 0)) ((3 0) (0 0)) ((3 0) (6 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (7 0)) ((7 1) (0 2))
    ((8 2) (6 1)))
  (absent (y (exp (gen) ltxa-0)) (y (exp (gen) ltxb-0))
    (y (exp (gen) x)) (y-0 (exp (gen) ltxa)) (y-0 (exp (gen) ltxb))
    (y-0 (exp (gen) (mul x-0 w y))) (x-0 (exp (gen) ltxa))
    (x-0 (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a-0 ltxa-0) (b-0 ltxb-0) (a ltxa) (b ltxb))
    ("principal-of" (ltxa-0 a-0) (ltxb-0 b-0) (ltxa a) (ltxb b)))
  (neq ((exp (gen) x) (gen)) ((exp (gen) (mul x-0 w y)) (gen)) (a b)
    ((exp (gen) (mul w y y-0)) (gen)))
  (precur (7 0))
  (uniq-gen ltxa ltxb x-0 y y-0)
  (uniq-orig na nb nb-0)
  (operation nonce-test (added-strand resp 3) (exp (gen) y) (7 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x-0)))
      (recv
        (cat (exp (gen) (mul w y y-0))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x-0 w y y-0)))))) (send nb))
    ((recv
       (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x-0 w y y-0))))
      (send
        (hash (exp (gen) (mul ltxa ltxb))
          (exp (gen) (mul x-0 w y y-0)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv
       (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x-0 w y y-0))))
      (send
        (cat (exp (gen) (mul ltxa ltxb))
          (exp (gen) (mul x-0 w y y-0)))))
    ((recv (cat (exp (gen) ltxa) ltxb))
      (send (cat (exp (gen) ltxa) ltxb)))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul x-0 w y))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x-0 w y y-0)))))))
    ((recv (cat (exp (gen) y) (mul w y-0)))
      (send (cat (exp (gen) y) (mul w y-0))))
    ((recv (cat (exp (gen) ltxa-0) (exp (gen) ltxb-0)))
      (recv (cat na-0 a-0 b-0 (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul ltxa-0 ltxb-0))
              (exp (gen) (mul x y))))))))
  (label 54)
  (parent 43)
  (unrealized (0 2) (4 0) (6 1) (7 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxb x rndx) (w expt) (l y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa l) (ltxb ltxb)
    (x x) (y (mul w l y)))
  (deflistener
    (hash (exp (gen) (mul ltxb l)) (exp (gen) (mul x w l y))))
  (defstrand ltx-gen 3 (self a) (l l))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener (cat (exp (gen) (mul ltxb l)) (exp (gen) (mul x w l y))))
  (deflistener (cat (exp (gen) l) ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa l) (ltxb ltxb)
    (y y) (x (mul x w l)))
  (deflistener (cat (exp (gen) l) (mul w y)))
  (precedes ((0 1) (6 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (6 0)) ((3 0) (0 0)) ((3 0) (6 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (7 0)) ((7 1) (0 2)))
  (absent (y (exp (gen) l)) (y (exp (gen) ltxb))
    (y (exp (gen) (mul x w l))) (x (exp (gen) l)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a l) (b ltxb)) ("principal-of" (l a) (ltxb b)))
  (neq ((exp (gen) (mul x w l)) (gen)) (a b)
    ((exp (gen) (mul w l y)) (gen)))
  (precur (7 0))
  (uniq-gen ltxb x l y)
  (uniq-orig na nb)
  (operation nonce-test (displaced 8 2 ltx-gen 1) (exp (gen) l-0) (7 0))
  (traces
    ((recv (cat (exp (gen) l) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w l y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxb l)) (exp (gen) (mul x w l y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul ltxb l)) (exp (gen) (mul x w l y))))
      (send (hash (exp (gen) (mul ltxb l)) (exp (gen) (mul x w l y)))))
    ((send (cat a (exp (gen) l))) (recv "end-of-protocol") (send l))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) (mul ltxb l)) (exp (gen) (mul x w l y))))
      (send (cat (exp (gen) (mul ltxb l)) (exp (gen) (mul x w l y)))))
    ((recv (cat (exp (gen) l) ltxb)) (send (cat (exp (gen) l) ltxb)))
    ((recv (cat (exp (gen) l) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul x w l))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxb l))
              (exp (gen) (mul x w l y)))))))
    ((recv (cat (exp (gen) l) (mul w y)))
      (send (cat (exp (gen) l) (mul w y)))))
  (label 55)
  (parent 43)
  (unrealized (0 2) (4 0) (6 1) (7 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa x rndx) (w expt) (l y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb l)
    (x x) (y (mul w l y)))
  (deflistener
    (hash (exp (gen) (mul ltxa l)) (exp (gen) (mul x w l y))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l l))
  (deflistener (cat (exp (gen) (mul ltxa l)) (exp (gen) (mul x w l y))))
  (deflistener (cat (exp (gen) ltxa) l))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb l)
    (y y) (x (mul x w l)))
  (deflistener (cat (exp (gen) l) (mul w y)))
  (precedes ((0 1) (6 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (6 0)) ((3 0) (0 0)) ((3 0) (6 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (7 0)) ((7 1) (0 2)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) l))
    (y (exp (gen) (mul x w l))) (x (exp (gen) ltxa)) (x (exp (gen) l)))
  (fn-of ("ltx-of" (b l) (a ltxa)) ("principal-of" (l b) (ltxa a)))
  (neq ((exp (gen) (mul x w l)) (gen)) (a b)
    ((exp (gen) (mul w l y)) (gen)))
  (precur (7 0))
  (uniq-gen ltxa x l y)
  (uniq-orig na nb)
  (operation nonce-test (displaced 8 3 ltx-gen 1) (exp (gen) l-0) (7 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) l)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w l y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa l)) (exp (gen) (mul x w l y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul ltxa l)) (exp (gen) (mul x w l y))))
      (send (hash (exp (gen) (mul ltxa l)) (exp (gen) (mul x w l y)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) l))) (recv "end-of-protocol") (send l))
    ((recv (cat (exp (gen) (mul ltxa l)) (exp (gen) (mul x w l y))))
      (send (cat (exp (gen) (mul ltxa l)) (exp (gen) (mul x w l y)))))
    ((recv (cat (exp (gen) ltxa) l)) (send (cat (exp (gen) ltxa) l)))
    ((recv (cat (exp (gen) ltxa) (exp (gen) l)))
      (recv (cat na a b (exp (gen) (mul x w l))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa l))
              (exp (gen) (mul x w l y)))))))
    ((recv (cat (exp (gen) l) (mul w y)))
      (send (cat (exp (gen) l) (mul w y)))))
  (label 56)
  (parent 43)
  (unrealized (0 2) (4 0) (6 1) (7 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb data) (a b self name) (ltxa ltxb x rndx) (w expt)
    (l y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul w l y)))
  (deflistener
    (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w l y))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener
    (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w l y))))
  (deflistener (cat (exp (gen) ltxa) ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x (mul x w l)))
  (deflistener (cat (exp (gen) l) (mul w y)))
  (defstrand ltx-gen 1 (self self) (l l))
  (precedes ((0 1) (6 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (6 0)) ((3 0) (0 0)) ((3 0) (6 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (7 0)) ((7 1) (0 2))
    ((8 0) (6 1)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) ltxb))
    (y (exp (gen) (mul x w l))) (x (exp (gen) ltxa))
    (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (self l) (a ltxa) (b ltxb))
    ("principal-of" (l self) (ltxa a) (ltxb b)))
  (neq ((exp (gen) (mul x w l)) (gen)) (a b)
    ((exp (gen) (mul w l y)) (gen)))
  (precur (7 0))
  (uniq-gen ltxa ltxb x l y)
  (uniq-orig na nb)
  (operation nonce-test (added-strand ltx-gen 1) (exp (gen) l) (7 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w l y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x w l y)))))) (send nb))
    ((recv (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w l y))))
      (send
        (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w l y)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w l y))))
      (send
        (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w l y)))))
    ((recv (cat (exp (gen) ltxa) ltxb))
      (send (cat (exp (gen) ltxa) ltxb)))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul x w l))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x w l y)))))))
    ((recv (cat (exp (gen) l) (mul w y)))
      (send (cat (exp (gen) l) (mul w y))))
    ((send (cat self (exp (gen) l)))))
  (label 57)
  (parent 43)
  (unrealized (0 2) (4 0) (6 1) (7 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa x rndx) (y expt) (l rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb l)
    (x x) (y y))
  (deflistener (hash (exp (gen) (mul ltxa l)) (exp (gen) (mul x y))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l l))
  (deflistener (cat (exp (gen) (mul ltxa l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) ltxa) l))
  (deflistener (hash (exp (gen) (mul ltxa l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul ltxa l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) ltxa) l))
  (precedes ((0 1) (7 0)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (8 0)) ((3 0) (0 0)) ((3 0) (8 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (0 2)) ((7 1) (6 0))
    ((8 1) (7 0)))
  (absent (x (exp (gen) ltxa)) (x (exp (gen) l)))
  (fn-of ("ltx-of" (b l) (a ltxa)) ("principal-of" (l b) (ltxa a)))
  (neq (a b) ((exp (gen) y) (gen)))
  (uniq-gen ltxa x l)
  (uniq-orig na)
  (operation nonce-test (added-listener (cat (exp (gen) ltxa) l))
    (exp (gen) (mul ltxa l)) (7 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) l)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul ltxa l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul ltxa l)) (exp (gen) (mul x y)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) l))) (recv "end-of-protocol") (send l))
    ((recv (cat (exp (gen) (mul ltxa l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul ltxa l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) ltxa) l)) (send (cat (exp (gen) ltxa) l)))
    ((recv (hash (exp (gen) (mul ltxa l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul ltxa l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul ltxa l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul ltxa l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) ltxa) l)) (send (cat (exp (gen) ltxa) l))))
  (label 58)
  (parent 44)
  (unrealized (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa x rndx) (y expt) (l rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb l)
    (x x) (y y))
  (deflistener (hash (exp (gen) (mul ltxa l)) (exp (gen) (mul x y))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l l))
  (deflistener (cat (exp (gen) (mul ltxa l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) ltxa) l))
  (deflistener (hash (exp (gen) (mul ltxa l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul ltxa l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) ltxa))
  (precedes ((0 1) (7 0)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (8 0)) ((3 0) (0 0)) ((3 0) (8 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (0 2)) ((7 1) (6 0))
    ((8 1) (7 0)))
  (absent (x (exp (gen) ltxa)) (x (exp (gen) l)))
  (fn-of ("ltx-of" (b l) (a ltxa)) ("principal-of" (l b) (ltxa a)))
  (neq (a b) ((exp (gen) y) (gen)))
  (uniq-gen ltxa x l)
  (uniq-orig na)
  (operation nonce-test (added-listener (cat (exp (gen) l) ltxa))
    (exp (gen) (mul ltxa l)) (7 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) l)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul ltxa l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul ltxa l)) (exp (gen) (mul x y)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) l))) (recv "end-of-protocol") (send l))
    ((recv (cat (exp (gen) (mul ltxa l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul ltxa l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) ltxa) l)) (send (cat (exp (gen) ltxa) l)))
    ((recv (hash (exp (gen) (mul ltxa l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul ltxa l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul ltxa l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul ltxa l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) ltxa)) (send (cat (exp (gen) l) ltxa))))
  (label 59)
  (parent 44)
  (unrealized (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa ltxb x y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y y))
  (deflistener (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) ltxb) ltxa))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x x))
  (deflistener (cat (exp (gen) x) y))
  (precedes ((0 1) (6 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (6 0)) ((2 2) (5 0)) ((3 0) (0 0)) ((3 0) (6 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (0 2)) ((6 2) (7 0))
    ((7 1) (4 0)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) ltxb)) (y (exp (gen) x))
    (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a ltxa) (b ltxb))
    ("principal-of" (ltxa a) (ltxb b)))
  (neq ((exp (gen) x) (gen)) (a b) ((exp (gen) y) (gen)))
  (uniq-gen ltxa ltxb x y)
  (uniq-orig na nb)
  (operation nonce-test (added-listener (cat (exp (gen) x) y))
    (exp (gen) (mul x y)) (4 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) ltxb) ltxa))
      (send (cat (exp (gen) ltxb) ltxa)))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) x) y)) (send (cat (exp (gen) x) y))))
  (label 60)
  (parent 45)
  (unrealized (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa ltxb x y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y y))
  (deflistener (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) ltxb) ltxa))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x x))
  (deflistener (cat (exp (gen) y) x))
  (precedes ((0 1) (6 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (6 0)) ((2 2) (5 0)) ((3 0) (0 0)) ((3 0) (6 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (0 2)) ((6 2) (7 0))
    ((7 1) (4 0)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) ltxb)) (y (exp (gen) x))
    (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a ltxa) (b ltxb))
    ("principal-of" (ltxa a) (ltxb b)))
  (neq ((exp (gen) x) (gen)) (a b) ((exp (gen) y) (gen)))
  (uniq-gen ltxa ltxb x y)
  (uniq-orig na nb)
  (operation nonce-test (added-listener (cat (exp (gen) y) x))
    (exp (gen) (mul x y)) (4 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) ltxb) ltxa))
      (send (cat (exp (gen) ltxb) ltxa)))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) y) x)) (send (cat (exp (gen) y) x))))
  (label 61)
  (parent 45)
  (unrealized (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa ltxb x rndx) (w expt) (y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul w y)))
  (deflistener
    (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w y))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener
    (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w y))))
  (deflistener (cat (exp (gen) ltxb) ltxa))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x (mul x w)))
  (deflistener (cat (gen) (mul w y)))
  (precedes ((0 1) (6 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (6 0)) ((2 2) (5 0)) ((3 0) (0 0)) ((3 0) (6 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (7 0)) ((7 1) (0 2)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) ltxb))
    (y (exp (gen) (mul x w))) (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a ltxa) (b ltxb))
    ("principal-of" (ltxa a) (ltxb b)))
  (neq ((exp (gen) (mul x w)) (gen)) (a b)
    ((exp (gen) (mul w y)) (gen)))
  (uniq-gen ltxa ltxb x y)
  (uniq-orig na nb)
  (precur (7 0))
  (operation nonce-test
    (contracted (x-0 x) (y-0 y) (x-1 (mul x w)) (w-0 (mul w y)) (y-1 y)
      (w (mul w y))) (gen) (7 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x w y)))))) (send nb))
    ((recv (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w y))))
      (send (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w y)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w y))))
      (send (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w y)))))
    ((recv (cat (exp (gen) ltxb) ltxa))
      (send (cat (exp (gen) ltxb) ltxa)))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul x w))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x w y)))))))
    ((recv (cat (gen) (mul w y))) (send (cat (gen) (mul w y)))))
  (label 62)
  (parent 46)
  (unrealized (4 0) (7 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (w expt) (ltxa ltxb x y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul w x y)))
  (deflistener
    (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w x x y))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener
    (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w x x y))))
  (deflistener (cat (exp (gen) ltxb) ltxa))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x (mul w x x)))
  (deflistener (cat (exp (gen) x) (mul w y)))
  (precedes ((0 1) (6 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (6 0)) ((2 2) (5 0)) ((3 0) (0 0)) ((3 0) (6 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (7 0)) ((7 1) (0 2)))
  (absent (x (exp (gen) ltxa)) (x (exp (gen) ltxb)) (y (exp (gen) ltxa))
    (y (exp (gen) ltxb)) (y (exp (gen) (mul w x x))))
  (fn-of ("ltx-of" (a ltxa) (b ltxb))
    ("principal-of" (ltxa a) (ltxb b)))
  (neq ((exp (gen) (mul w x x)) (gen)) (a b)
    ((exp (gen) (mul w x y)) (gen)))
  (precur (7 0))
  (uniq-gen ltxa ltxb x y)
  (uniq-orig na nb)
  (operation nonce-test (displaced 8 0 init 2) (exp (gen) x-0) (7 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w x y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul w x x y)))))) (send nb))
    ((recv (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w x x y))))
      (send
        (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w x x y)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w x x y))))
      (send
        (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w x x y)))))
    ((recv (cat (exp (gen) ltxb) ltxa))
      (send (cat (exp (gen) ltxb) ltxa)))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul w x x))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul w x x y)))))))
    ((recv (cat (exp (gen) x) (mul w y)))
      (send (cat (exp (gen) x) (mul w y)))))
  (label 63)
  (parent 46)
  (unrealized (0 2) (4 0) (6 1) (7 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb na-0 data) (a b a-0 b-0 name)
    (ltxa ltxb ltxa-0 ltxb-0 x rndx) (w expt) (x-0 y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul w x-0 y)))
  (deflistener
    (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w x-0 y))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener
    (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w x-0 y))))
  (deflistener (cat (exp (gen) ltxb) ltxa))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x (mul x w x-0)))
  (deflistener (cat (exp (gen) x-0) (mul w y)))
  (defstrand init 2 (na na-0) (a a-0) (b b-0) (ltxa ltxa-0)
    (ltxb ltxb-0) (x x-0))
  (precedes ((0 1) (6 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (6 0)) ((2 2) (5 0)) ((3 0) (0 0)) ((3 0) (6 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (7 0)) ((7 1) (0 2))
    ((8 1) (6 1)))
  (absent (x-0 (exp (gen) ltxa-0)) (x-0 (exp (gen) ltxb-0))
    (y (exp (gen) ltxa)) (y (exp (gen) ltxb))
    (y (exp (gen) (mul x w x-0))) (x (exp (gen) ltxa))
    (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a-0 ltxa-0) (b-0 ltxb-0) (a ltxa) (b ltxb))
    ("principal-of" (ltxa-0 a-0) (ltxb-0 b-0) (ltxa a) (ltxb b)))
  (neq ((exp (gen) (mul x w x-0)) (gen)) (a b)
    ((exp (gen) (mul w x-0 y)) (gen)))
  (precur (7 0))
  (uniq-gen ltxa ltxb x x-0 y)
  (uniq-orig na nb na-0)
  (operation nonce-test (added-strand init 2) (exp (gen) x-0) (7 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w x-0 y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x w x-0 y)))))) (send nb))
    ((recv
       (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w x-0 y))))
      (send
        (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w x-0 y)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv
       (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w x-0 y))))
      (send
        (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w x-0 y)))))
    ((recv (cat (exp (gen) ltxb) ltxa))
      (send (cat (exp (gen) ltxb) ltxa)))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul x w x-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x w x-0 y)))))))
    ((recv (cat (exp (gen) x-0) (mul w y)))
      (send (cat (exp (gen) x-0) (mul w y))))
    ((recv (cat (exp (gen) ltxa-0) (exp (gen) ltxb-0)))
      (send (cat na-0 a-0 b-0 (exp (gen) x-0)))))
  (label 64)
  (parent 46)
  (unrealized (0 2) (4 0) (6 1) (7 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa ltxb x rndx) (w expt) (y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul w y)))
  (deflistener
    (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w y))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener
    (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w y))))
  (deflistener (cat (exp (gen) ltxb) ltxa))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x (mul x w)))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 1) (6 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (6 0)) ((2 2) (5 0)) ((3 0) (0 0)) ((3 0) (6 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (7 0)) ((7 1) (0 2)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) ltxb))
    (y (exp (gen) (mul x w))) (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a ltxa) (b ltxb))
    ("principal-of" (ltxa a) (ltxb b)))
  (neq ((exp (gen) (mul x w)) (gen)) (a b)
    ((exp (gen) (mul w y)) (gen)))
  (precur (7 0))
  (uniq-gen ltxa ltxb x y)
  (uniq-orig na nb)
  (operation nonce-test (displaced 8 6 resp 3) (exp (gen) y-0) (7 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x w y)))))) (send nb))
    ((recv (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w y))))
      (send (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w y)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w y))))
      (send (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w y)))))
    ((recv (cat (exp (gen) ltxb) ltxa))
      (send (cat (exp (gen) ltxb) ltxa)))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul x w))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x w y)))))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 65)
  (parent 46)
  (unrealized (4 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb na-0 nb-0 data) (a b a-0 b-0 name)
    (ltxa ltxb ltxa-0 ltxb-0 rndx) (x expt) (x-0 rndx) (w expt)
    (y y-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x-0) (y (mul w y y-0)))
  (deflistener
    (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x-0 w y y-0))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener
    (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x-0 w y y-0))))
  (deflistener (cat (exp (gen) ltxb) ltxa))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y-0) (x (mul x-0 w y)))
  (deflistener (cat (exp (gen) y) (mul w y-0)))
  (defstrand resp 3 (na na-0) (nb nb-0) (a a-0) (b b-0) (ltxa ltxa-0)
    (ltxb ltxb-0) (y y) (x x))
  (precedes ((0 1) (6 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (6 0)) ((2 2) (5 0)) ((3 0) (0 0)) ((3 0) (6 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (7 0)) ((7 1) (0 2))
    ((8 2) (6 1)))
  (absent (y (exp (gen) ltxa-0)) (y (exp (gen) ltxb-0))
    (y (exp (gen) x)) (y-0 (exp (gen) ltxa)) (y-0 (exp (gen) ltxb))
    (y-0 (exp (gen) (mul x-0 w y))) (x-0 (exp (gen) ltxa))
    (x-0 (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a-0 ltxa-0) (b-0 ltxb-0) (a ltxa) (b ltxb))
    ("principal-of" (ltxa-0 a-0) (ltxb-0 b-0) (ltxa a) (ltxb b)))
  (neq ((exp (gen) x) (gen)) ((exp (gen) (mul x-0 w y)) (gen)) (a b)
    ((exp (gen) (mul w y y-0)) (gen)))
  (precur (7 0))
  (uniq-gen ltxa ltxb x-0 y y-0)
  (uniq-orig na nb nb-0)
  (operation nonce-test (added-strand resp 3) (exp (gen) y) (7 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x-0)))
      (recv
        (cat (exp (gen) (mul w y y-0))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x-0 w y y-0)))))) (send nb))
    ((recv
       (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x-0 w y y-0))))
      (send
        (hash (exp (gen) (mul ltxa ltxb))
          (exp (gen) (mul x-0 w y y-0)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv
       (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x-0 w y y-0))))
      (send
        (cat (exp (gen) (mul ltxa ltxb))
          (exp (gen) (mul x-0 w y y-0)))))
    ((recv (cat (exp (gen) ltxb) ltxa))
      (send (cat (exp (gen) ltxb) ltxa)))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul x-0 w y))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x-0 w y y-0)))))))
    ((recv (cat (exp (gen) y) (mul w y-0)))
      (send (cat (exp (gen) y) (mul w y-0))))
    ((recv (cat (exp (gen) ltxa-0) (exp (gen) ltxb-0)))
      (recv (cat na-0 a-0 b-0 (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul ltxa-0 ltxb-0))
              (exp (gen) (mul x y))))))))
  (label 66)
  (parent 46)
  (unrealized (0 2) (4 0) (6 1) (7 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxb x rndx) (w expt) (l y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa l) (ltxb ltxb)
    (x x) (y (mul w l y)))
  (deflistener
    (hash (exp (gen) (mul ltxb l)) (exp (gen) (mul x w l y))))
  (defstrand ltx-gen 3 (self a) (l l))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener (cat (exp (gen) (mul ltxb l)) (exp (gen) (mul x w l y))))
  (deflistener (cat (exp (gen) ltxb) l))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa l) (ltxb ltxb)
    (y y) (x (mul x w l)))
  (deflistener (cat (exp (gen) l) (mul w y)))
  (precedes ((0 1) (6 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (6 0)) ((2 2) (5 0)) ((3 0) (0 0)) ((3 0) (6 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (7 0)) ((7 1) (0 2)))
  (absent (y (exp (gen) l)) (y (exp (gen) ltxb))
    (y (exp (gen) (mul x w l))) (x (exp (gen) l)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a l) (b ltxb)) ("principal-of" (l a) (ltxb b)))
  (neq ((exp (gen) (mul x w l)) (gen)) (a b)
    ((exp (gen) (mul w l y)) (gen)))
  (precur (7 0))
  (uniq-gen ltxb x l y)
  (uniq-orig na nb)
  (operation nonce-test (displaced 8 2 ltx-gen 1) (exp (gen) l-0) (7 0))
  (traces
    ((recv (cat (exp (gen) l) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w l y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxb l)) (exp (gen) (mul x w l y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul ltxb l)) (exp (gen) (mul x w l y))))
      (send (hash (exp (gen) (mul ltxb l)) (exp (gen) (mul x w l y)))))
    ((send (cat a (exp (gen) l))) (recv "end-of-protocol") (send l))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) (mul ltxb l)) (exp (gen) (mul x w l y))))
      (send (cat (exp (gen) (mul ltxb l)) (exp (gen) (mul x w l y)))))
    ((recv (cat (exp (gen) ltxb) l)) (send (cat (exp (gen) ltxb) l)))
    ((recv (cat (exp (gen) l) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul x w l))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxb l))
              (exp (gen) (mul x w l y)))))))
    ((recv (cat (exp (gen) l) (mul w y)))
      (send (cat (exp (gen) l) (mul w y)))))
  (label 67)
  (parent 46)
  (unrealized (0 2) (4 0) (6 1) (7 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa x rndx) (w expt) (l y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb l)
    (x x) (y (mul w l y)))
  (deflistener
    (hash (exp (gen) (mul ltxa l)) (exp (gen) (mul x w l y))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l l))
  (deflistener (cat (exp (gen) (mul ltxa l)) (exp (gen) (mul x w l y))))
  (deflistener (cat (exp (gen) l) ltxa))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb l)
    (y y) (x (mul x w l)))
  (deflistener (cat (exp (gen) l) (mul w y)))
  (precedes ((0 1) (6 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (6 0)) ((2 2) (5 0)) ((3 0) (0 0)) ((3 0) (6 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (7 0)) ((7 1) (0 2)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) l))
    (y (exp (gen) (mul x w l))) (x (exp (gen) ltxa)) (x (exp (gen) l)))
  (fn-of ("ltx-of" (b l) (a ltxa)) ("principal-of" (l b) (ltxa a)))
  (neq ((exp (gen) (mul x w l)) (gen)) (a b)
    ((exp (gen) (mul w l y)) (gen)))
  (precur (7 0))
  (uniq-gen ltxa x l y)
  (uniq-orig na nb)
  (operation nonce-test (displaced 8 3 ltx-gen 1) (exp (gen) l-0) (7 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) l)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w l y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa l)) (exp (gen) (mul x w l y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul ltxa l)) (exp (gen) (mul x w l y))))
      (send (hash (exp (gen) (mul ltxa l)) (exp (gen) (mul x w l y)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) l))) (recv "end-of-protocol") (send l))
    ((recv (cat (exp (gen) (mul ltxa l)) (exp (gen) (mul x w l y))))
      (send (cat (exp (gen) (mul ltxa l)) (exp (gen) (mul x w l y)))))
    ((recv (cat (exp (gen) l) ltxa)) (send (cat (exp (gen) l) ltxa)))
    ((recv (cat (exp (gen) ltxa) (exp (gen) l)))
      (recv (cat na a b (exp (gen) (mul x w l))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa l))
              (exp (gen) (mul x w l y)))))))
    ((recv (cat (exp (gen) l) (mul w y)))
      (send (cat (exp (gen) l) (mul w y)))))
  (label 68)
  (parent 46)
  (unrealized (0 2) (4 0) (6 1) (7 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb data) (a b self name) (ltxa ltxb x rndx) (w expt)
    (l y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul w l y)))
  (deflistener
    (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w l y))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener
    (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w l y))))
  (deflistener (cat (exp (gen) ltxb) ltxa))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x (mul x w l)))
  (deflistener (cat (exp (gen) l) (mul w y)))
  (defstrand ltx-gen 1 (self self) (l l))
  (precedes ((0 1) (6 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (6 0)) ((2 2) (5 0)) ((3 0) (0 0)) ((3 0) (6 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (7 0)) ((7 1) (0 2))
    ((8 0) (6 1)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) ltxb))
    (y (exp (gen) (mul x w l))) (x (exp (gen) ltxa))
    (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (self l) (a ltxa) (b ltxb))
    ("principal-of" (l self) (ltxa a) (ltxb b)))
  (neq ((exp (gen) (mul x w l)) (gen)) (a b)
    ((exp (gen) (mul w l y)) (gen)))
  (precur (7 0))
  (uniq-gen ltxa ltxb x l y)
  (uniq-orig na nb)
  (operation nonce-test (added-strand ltx-gen 1) (exp (gen) l) (7 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w l y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x w l y)))))) (send nb))
    ((recv (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w l y))))
      (send
        (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w l y)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w l y))))
      (send
        (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w l y)))))
    ((recv (cat (exp (gen) ltxb) ltxa))
      (send (cat (exp (gen) ltxb) ltxa)))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul x w l))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x w l y)))))))
    ((recv (cat (exp (gen) l) (mul w y)))
      (send (cat (exp (gen) l) (mul w y))))
    ((send (cat self (exp (gen) l)))))
  (label 69)
  (parent 46)
  (unrealized (0 2) (4 0) (6 1) (7 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxb x rndx) (y expt) (l rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa l) (ltxb ltxb)
    (x x) (y y))
  (deflistener (hash (exp (gen) (mul ltxb l)) (exp (gen) (mul x y))))
  (defstrand ltx-gen 3 (self a) (l l))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener (cat (exp (gen) (mul ltxb l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) ltxb) l))
  (deflistener (hash (exp (gen) (mul ltxb l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul ltxb l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) ltxb) l))
  (precedes ((0 1) (7 0)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (8 0)) ((2 2) (5 0)) ((3 0) (0 0)) ((3 0) (8 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (0 2)) ((7 1) (6 0))
    ((8 1) (7 0)))
  (absent (x (exp (gen) l)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a l) (b ltxb)) ("principal-of" (l a) (ltxb b)))
  (neq (a b) ((exp (gen) y) (gen)))
  (uniq-gen ltxb x l)
  (uniq-orig na)
  (operation nonce-test (added-listener (cat (exp (gen) ltxb) l))
    (exp (gen) (mul ltxb l)) (7 0))
  (traces
    ((recv (cat (exp (gen) l) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxb l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul ltxb l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul ltxb l)) (exp (gen) (mul x y)))))
    ((send (cat a (exp (gen) l))) (recv "end-of-protocol") (send l))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) (mul ltxb l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul ltxb l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) ltxb) l)) (send (cat (exp (gen) ltxb) l)))
    ((recv (hash (exp (gen) (mul ltxb l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul ltxb l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul ltxb l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul ltxb l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) ltxb) l)) (send (cat (exp (gen) ltxb) l))))
  (label 70)
  (parent 47)
  (unrealized (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxb x rndx) (y expt) (l rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa l) (ltxb ltxb)
    (x x) (y y))
  (deflistener (hash (exp (gen) (mul ltxb l)) (exp (gen) (mul x y))))
  (defstrand ltx-gen 3 (self a) (l l))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener (cat (exp (gen) (mul ltxb l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) ltxb) l))
  (deflistener (hash (exp (gen) (mul ltxb l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul ltxb l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) ltxb))
  (precedes ((0 1) (7 0)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (8 0)) ((2 2) (5 0)) ((3 0) (0 0)) ((3 0) (8 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (0 2)) ((7 1) (6 0))
    ((8 1) (7 0)))
  (absent (x (exp (gen) l)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a l) (b ltxb)) ("principal-of" (l a) (ltxb b)))
  (neq (a b) ((exp (gen) y) (gen)))
  (uniq-gen ltxb x l)
  (uniq-orig na)
  (operation nonce-test (added-listener (cat (exp (gen) l) ltxb))
    (exp (gen) (mul ltxb l)) (7 0))
  (traces
    ((recv (cat (exp (gen) l) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxb l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul ltxb l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul ltxb l)) (exp (gen) (mul x y)))))
    ((send (cat a (exp (gen) l))) (recv "end-of-protocol") (send l))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) (mul ltxb l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul ltxb l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) ltxb) l)) (send (cat (exp (gen) ltxb) l)))
    ((recv (hash (exp (gen) (mul ltxb l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul ltxb l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul ltxb l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul ltxb l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) ltxb)) (send (cat (exp (gen) l) ltxb))))
  (label 71)
  (parent 47)
  (unrealized (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa ltxb x rndx) (w expt) (y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul w y)))
  (deflistener
    (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w y))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener
    (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w y))))
  (deflistener (cat (exp (gen) ltxa) ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x (mul x w)))
  (deflistener (cat (gen) (mul w y)))
  (deflistener y)
  (precedes ((0 1) (6 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (6 0)) ((3 0) (0 0)) ((3 0) (6 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (8 0)) ((7 1) (0 2))
    ((8 1) (7 0)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) ltxb))
    (y (exp (gen) (mul x w))) (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a ltxa) (b ltxb))
    ("principal-of" (ltxa a) (ltxb b)))
  (neq ((exp (gen) (mul x w)) (gen)) (a b)
    ((exp (gen) (mul w y)) (gen)))
  (uniq-gen ltxa ltxb x y)
  (uniq-orig na nb)
  (precur (7 0))
  (operation nonce-test (added-listener y) (mul w y) (7 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x w y)))))) (send nb))
    ((recv (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w y))))
      (send (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w y)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w y))))
      (send (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w y)))))
    ((recv (cat (exp (gen) ltxa) ltxb))
      (send (cat (exp (gen) ltxa) ltxb)))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul x w))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x w y)))))))
    ((recv (cat (gen) (mul w y))) (send (cat (gen) (mul w y))))
    ((recv y) (send y)))
  (label 72)
  (parent 50)
  (unrealized (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (w expt) (ltxa ltxb x y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul w x y)))
  (deflistener
    (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w x x y))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener
    (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w x x y))))
  (deflistener (cat (exp (gen) ltxa) ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x (mul w x x)))
  (deflistener (cat (exp (gen) x) (mul w y)))
  (deflistener y)
  (precedes ((0 1) (6 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (6 0)) ((3 0) (0 0)) ((3 0) (6 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (8 0)) ((7 1) (0 2))
    ((8 1) (7 0)))
  (absent (x (exp (gen) ltxa)) (x (exp (gen) ltxb)) (y (exp (gen) ltxa))
    (y (exp (gen) ltxb)) (y (exp (gen) (mul w x x))))
  (fn-of ("ltx-of" (a ltxa) (b ltxb))
    ("principal-of" (ltxa a) (ltxb b)))
  (neq ((exp (gen) (mul w x x)) (gen)) (a b)
    ((exp (gen) (mul w x y)) (gen)))
  (precur (7 0))
  (uniq-gen ltxa ltxb x y)
  (uniq-orig na nb)
  (operation nonce-test (added-listener y) (mul w y) (7 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w x y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul w x x y)))))) (send nb))
    ((recv (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w x x y))))
      (send
        (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w x x y)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w x x y))))
      (send
        (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w x x y)))))
    ((recv (cat (exp (gen) ltxa) ltxb))
      (send (cat (exp (gen) ltxa) ltxb)))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul w x x))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul w x x y)))))))
    ((recv (cat (exp (gen) x) (mul w y)))
      (send (cat (exp (gen) x) (mul w y)))) ((recv y) (send y)))
  (label 73)
  (parent 51)
  (unrealized (4 0) (6 1) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (na nb na-0 data) (a b a-0 b-0 name)
    (ltxa ltxb ltxa-0 ltxb-0 x rndx) (w expt) (x-0 y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul w x-0 y)))
  (deflistener
    (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w x-0 y))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener
    (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w x-0 y))))
  (deflistener (cat (exp (gen) ltxa) ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x (mul x w x-0)))
  (deflistener (cat (exp (gen) x-0) (mul w y)))
  (defstrand init 2 (na na-0) (a a-0) (b b-0) (ltxa ltxa-0)
    (ltxb ltxb-0) (x x-0))
  (deflistener y)
  (precedes ((0 1) (6 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (6 0)) ((3 0) (0 0)) ((3 0) (6 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (9 0)) ((7 1) (0 2))
    ((8 1) (6 1)) ((9 1) (7 0)))
  (absent (x-0 (exp (gen) ltxa-0)) (x-0 (exp (gen) ltxb-0))
    (y (exp (gen) ltxa)) (y (exp (gen) ltxb))
    (y (exp (gen) (mul x w x-0))) (x (exp (gen) ltxa))
    (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a-0 ltxa-0) (b-0 ltxb-0) (a ltxa) (b ltxb))
    ("principal-of" (ltxa-0 a-0) (ltxb-0 b-0) (ltxa a) (ltxb b)))
  (neq ((exp (gen) (mul x w x-0)) (gen)) (a b)
    ((exp (gen) (mul w x-0 y)) (gen)))
  (precur (7 0))
  (uniq-gen ltxa ltxb x x-0 y)
  (uniq-orig na nb na-0)
  (operation nonce-test (added-listener y) (mul w y) (7 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w x-0 y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x w x-0 y)))))) (send nb))
    ((recv
       (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w x-0 y))))
      (send
        (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w x-0 y)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv
       (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w x-0 y))))
      (send
        (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w x-0 y)))))
    ((recv (cat (exp (gen) ltxa) ltxb))
      (send (cat (exp (gen) ltxa) ltxb)))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul x w x-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x w x-0 y)))))))
    ((recv (cat (exp (gen) x-0) (mul w y)))
      (send (cat (exp (gen) x-0) (mul w y))))
    ((recv (cat (exp (gen) ltxa-0) (exp (gen) ltxb-0)))
      (send (cat na-0 a-0 b-0 (exp (gen) x-0)))) ((recv y) (send y)))
  (label 74)
  (parent 52)
  (unrealized (4 0) (6 1) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa ltxb x rndx) (w expt) (y rndx)
    (w-0 expt))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul w y)))
  (deflistener
    (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w y))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener
    (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w y))))
  (deflistener (cat (exp (gen) ltxa) ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x (mul x w)))
  (deflistener (cat (exp (gen) y) w))
  (deflistener (cat (exp (gen) (mul x w y (rec w-0))) w-0))
  (precedes ((0 1) (6 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (6 0)) ((3 0) (0 0)) ((3 0) (6 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (7 0)) ((6 2) (8 0))
    ((7 1) (0 2)) ((8 1) (4 0)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) ltxb))
    (y (exp (gen) (mul x w))) (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a ltxa) (b ltxb))
    ("principal-of" (ltxa a) (ltxb b)))
  (neq ((exp (gen) (mul x w)) (gen)) (a b)
    ((exp (gen) (mul w y)) (gen)))
  (precur (8 0) (7 0))
  (uniq-gen ltxa ltxb x y)
  (uniq-orig na nb)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul x w y (rec w-0))) w-0))
    (exp (gen) (mul x w y)) (4 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x w y)))))) (send nb))
    ((recv (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w y))))
      (send (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w y)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w y))))
      (send (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w y)))))
    ((recv (cat (exp (gen) ltxa) ltxb))
      (send (cat (exp (gen) ltxa) ltxb)))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul x w))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x w y)))))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w)))
    ((recv (cat (exp (gen) (mul x w y (rec w-0))) w-0))
      (send (cat (exp (gen) (mul x w y (rec w-0))) w-0))))
  (label 75)
  (parent 53)
  (unrealized (8 0))
  (comment "8 in cohort - 8 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb na-0 nb-0 data) (a b a-0 b-0 name)
    (ltxa ltxb ltxa-0 ltxb-0 rndx) (x expt) (x-0 rndx) (w expt)
    (y y-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x-0) (y (mul w y y-0)))
  (deflistener
    (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x-0 w y y-0))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener
    (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x-0 w y y-0))))
  (deflistener (cat (exp (gen) ltxa) ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y-0) (x (mul x-0 w y)))
  (deflistener (cat (exp (gen) y) (mul w y-0)))
  (defstrand resp 3 (na na-0) (nb nb-0) (a a-0) (b b-0) (ltxa ltxa-0)
    (ltxb ltxb-0) (y y) (x x))
  (deflistener y-0)
  (precedes ((0 1) (6 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (6 0)) ((3 0) (0 0)) ((3 0) (6 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (9 0)) ((7 1) (0 2))
    ((8 2) (6 1)) ((9 1) (7 0)))
  (absent (y (exp (gen) ltxa-0)) (y (exp (gen) ltxb-0))
    (y (exp (gen) x)) (y-0 (exp (gen) ltxa)) (y-0 (exp (gen) ltxb))
    (y-0 (exp (gen) (mul x-0 w y))) (x-0 (exp (gen) ltxa))
    (x-0 (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a-0 ltxa-0) (b-0 ltxb-0) (a ltxa) (b ltxb))
    ("principal-of" (ltxa-0 a-0) (ltxb-0 b-0) (ltxa a) (ltxb b)))
  (neq ((exp (gen) x) (gen)) ((exp (gen) (mul x-0 w y)) (gen)) (a b)
    ((exp (gen) (mul w y y-0)) (gen)))
  (precur (7 0))
  (uniq-gen ltxa ltxb x-0 y y-0)
  (uniq-orig na nb nb-0)
  (operation nonce-test (added-listener y-0) (mul w y-0) (7 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x-0)))
      (recv
        (cat (exp (gen) (mul w y y-0))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x-0 w y y-0)))))) (send nb))
    ((recv
       (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x-0 w y y-0))))
      (send
        (hash (exp (gen) (mul ltxa ltxb))
          (exp (gen) (mul x-0 w y y-0)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv
       (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x-0 w y y-0))))
      (send
        (cat (exp (gen) (mul ltxa ltxb))
          (exp (gen) (mul x-0 w y y-0)))))
    ((recv (cat (exp (gen) ltxa) ltxb))
      (send (cat (exp (gen) ltxa) ltxb)))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul x-0 w y))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x-0 w y y-0)))))))
    ((recv (cat (exp (gen) y) (mul w y-0)))
      (send (cat (exp (gen) y) (mul w y-0))))
    ((recv (cat (exp (gen) ltxa-0) (exp (gen) ltxb-0)))
      (recv (cat na-0 a-0 b-0 (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul ltxa-0 ltxb-0))
              (exp (gen) (mul x y))))))) ((recv y-0) (send y-0)))
  (label 76)
  (parent 54)
  (unrealized (4 0) (6 1) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxb x rndx) (w expt) (l y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa l) (ltxb ltxb)
    (x x) (y (mul w l y)))
  (deflistener
    (hash (exp (gen) (mul ltxb l)) (exp (gen) (mul x w l y))))
  (defstrand ltx-gen 3 (self a) (l l))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener (cat (exp (gen) (mul ltxb l)) (exp (gen) (mul x w l y))))
  (deflistener (cat (exp (gen) l) ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa l) (ltxb ltxb)
    (y y) (x (mul x w l)))
  (deflistener (cat (exp (gen) l) (mul w y)))
  (deflistener y)
  (precedes ((0 1) (6 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (6 0)) ((3 0) (0 0)) ((3 0) (6 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (8 0)) ((7 1) (0 2))
    ((8 1) (7 0)))
  (absent (y (exp (gen) l)) (y (exp (gen) ltxb))
    (y (exp (gen) (mul x w l))) (x (exp (gen) l)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a l) (b ltxb)) ("principal-of" (l a) (ltxb b)))
  (neq ((exp (gen) (mul x w l)) (gen)) (a b)
    ((exp (gen) (mul w l y)) (gen)))
  (precur (7 0))
  (uniq-gen ltxb x l y)
  (uniq-orig na nb)
  (operation nonce-test (added-listener y) (mul w y) (7 0))
  (traces
    ((recv (cat (exp (gen) l) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w l y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxb l)) (exp (gen) (mul x w l y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul ltxb l)) (exp (gen) (mul x w l y))))
      (send (hash (exp (gen) (mul ltxb l)) (exp (gen) (mul x w l y)))))
    ((send (cat a (exp (gen) l))) (recv "end-of-protocol") (send l))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) (mul ltxb l)) (exp (gen) (mul x w l y))))
      (send (cat (exp (gen) (mul ltxb l)) (exp (gen) (mul x w l y)))))
    ((recv (cat (exp (gen) l) ltxb)) (send (cat (exp (gen) l) ltxb)))
    ((recv (cat (exp (gen) l) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul x w l))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxb l))
              (exp (gen) (mul x w l y)))))))
    ((recv (cat (exp (gen) l) (mul w y)))
      (send (cat (exp (gen) l) (mul w y)))) ((recv y) (send y)))
  (label 77)
  (parent 55)
  (unrealized (4 0) (6 1) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa x rndx) (w expt) (l y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb l)
    (x x) (y (mul w l y)))
  (deflistener
    (hash (exp (gen) (mul ltxa l)) (exp (gen) (mul x w l y))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l l))
  (deflistener (cat (exp (gen) (mul ltxa l)) (exp (gen) (mul x w l y))))
  (deflistener (cat (exp (gen) ltxa) l))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb l)
    (y y) (x (mul x w l)))
  (deflistener (cat (exp (gen) l) (mul w y)))
  (deflistener y)
  (precedes ((0 1) (6 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (6 0)) ((3 0) (0 0)) ((3 0) (6 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (8 0)) ((7 1) (0 2))
    ((8 1) (7 0)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) l))
    (y (exp (gen) (mul x w l))) (x (exp (gen) ltxa)) (x (exp (gen) l)))
  (fn-of ("ltx-of" (b l) (a ltxa)) ("principal-of" (l b) (ltxa a)))
  (neq ((exp (gen) (mul x w l)) (gen)) (a b)
    ((exp (gen) (mul w l y)) (gen)))
  (precur (7 0))
  (uniq-gen ltxa x l y)
  (uniq-orig na nb)
  (operation nonce-test (added-listener y) (mul w y) (7 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) l)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w l y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa l)) (exp (gen) (mul x w l y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul ltxa l)) (exp (gen) (mul x w l y))))
      (send (hash (exp (gen) (mul ltxa l)) (exp (gen) (mul x w l y)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) l))) (recv "end-of-protocol") (send l))
    ((recv (cat (exp (gen) (mul ltxa l)) (exp (gen) (mul x w l y))))
      (send (cat (exp (gen) (mul ltxa l)) (exp (gen) (mul x w l y)))))
    ((recv (cat (exp (gen) ltxa) l)) (send (cat (exp (gen) ltxa) l)))
    ((recv (cat (exp (gen) ltxa) (exp (gen) l)))
      (recv (cat na a b (exp (gen) (mul x w l))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa l))
              (exp (gen) (mul x w l y)))))))
    ((recv (cat (exp (gen) l) (mul w y)))
      (send (cat (exp (gen) l) (mul w y)))) ((recv y) (send y)))
  (label 78)
  (parent 56)
  (unrealized (6 1) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (na nb data) (a b self name) (ltxa ltxb x rndx) (w expt)
    (l y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul w l y)))
  (deflistener
    (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w l y))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener
    (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w l y))))
  (deflistener (cat (exp (gen) ltxa) ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x (mul x w l)))
  (deflistener (cat (exp (gen) l) (mul w y)))
  (defstrand ltx-gen 1 (self self) (l l))
  (deflistener y)
  (precedes ((0 1) (6 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (6 0)) ((3 0) (0 0)) ((3 0) (6 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (9 0)) ((7 1) (0 2))
    ((8 0) (6 1)) ((9 1) (7 0)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) ltxb))
    (y (exp (gen) (mul x w l))) (x (exp (gen) ltxa))
    (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (self l) (a ltxa) (b ltxb))
    ("principal-of" (l self) (ltxa a) (ltxb b)))
  (neq ((exp (gen) (mul x w l)) (gen)) (a b)
    ((exp (gen) (mul w l y)) (gen)))
  (precur (7 0))
  (uniq-gen ltxa ltxb x l y)
  (uniq-orig na nb)
  (operation nonce-test (added-listener y) (mul w y) (7 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w l y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x w l y)))))) (send nb))
    ((recv (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w l y))))
      (send
        (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w l y)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w l y))))
      (send
        (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w l y)))))
    ((recv (cat (exp (gen) ltxa) ltxb))
      (send (cat (exp (gen) ltxa) ltxb)))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul x w l))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x w l y)))))))
    ((recv (cat (exp (gen) l) (mul w y)))
      (send (cat (exp (gen) l) (mul w y))))
    ((send (cat self (exp (gen) l)))) ((recv y) (send y)))
  (label 79)
  (parent 57)
  (unrealized (4 0) (6 1) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa ltxb x rndx) (w expt) (y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul w y)))
  (deflistener
    (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w y))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener
    (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w y))))
  (deflistener (cat (exp (gen) ltxb) ltxa))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x (mul x w)))
  (deflistener (cat (gen) (mul w y)))
  (deflistener y)
  (precedes ((0 1) (6 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (6 0)) ((2 2) (5 0)) ((3 0) (0 0)) ((3 0) (6 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (8 0)) ((7 1) (0 2))
    ((8 1) (7 0)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) ltxb))
    (y (exp (gen) (mul x w))) (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a ltxa) (b ltxb))
    ("principal-of" (ltxa a) (ltxb b)))
  (neq ((exp (gen) (mul x w)) (gen)) (a b)
    ((exp (gen) (mul w y)) (gen)))
  (uniq-gen ltxa ltxb x y)
  (uniq-orig na nb)
  (precur (7 0))
  (operation nonce-test (added-listener y) (mul w y) (7 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x w y)))))) (send nb))
    ((recv (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w y))))
      (send (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w y)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w y))))
      (send (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w y)))))
    ((recv (cat (exp (gen) ltxb) ltxa))
      (send (cat (exp (gen) ltxb) ltxa)))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul x w))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x w y)))))))
    ((recv (cat (gen) (mul w y))) (send (cat (gen) (mul w y))))
    ((recv y) (send y)))
  (label 80)
  (parent 62)
  (unrealized (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (w expt) (ltxa ltxb x y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul w x y)))
  (deflistener
    (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w x x y))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener
    (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w x x y))))
  (deflistener (cat (exp (gen) ltxb) ltxa))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x (mul w x x)))
  (deflistener (cat (exp (gen) x) (mul w y)))
  (deflistener y)
  (precedes ((0 1) (6 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (6 0)) ((2 2) (5 0)) ((3 0) (0 0)) ((3 0) (6 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (8 0)) ((7 1) (0 2))
    ((8 1) (7 0)))
  (absent (x (exp (gen) ltxa)) (x (exp (gen) ltxb)) (y (exp (gen) ltxa))
    (y (exp (gen) ltxb)) (y (exp (gen) (mul w x x))))
  (fn-of ("ltx-of" (a ltxa) (b ltxb))
    ("principal-of" (ltxa a) (ltxb b)))
  (neq ((exp (gen) (mul w x x)) (gen)) (a b)
    ((exp (gen) (mul w x y)) (gen)))
  (precur (7 0))
  (uniq-gen ltxa ltxb x y)
  (uniq-orig na nb)
  (operation nonce-test (added-listener y) (mul w y) (7 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w x y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul w x x y)))))) (send nb))
    ((recv (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w x x y))))
      (send
        (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w x x y)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w x x y))))
      (send
        (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w x x y)))))
    ((recv (cat (exp (gen) ltxb) ltxa))
      (send (cat (exp (gen) ltxb) ltxa)))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul w x x))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul w x x y)))))))
    ((recv (cat (exp (gen) x) (mul w y)))
      (send (cat (exp (gen) x) (mul w y)))) ((recv y) (send y)))
  (label 81)
  (parent 63)
  (unrealized (4 0) (6 1) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (na nb na-0 data) (a b a-0 b-0 name)
    (ltxa ltxb ltxa-0 ltxb-0 x rndx) (w expt) (x-0 y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul w x-0 y)))
  (deflistener
    (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w x-0 y))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener
    (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w x-0 y))))
  (deflistener (cat (exp (gen) ltxb) ltxa))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x (mul x w x-0)))
  (deflistener (cat (exp (gen) x-0) (mul w y)))
  (defstrand init 2 (na na-0) (a a-0) (b b-0) (ltxa ltxa-0)
    (ltxb ltxb-0) (x x-0))
  (deflistener y)
  (precedes ((0 1) (6 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (6 0)) ((2 2) (5 0)) ((3 0) (0 0)) ((3 0) (6 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (9 0)) ((7 1) (0 2))
    ((8 1) (6 1)) ((9 1) (7 0)))
  (absent (x-0 (exp (gen) ltxa-0)) (x-0 (exp (gen) ltxb-0))
    (y (exp (gen) ltxa)) (y (exp (gen) ltxb))
    (y (exp (gen) (mul x w x-0))) (x (exp (gen) ltxa))
    (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a-0 ltxa-0) (b-0 ltxb-0) (a ltxa) (b ltxb))
    ("principal-of" (ltxa-0 a-0) (ltxb-0 b-0) (ltxa a) (ltxb b)))
  (neq ((exp (gen) (mul x w x-0)) (gen)) (a b)
    ((exp (gen) (mul w x-0 y)) (gen)))
  (precur (7 0))
  (uniq-gen ltxa ltxb x x-0 y)
  (uniq-orig na nb na-0)
  (operation nonce-test (added-listener y) (mul w y) (7 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w x-0 y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x w x-0 y)))))) (send nb))
    ((recv
       (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w x-0 y))))
      (send
        (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w x-0 y)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv
       (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w x-0 y))))
      (send
        (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w x-0 y)))))
    ((recv (cat (exp (gen) ltxb) ltxa))
      (send (cat (exp (gen) ltxb) ltxa)))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul x w x-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x w x-0 y)))))))
    ((recv (cat (exp (gen) x-0) (mul w y)))
      (send (cat (exp (gen) x-0) (mul w y))))
    ((recv (cat (exp (gen) ltxa-0) (exp (gen) ltxb-0)))
      (send (cat na-0 a-0 b-0 (exp (gen) x-0)))) ((recv y) (send y)))
  (label 82)
  (parent 64)
  (unrealized (4 0) (6 1) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa ltxb x rndx) (w expt) (y rndx)
    (w-0 expt))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul w y)))
  (deflistener
    (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w y))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener
    (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w y))))
  (deflistener (cat (exp (gen) ltxb) ltxa))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x (mul x w)))
  (deflistener (cat (exp (gen) y) w))
  (deflistener (cat (exp (gen) (mul x w y (rec w-0))) w-0))
  (precedes ((0 1) (6 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (6 0)) ((2 2) (5 0)) ((3 0) (0 0)) ((3 0) (6 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (7 0)) ((6 2) (8 0))
    ((7 1) (0 2)) ((8 1) (4 0)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) ltxb))
    (y (exp (gen) (mul x w))) (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a ltxa) (b ltxb))
    ("principal-of" (ltxa a) (ltxb b)))
  (neq ((exp (gen) (mul x w)) (gen)) (a b)
    ((exp (gen) (mul w y)) (gen)))
  (precur (8 0) (7 0))
  (uniq-gen ltxa ltxb x y)
  (uniq-orig na nb)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul x w y (rec w-0))) w-0))
    (exp (gen) (mul x w y)) (4 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x w y)))))) (send nb))
    ((recv (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w y))))
      (send (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w y)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w y))))
      (send (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w y)))))
    ((recv (cat (exp (gen) ltxb) ltxa))
      (send (cat (exp (gen) ltxb) ltxa)))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul x w))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x w y)))))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w)))
    ((recv (cat (exp (gen) (mul x w y (rec w-0))) w-0))
      (send (cat (exp (gen) (mul x w y (rec w-0))) w-0))))
  (label 83)
  (parent 65)
  (unrealized (8 0))
  (comment "8 in cohort - 8 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb na-0 nb-0 data) (a b a-0 b-0 name)
    (ltxa ltxb ltxa-0 ltxb-0 rndx) (x expt) (x-0 rndx) (w expt)
    (y y-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x-0) (y (mul w y y-0)))
  (deflistener
    (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x-0 w y y-0))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener
    (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x-0 w y y-0))))
  (deflistener (cat (exp (gen) ltxb) ltxa))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y-0) (x (mul x-0 w y)))
  (deflistener (cat (exp (gen) y) (mul w y-0)))
  (defstrand resp 3 (na na-0) (nb nb-0) (a a-0) (b b-0) (ltxa ltxa-0)
    (ltxb ltxb-0) (y y) (x x))
  (deflistener y-0)
  (precedes ((0 1) (6 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (6 0)) ((2 2) (5 0)) ((3 0) (0 0)) ((3 0) (6 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (9 0)) ((7 1) (0 2))
    ((8 2) (6 1)) ((9 1) (7 0)))
  (absent (y (exp (gen) ltxa-0)) (y (exp (gen) ltxb-0))
    (y (exp (gen) x)) (y-0 (exp (gen) ltxa)) (y-0 (exp (gen) ltxb))
    (y-0 (exp (gen) (mul x-0 w y))) (x-0 (exp (gen) ltxa))
    (x-0 (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a-0 ltxa-0) (b-0 ltxb-0) (a ltxa) (b ltxb))
    ("principal-of" (ltxa-0 a-0) (ltxb-0 b-0) (ltxa a) (ltxb b)))
  (neq ((exp (gen) x) (gen)) ((exp (gen) (mul x-0 w y)) (gen)) (a b)
    ((exp (gen) (mul w y y-0)) (gen)))
  (precur (7 0))
  (uniq-gen ltxa ltxb x-0 y y-0)
  (uniq-orig na nb nb-0)
  (operation nonce-test (added-listener y-0) (mul w y-0) (7 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x-0)))
      (recv
        (cat (exp (gen) (mul w y y-0))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x-0 w y y-0)))))) (send nb))
    ((recv
       (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x-0 w y y-0))))
      (send
        (hash (exp (gen) (mul ltxa ltxb))
          (exp (gen) (mul x-0 w y y-0)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv
       (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x-0 w y y-0))))
      (send
        (cat (exp (gen) (mul ltxa ltxb))
          (exp (gen) (mul x-0 w y y-0)))))
    ((recv (cat (exp (gen) ltxb) ltxa))
      (send (cat (exp (gen) ltxb) ltxa)))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul x-0 w y))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x-0 w y y-0)))))))
    ((recv (cat (exp (gen) y) (mul w y-0)))
      (send (cat (exp (gen) y) (mul w y-0))))
    ((recv (cat (exp (gen) ltxa-0) (exp (gen) ltxb-0)))
      (recv (cat na-0 a-0 b-0 (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul ltxa-0 ltxb-0))
              (exp (gen) (mul x y))))))) ((recv y-0) (send y-0)))
  (label 84)
  (parent 66)
  (unrealized (4 0) (6 1) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxb x rndx) (w expt) (l y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa l) (ltxb ltxb)
    (x x) (y (mul w l y)))
  (deflistener
    (hash (exp (gen) (mul ltxb l)) (exp (gen) (mul x w l y))))
  (defstrand ltx-gen 3 (self a) (l l))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener (cat (exp (gen) (mul ltxb l)) (exp (gen) (mul x w l y))))
  (deflistener (cat (exp (gen) ltxb) l))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa l) (ltxb ltxb)
    (y y) (x (mul x w l)))
  (deflistener (cat (exp (gen) l) (mul w y)))
  (deflistener y)
  (precedes ((0 1) (6 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (6 0)) ((2 2) (5 0)) ((3 0) (0 0)) ((3 0) (6 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (8 0)) ((7 1) (0 2))
    ((8 1) (7 0)))
  (absent (y (exp (gen) l)) (y (exp (gen) ltxb))
    (y (exp (gen) (mul x w l))) (x (exp (gen) l)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a l) (b ltxb)) ("principal-of" (l a) (ltxb b)))
  (neq ((exp (gen) (mul x w l)) (gen)) (a b)
    ((exp (gen) (mul w l y)) (gen)))
  (precur (7 0))
  (uniq-gen ltxb x l y)
  (uniq-orig na nb)
  (operation nonce-test (added-listener y) (mul w y) (7 0))
  (traces
    ((recv (cat (exp (gen) l) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w l y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxb l)) (exp (gen) (mul x w l y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul ltxb l)) (exp (gen) (mul x w l y))))
      (send (hash (exp (gen) (mul ltxb l)) (exp (gen) (mul x w l y)))))
    ((send (cat a (exp (gen) l))) (recv "end-of-protocol") (send l))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) (mul ltxb l)) (exp (gen) (mul x w l y))))
      (send (cat (exp (gen) (mul ltxb l)) (exp (gen) (mul x w l y)))))
    ((recv (cat (exp (gen) ltxb) l)) (send (cat (exp (gen) ltxb) l)))
    ((recv (cat (exp (gen) l) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul x w l))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxb l))
              (exp (gen) (mul x w l y)))))))
    ((recv (cat (exp (gen) l) (mul w y)))
      (send (cat (exp (gen) l) (mul w y)))) ((recv y) (send y)))
  (label 85)
  (parent 67)
  (unrealized (6 1) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa x rndx) (w expt) (l y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb l)
    (x x) (y (mul w l y)))
  (deflistener
    (hash (exp (gen) (mul ltxa l)) (exp (gen) (mul x w l y))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l l))
  (deflistener (cat (exp (gen) (mul ltxa l)) (exp (gen) (mul x w l y))))
  (deflistener (cat (exp (gen) l) ltxa))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb l)
    (y y) (x (mul x w l)))
  (deflistener (cat (exp (gen) l) (mul w y)))
  (deflistener y)
  (precedes ((0 1) (6 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (6 0)) ((2 2) (5 0)) ((3 0) (0 0)) ((3 0) (6 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (8 0)) ((7 1) (0 2))
    ((8 1) (7 0)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) l))
    (y (exp (gen) (mul x w l))) (x (exp (gen) ltxa)) (x (exp (gen) l)))
  (fn-of ("ltx-of" (b l) (a ltxa)) ("principal-of" (l b) (ltxa a)))
  (neq ((exp (gen) (mul x w l)) (gen)) (a b)
    ((exp (gen) (mul w l y)) (gen)))
  (precur (7 0))
  (uniq-gen ltxa x l y)
  (uniq-orig na nb)
  (operation nonce-test (added-listener y) (mul w y) (7 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) l)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w l y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa l)) (exp (gen) (mul x w l y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul ltxa l)) (exp (gen) (mul x w l y))))
      (send (hash (exp (gen) (mul ltxa l)) (exp (gen) (mul x w l y)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) l))) (recv "end-of-protocol") (send l))
    ((recv (cat (exp (gen) (mul ltxa l)) (exp (gen) (mul x w l y))))
      (send (cat (exp (gen) (mul ltxa l)) (exp (gen) (mul x w l y)))))
    ((recv (cat (exp (gen) l) ltxa)) (send (cat (exp (gen) l) ltxa)))
    ((recv (cat (exp (gen) ltxa) (exp (gen) l)))
      (recv (cat na a b (exp (gen) (mul x w l))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa l))
              (exp (gen) (mul x w l y)))))))
    ((recv (cat (exp (gen) l) (mul w y)))
      (send (cat (exp (gen) l) (mul w y)))) ((recv y) (send y)))
  (label 86)
  (parent 68)
  (unrealized (4 0) (6 1) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (na nb data) (a b self name) (ltxa ltxb x rndx) (w expt)
    (l y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul w l y)))
  (deflistener
    (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w l y))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener
    (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w l y))))
  (deflistener (cat (exp (gen) ltxb) ltxa))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x (mul x w l)))
  (deflistener (cat (exp (gen) l) (mul w y)))
  (defstrand ltx-gen 1 (self self) (l l))
  (deflistener y)
  (precedes ((0 1) (6 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (6 0)) ((2 2) (5 0)) ((3 0) (0 0)) ((3 0) (6 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (9 0)) ((7 1) (0 2))
    ((8 0) (6 1)) ((9 1) (7 0)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) ltxb))
    (y (exp (gen) (mul x w l))) (x (exp (gen) ltxa))
    (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (self l) (a ltxa) (b ltxb))
    ("principal-of" (l self) (ltxa a) (ltxb b)))
  (neq ((exp (gen) (mul x w l)) (gen)) (a b)
    ((exp (gen) (mul w l y)) (gen)))
  (precur (7 0))
  (uniq-gen ltxa ltxb x l y)
  (uniq-orig na nb)
  (operation nonce-test (added-listener y) (mul w y) (7 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w l y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x w l y)))))) (send nb))
    ((recv (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w l y))))
      (send
        (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w l y)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w l y))))
      (send
        (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x w l y)))))
    ((recv (cat (exp (gen) ltxb) ltxa))
      (send (cat (exp (gen) ltxb) ltxa)))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul x w l))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x w l y)))))))
    ((recv (cat (exp (gen) l) (mul w y)))
      (send (cat (exp (gen) l) (mul w y))))
    ((send (cat self (exp (gen) l)))) ((recv y) (send y)))
  (label 87)
  (parent 69)
  (unrealized (4 0) (6 1) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa ltxb x rndx) (w expt) (y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul (rec x) w y)))
  (deflistener (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y))))
  (deflistener (cat (exp (gen) ltxa) ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x w))
  (deflistener (cat (exp (gen) y) (mul (rec x) w)))
  (deflistener (cat (gen) (mul w y)))
  (precedes ((0 1) (6 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (6 0)) ((3 0) (0 0)) ((3 0) (6 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (7 0)) ((6 2) (8 0))
    ((7 1) (0 2)) ((8 1) (4 0)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) ltxb)) (y (exp (gen) w))
    (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a ltxa) (b ltxb))
    ("principal-of" (ltxa a) (ltxb b)))
  (neq ((exp (gen) w) (gen)) (a b)
    ((exp (gen) (mul (rec x) w y)) (gen)))
  (precur (8 0) (7 0))
  (uniq-gen ltxa ltxb x y)
  (uniq-orig na nb)
  (operation nonce-test
    (contracted (x-0 x) (w-0 (mul (rec x) w)) (y-0 y) (w-1 (mul w y))
      (y-1 y) (w (mul w y))) (gen) (8 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) w y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y))))
      (send (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y))))
      (send (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y)))))
    ((recv (cat (exp (gen) ltxa) ltxb))
      (send (cat (exp (gen) ltxa) ltxb)))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) w)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y)))))))
    ((recv (cat (exp (gen) y) (mul (rec x) w)))
      (send (cat (exp (gen) y) (mul (rec x) w))))
    ((recv (cat (gen) (mul w y))) (send (cat (gen) (mul w y)))))
  (label 88)
  (parent 75)
  (unrealized (0 2) (7 0) (8 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (w expt) (ltxa ltxb x y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul w y)))
  (deflistener
    (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w x y))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener
    (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w x y))))
  (deflistener (cat (exp (gen) ltxa) ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x (mul w x)))
  (deflistener (cat (exp (gen) y) w))
  (deflistener (cat (exp (gen) x) (mul w y)))
  (precedes ((0 1) (6 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (6 0)) ((3 0) (0 0)) ((3 0) (6 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (7 0)) ((6 2) (8 0))
    ((7 1) (0 2)) ((8 1) (4 0)))
  (absent (x (exp (gen) ltxa)) (x (exp (gen) ltxb)) (y (exp (gen) ltxa))
    (y (exp (gen) ltxb)) (y (exp (gen) (mul w x))))
  (fn-of ("ltx-of" (a ltxa) (b ltxb))
    ("principal-of" (ltxa a) (ltxb b)))
  (neq ((exp (gen) (mul w x)) (gen)) (a b)
    ((exp (gen) (mul w y)) (gen)))
  (precur (8 0) (7 0))
  (uniq-gen ltxa ltxb x y)
  (uniq-orig na nb)
  (operation nonce-test (displaced 9 0 init 2) (exp (gen) x-0) (8 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul w x y)))))) (send nb))
    ((recv (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w x y))))
      (send (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w x y)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w x y))))
      (send (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w x y)))))
    ((recv (cat (exp (gen) ltxa) ltxb))
      (send (cat (exp (gen) ltxa) ltxb)))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul w x))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul w x y)))))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w)))
    ((recv (cat (exp (gen) x) (mul w y)))
      (send (cat (exp (gen) x) (mul w y)))))
  (label 89)
  (parent 75)
  (unrealized (4 0) (8 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb na-0 data) (a b a-0 b-0 name)
    (ltxa ltxb ltxa-0 ltxb-0 x rndx) (w expt) (x-0 y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul (rec x) w x-0 y)))
  (deflistener
    (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w x-0 y))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener
    (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w x-0 y))))
  (deflistener (cat (exp (gen) ltxa) ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x (mul w x-0)))
  (deflistener (cat (exp (gen) y) (mul (rec x) w x-0)))
  (deflistener (cat (exp (gen) x-0) (mul w y)))
  (defstrand init 2 (na na-0) (a a-0) (b b-0) (ltxa ltxa-0)
    (ltxb ltxb-0) (x x-0))
  (precedes ((0 1) (6 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (6 0)) ((3 0) (0 0)) ((3 0) (6 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (7 0)) ((6 2) (8 0))
    ((7 1) (0 2)) ((8 1) (4 0)) ((9 1) (6 1)))
  (absent (x-0 (exp (gen) ltxa-0)) (x-0 (exp (gen) ltxb-0))
    (y (exp (gen) ltxa)) (y (exp (gen) ltxb))
    (y (exp (gen) (mul w x-0))) (x (exp (gen) ltxa))
    (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a-0 ltxa-0) (b-0 ltxb-0) (a ltxa) (b ltxb))
    ("principal-of" (ltxa-0 a-0) (ltxb-0 b-0) (ltxa a) (ltxb b)))
  (neq ((exp (gen) (mul w x-0)) (gen)) (a b)
    ((exp (gen) (mul (rec x) w x-0 y)) (gen)))
  (precur (8 0) (7 0))
  (uniq-gen ltxa ltxb x x-0 y)
  (uniq-orig na nb na-0)
  (operation nonce-test (added-strand init 2) (exp (gen) x-0) (8 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) w x-0 y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul w x-0 y)))))) (send nb))
    ((recv (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w x-0 y))))
      (send
        (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w x-0 y)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w x-0 y))))
      (send
        (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w x-0 y)))))
    ((recv (cat (exp (gen) ltxa) ltxb))
      (send (cat (exp (gen) ltxa) ltxb)))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul w x-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul w x-0 y)))))))
    ((recv (cat (exp (gen) y) (mul (rec x) w x-0)))
      (send (cat (exp (gen) y) (mul (rec x) w x-0))))
    ((recv (cat (exp (gen) x-0) (mul w y)))
      (send (cat (exp (gen) x-0) (mul w y))))
    ((recv (cat (exp (gen) ltxa-0) (exp (gen) ltxb-0)))
      (send (cat na-0 a-0 b-0 (exp (gen) x-0)))))
  (label 90)
  (parent 75)
  (unrealized (0 2) (4 0) (7 0) (8 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (x ltxa ltxb rndx) (w expt) (y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul (rec x) w y)))
  (deflistener (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y))))
  (deflistener (cat (exp (gen) ltxa) ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x w))
  (deflistener (cat (exp (gen) y) (mul (rec x) w)))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 1) (6 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (6 0)) ((3 0) (0 0)) ((3 0) (6 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (7 0)) ((6 2) (8 0))
    ((7 1) (0 2)) ((8 1) (4 0)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) ltxb)) (y (exp (gen) w))
    (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a ltxa) (b ltxb))
    ("principal-of" (ltxa a) (ltxb b)))
  (neq ((exp (gen) w) (gen)) (a b)
    ((exp (gen) (mul (rec x) w y)) (gen)))
  (precur (8 0) (7 0))
  (uniq-gen x ltxa ltxb y)
  (uniq-orig na nb)
  (operation nonce-test (displaced 9 6 resp 3) (exp (gen) y-0) (8 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) w y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y))))
      (send (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y))))
      (send (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y)))))
    ((recv (cat (exp (gen) ltxa) ltxb))
      (send (cat (exp (gen) ltxa) ltxb)))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) w)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y)))))))
    ((recv (cat (exp (gen) y) (mul (rec x) w)))
      (send (cat (exp (gen) y) (mul (rec x) w))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 91)
  (parent 75)
  (unrealized (0 2) (7 0))
  (comment "4 in cohort - 4 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb na-0 nb-0 data) (a b a-0 b-0 name)
    (ltxa ltxb ltxa-0 ltxb-0 rndx) (x expt) (x-0 rndx) (w expt)
    (y y-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x-0) (y (mul (rec x-0) w y y-0)))
  (deflistener
    (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y y-0))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener
    (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y y-0))))
  (deflistener (cat (exp (gen) ltxa) ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y-0) (x (mul w y)))
  (deflistener (cat (exp (gen) y-0) (mul (rec x-0) w y)))
  (deflistener (cat (exp (gen) y) (mul w y-0)))
  (defstrand resp 3 (na na-0) (nb nb-0) (a a-0) (b b-0) (ltxa ltxa-0)
    (ltxb ltxb-0) (y y) (x x))
  (precedes ((0 1) (6 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (6 0)) ((3 0) (0 0)) ((3 0) (6 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (7 0)) ((6 2) (8 0))
    ((7 1) (0 2)) ((8 1) (4 0)) ((9 2) (6 1)))
  (absent (y (exp (gen) ltxa-0)) (y (exp (gen) ltxb-0))
    (y (exp (gen) x)) (y-0 (exp (gen) ltxa)) (y-0 (exp (gen) ltxb))
    (y-0 (exp (gen) (mul w y))) (x-0 (exp (gen) ltxa))
    (x-0 (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a-0 ltxa-0) (b-0 ltxb-0) (a ltxa) (b ltxb))
    ("principal-of" (ltxa-0 a-0) (ltxb-0 b-0) (ltxa a) (ltxb b)))
  (neq ((exp (gen) x) (gen)) ((exp (gen) (mul w y)) (gen)) (a b)
    ((exp (gen) (mul (rec x-0) w y y-0)) (gen)))
  (precur (8 0) (7 0))
  (uniq-gen ltxa ltxb x-0 y y-0)
  (uniq-orig na nb nb-0)
  (operation nonce-test (added-strand resp 3) (exp (gen) y) (8 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x-0)))
      (recv
        (cat (exp (gen) (mul (rec x-0) w y y-0))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul w y y-0)))))) (send nb))
    ((recv (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y y-0))))
      (send
        (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y y-0)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y y-0))))
      (send
        (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y y-0)))))
    ((recv (cat (exp (gen) ltxa) ltxb))
      (send (cat (exp (gen) ltxa) ltxb)))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul w y))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul w y y-0)))))))
    ((recv (cat (exp (gen) y-0) (mul (rec x-0) w y)))
      (send (cat (exp (gen) y-0) (mul (rec x-0) w y))))
    ((recv (cat (exp (gen) y) (mul w y-0)))
      (send (cat (exp (gen) y) (mul w y-0))))
    ((recv (cat (exp (gen) ltxa-0) (exp (gen) ltxb-0)))
      (recv (cat na-0 a-0 b-0 (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul ltxa-0 ltxb-0))
              (exp (gen) (mul x y))))))))
  (label 92)
  (parent 75)
  (unrealized (0 2) (4 0) (7 0) (8 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxb x rndx) (w expt) (l y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa l) (ltxb ltxb)
    (x x) (y (mul (rec x) w l y)))
  (deflistener (hash (exp (gen) (mul ltxb l)) (exp (gen) (mul w l y))))
  (defstrand ltx-gen 3 (self a) (l l))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener (cat (exp (gen) (mul ltxb l)) (exp (gen) (mul w l y))))
  (deflistener (cat (exp (gen) l) ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa l) (ltxb ltxb)
    (y y) (x (mul w l)))
  (deflistener (cat (exp (gen) y) (mul (rec x) w l)))
  (deflistener (cat (exp (gen) l) (mul w y)))
  (precedes ((0 1) (6 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (6 0)) ((3 0) (0 0)) ((3 0) (6 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (7 0)) ((6 2) (8 0))
    ((7 1) (0 2)) ((8 1) (4 0)))
  (absent (y (exp (gen) l)) (y (exp (gen) ltxb))
    (y (exp (gen) (mul w l))) (x (exp (gen) l)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a l) (b ltxb)) ("principal-of" (l a) (ltxb b)))
  (neq ((exp (gen) (mul w l)) (gen)) (a b)
    ((exp (gen) (mul (rec x) w l y)) (gen)))
  (precur (8 0) (7 0))
  (uniq-gen ltxb x l y)
  (uniq-orig na nb)
  (operation nonce-test (displaced 9 2 ltx-gen 1) (exp (gen) l-0) (8 0))
  (traces
    ((recv (cat (exp (gen) l) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) w l y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxb l)) (exp (gen) (mul w l y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul ltxb l)) (exp (gen) (mul w l y))))
      (send (hash (exp (gen) (mul ltxb l)) (exp (gen) (mul w l y)))))
    ((send (cat a (exp (gen) l))) (recv "end-of-protocol") (send l))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) (mul ltxb l)) (exp (gen) (mul w l y))))
      (send (cat (exp (gen) (mul ltxb l)) (exp (gen) (mul w l y)))))
    ((recv (cat (exp (gen) l) ltxb)) (send (cat (exp (gen) l) ltxb)))
    ((recv (cat (exp (gen) l) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul w l))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxb l)) (exp (gen) (mul w l y)))))))
    ((recv (cat (exp (gen) y) (mul (rec x) w l)))
      (send (cat (exp (gen) y) (mul (rec x) w l))))
    ((recv (cat (exp (gen) l) (mul w y)))
      (send (cat (exp (gen) l) (mul w y)))))
  (label 93)
  (parent 75)
  (unrealized (0 2) (4 0) (7 0) (8 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa x rndx) (w expt) (l y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb l)
    (x x) (y (mul (rec x) w l y)))
  (deflistener (hash (exp (gen) (mul ltxa l)) (exp (gen) (mul w l y))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l l))
  (deflistener (cat (exp (gen) (mul ltxa l)) (exp (gen) (mul w l y))))
  (deflistener (cat (exp (gen) ltxa) l))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb l)
    (y y) (x (mul w l)))
  (deflistener (cat (exp (gen) y) (mul (rec x) w l)))
  (deflistener (cat (exp (gen) l) (mul w y)))
  (precedes ((0 1) (6 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (6 0)) ((3 0) (0 0)) ((3 0) (6 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (7 0)) ((6 2) (8 0))
    ((7 1) (0 2)) ((8 1) (4 0)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) l))
    (y (exp (gen) (mul w l))) (x (exp (gen) ltxa)) (x (exp (gen) l)))
  (fn-of ("ltx-of" (b l) (a ltxa)) ("principal-of" (l b) (ltxa a)))
  (neq ((exp (gen) (mul w l)) (gen)) (a b)
    ((exp (gen) (mul (rec x) w l y)) (gen)))
  (precur (8 0) (7 0))
  (uniq-gen ltxa x l y)
  (uniq-orig na nb)
  (operation nonce-test (displaced 9 3 ltx-gen 1) (exp (gen) l-0) (8 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) l)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) w l y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa l)) (exp (gen) (mul w l y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul ltxa l)) (exp (gen) (mul w l y))))
      (send (hash (exp (gen) (mul ltxa l)) (exp (gen) (mul w l y)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) l))) (recv "end-of-protocol") (send l))
    ((recv (cat (exp (gen) (mul ltxa l)) (exp (gen) (mul w l y))))
      (send (cat (exp (gen) (mul ltxa l)) (exp (gen) (mul w l y)))))
    ((recv (cat (exp (gen) ltxa) l)) (send (cat (exp (gen) ltxa) l)))
    ((recv (cat (exp (gen) ltxa) (exp (gen) l)))
      (recv (cat na a b (exp (gen) (mul w l))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa l)) (exp (gen) (mul w l y)))))))
    ((recv (cat (exp (gen) y) (mul (rec x) w l)))
      (send (cat (exp (gen) y) (mul (rec x) w l))))
    ((recv (cat (exp (gen) l) (mul w y)))
      (send (cat (exp (gen) l) (mul w y)))))
  (label 94)
  (parent 75)
  (unrealized (0 2) (7 0) (8 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb data) (a b self name) (ltxa ltxb x rndx) (w expt)
    (l y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul (rec x) w l y)))
  (deflistener
    (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w l y))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener
    (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w l y))))
  (deflistener (cat (exp (gen) ltxa) ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x (mul w l)))
  (deflistener (cat (exp (gen) y) (mul (rec x) w l)))
  (deflistener (cat (exp (gen) l) (mul w y)))
  (defstrand ltx-gen 1 (self self) (l l))
  (precedes ((0 1) (6 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (6 0)) ((3 0) (0 0)) ((3 0) (6 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (7 0)) ((6 2) (8 0))
    ((7 1) (0 2)) ((8 1) (4 0)) ((9 0) (6 1)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) ltxb))
    (y (exp (gen) (mul w l))) (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (self l) (a ltxa) (b ltxb))
    ("principal-of" (l self) (ltxa a) (ltxb b)))
  (neq ((exp (gen) (mul w l)) (gen)) (a b)
    ((exp (gen) (mul (rec x) w l y)) (gen)))
  (precur (8 0) (7 0))
  (uniq-gen ltxa ltxb x l y)
  (uniq-orig na nb)
  (operation nonce-test (added-strand ltx-gen 1) (exp (gen) l) (8 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) w l y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul w l y)))))) (send nb))
    ((recv (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w l y))))
      (send (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w l y)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w l y))))
      (send (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w l y)))))
    ((recv (cat (exp (gen) ltxa) ltxb))
      (send (cat (exp (gen) ltxa) ltxb)))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul w l))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul w l y)))))))
    ((recv (cat (exp (gen) y) (mul (rec x) w l)))
      (send (cat (exp (gen) y) (mul (rec x) w l))))
    ((recv (cat (exp (gen) l) (mul w y)))
      (send (cat (exp (gen) l) (mul w y))))
    ((send (cat self (exp (gen) l)))))
  (label 95)
  (parent 75)
  (unrealized (0 2) (4 0) (7 0) (8 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa ltxb x rndx) (w expt) (y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul (rec x) w y)))
  (deflistener (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y))))
  (deflistener (cat (exp (gen) ltxb) ltxa))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x w))
  (deflistener (cat (exp (gen) y) (mul (rec x) w)))
  (deflistener (cat (gen) (mul w y)))
  (precedes ((0 1) (6 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (6 0)) ((2 2) (5 0)) ((3 0) (0 0)) ((3 0) (6 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (7 0)) ((6 2) (8 0))
    ((7 1) (0 2)) ((8 1) (4 0)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) ltxb)) (y (exp (gen) w))
    (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a ltxa) (b ltxb))
    ("principal-of" (ltxa a) (ltxb b)))
  (neq ((exp (gen) w) (gen)) (a b)
    ((exp (gen) (mul (rec x) w y)) (gen)))
  (precur (8 0) (7 0))
  (uniq-gen ltxa ltxb x y)
  (uniq-orig na nb)
  (operation nonce-test
    (contracted (x-0 x) (w-0 (mul (rec x) w)) (y-0 y) (w-1 (mul w y))
      (y-1 y) (w (mul w y))) (gen) (8 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) w y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y))))
      (send (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y))))
      (send (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y)))))
    ((recv (cat (exp (gen) ltxb) ltxa))
      (send (cat (exp (gen) ltxb) ltxa)))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) w)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y)))))))
    ((recv (cat (exp (gen) y) (mul (rec x) w)))
      (send (cat (exp (gen) y) (mul (rec x) w))))
    ((recv (cat (gen) (mul w y))) (send (cat (gen) (mul w y)))))
  (label 96)
  (parent 83)
  (unrealized (0 2) (7 0) (8 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (w expt) (ltxa ltxb x y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul w y)))
  (deflistener
    (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w x y))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener
    (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w x y))))
  (deflistener (cat (exp (gen) ltxb) ltxa))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x (mul w x)))
  (deflistener (cat (exp (gen) y) w))
  (deflistener (cat (exp (gen) x) (mul w y)))
  (precedes ((0 1) (6 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (6 0)) ((2 2) (5 0)) ((3 0) (0 0)) ((3 0) (6 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (7 0)) ((6 2) (8 0))
    ((7 1) (0 2)) ((8 1) (4 0)))
  (absent (x (exp (gen) ltxa)) (x (exp (gen) ltxb)) (y (exp (gen) ltxa))
    (y (exp (gen) ltxb)) (y (exp (gen) (mul w x))))
  (fn-of ("ltx-of" (a ltxa) (b ltxb))
    ("principal-of" (ltxa a) (ltxb b)))
  (neq ((exp (gen) (mul w x)) (gen)) (a b)
    ((exp (gen) (mul w y)) (gen)))
  (precur (8 0) (7 0))
  (uniq-gen ltxa ltxb x y)
  (uniq-orig na nb)
  (operation nonce-test (displaced 9 0 init 2) (exp (gen) x-0) (8 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul w x y)))))) (send nb))
    ((recv (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w x y))))
      (send (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w x y)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w x y))))
      (send (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w x y)))))
    ((recv (cat (exp (gen) ltxb) ltxa))
      (send (cat (exp (gen) ltxb) ltxa)))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul w x))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul w x y)))))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w)))
    ((recv (cat (exp (gen) x) (mul w y)))
      (send (cat (exp (gen) x) (mul w y)))))
  (label 97)
  (parent 83)
  (unrealized (4 0) (8 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb na-0 data) (a b a-0 b-0 name)
    (ltxa ltxb ltxa-0 ltxb-0 x rndx) (w expt) (x-0 y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul (rec x) w x-0 y)))
  (deflistener
    (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w x-0 y))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener
    (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w x-0 y))))
  (deflistener (cat (exp (gen) ltxb) ltxa))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x (mul w x-0)))
  (deflistener (cat (exp (gen) y) (mul (rec x) w x-0)))
  (deflistener (cat (exp (gen) x-0) (mul w y)))
  (defstrand init 2 (na na-0) (a a-0) (b b-0) (ltxa ltxa-0)
    (ltxb ltxb-0) (x x-0))
  (precedes ((0 1) (6 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (6 0)) ((2 2) (5 0)) ((3 0) (0 0)) ((3 0) (6 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (7 0)) ((6 2) (8 0))
    ((7 1) (0 2)) ((8 1) (4 0)) ((9 1) (6 1)))
  (absent (x-0 (exp (gen) ltxa-0)) (x-0 (exp (gen) ltxb-0))
    (y (exp (gen) ltxa)) (y (exp (gen) ltxb))
    (y (exp (gen) (mul w x-0))) (x (exp (gen) ltxa))
    (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a-0 ltxa-0) (b-0 ltxb-0) (a ltxa) (b ltxb))
    ("principal-of" (ltxa-0 a-0) (ltxb-0 b-0) (ltxa a) (ltxb b)))
  (neq ((exp (gen) (mul w x-0)) (gen)) (a b)
    ((exp (gen) (mul (rec x) w x-0 y)) (gen)))
  (precur (8 0) (7 0))
  (uniq-gen ltxa ltxb x x-0 y)
  (uniq-orig na nb na-0)
  (operation nonce-test (added-strand init 2) (exp (gen) x-0) (8 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) w x-0 y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul w x-0 y)))))) (send nb))
    ((recv (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w x-0 y))))
      (send
        (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w x-0 y)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w x-0 y))))
      (send
        (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w x-0 y)))))
    ((recv (cat (exp (gen) ltxb) ltxa))
      (send (cat (exp (gen) ltxb) ltxa)))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul w x-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul w x-0 y)))))))
    ((recv (cat (exp (gen) y) (mul (rec x) w x-0)))
      (send (cat (exp (gen) y) (mul (rec x) w x-0))))
    ((recv (cat (exp (gen) x-0) (mul w y)))
      (send (cat (exp (gen) x-0) (mul w y))))
    ((recv (cat (exp (gen) ltxa-0) (exp (gen) ltxb-0)))
      (send (cat na-0 a-0 b-0 (exp (gen) x-0)))))
  (label 98)
  (parent 83)
  (unrealized (0 2) (4 0) (7 0) (8 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (x ltxa ltxb rndx) (w expt) (y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul (rec x) w y)))
  (deflistener (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y))))
  (deflistener (cat (exp (gen) ltxb) ltxa))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x w))
  (deflistener (cat (exp (gen) y) (mul (rec x) w)))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 1) (6 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (6 0)) ((2 2) (5 0)) ((3 0) (0 0)) ((3 0) (6 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (7 0)) ((6 2) (8 0))
    ((7 1) (0 2)) ((8 1) (4 0)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) ltxb)) (y (exp (gen) w))
    (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a ltxa) (b ltxb))
    ("principal-of" (ltxa a) (ltxb b)))
  (neq ((exp (gen) w) (gen)) (a b)
    ((exp (gen) (mul (rec x) w y)) (gen)))
  (precur (8 0) (7 0))
  (uniq-gen x ltxa ltxb y)
  (uniq-orig na nb)
  (operation nonce-test (displaced 9 6 resp 3) (exp (gen) y-0) (8 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) w y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y))))
      (send (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y))))
      (send (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y)))))
    ((recv (cat (exp (gen) ltxb) ltxa))
      (send (cat (exp (gen) ltxb) ltxa)))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) w)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y)))))))
    ((recv (cat (exp (gen) y) (mul (rec x) w)))
      (send (cat (exp (gen) y) (mul (rec x) w))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 99)
  (parent 83)
  (unrealized (0 2) (7 0))
  (comment "4 in cohort - 4 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb na-0 nb-0 data) (a b a-0 b-0 name)
    (ltxa ltxb ltxa-0 ltxb-0 rndx) (x expt) (x-0 rndx) (w expt)
    (y y-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x-0) (y (mul (rec x-0) w y y-0)))
  (deflistener
    (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y y-0))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener
    (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y y-0))))
  (deflistener (cat (exp (gen) ltxb) ltxa))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y-0) (x (mul w y)))
  (deflistener (cat (exp (gen) y-0) (mul (rec x-0) w y)))
  (deflistener (cat (exp (gen) y) (mul w y-0)))
  (defstrand resp 3 (na na-0) (nb nb-0) (a a-0) (b b-0) (ltxa ltxa-0)
    (ltxb ltxb-0) (y y) (x x))
  (precedes ((0 1) (6 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (6 0)) ((2 2) (5 0)) ((3 0) (0 0)) ((3 0) (6 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (7 0)) ((6 2) (8 0))
    ((7 1) (0 2)) ((8 1) (4 0)) ((9 2) (6 1)))
  (absent (y (exp (gen) ltxa-0)) (y (exp (gen) ltxb-0))
    (y (exp (gen) x)) (y-0 (exp (gen) ltxa)) (y-0 (exp (gen) ltxb))
    (y-0 (exp (gen) (mul w y))) (x-0 (exp (gen) ltxa))
    (x-0 (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a-0 ltxa-0) (b-0 ltxb-0) (a ltxa) (b ltxb))
    ("principal-of" (ltxa-0 a-0) (ltxb-0 b-0) (ltxa a) (ltxb b)))
  (neq ((exp (gen) x) (gen)) ((exp (gen) (mul w y)) (gen)) (a b)
    ((exp (gen) (mul (rec x-0) w y y-0)) (gen)))
  (precur (8 0) (7 0))
  (uniq-gen ltxa ltxb x-0 y y-0)
  (uniq-orig na nb nb-0)
  (operation nonce-test (added-strand resp 3) (exp (gen) y) (8 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x-0)))
      (recv
        (cat (exp (gen) (mul (rec x-0) w y y-0))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul w y y-0)))))) (send nb))
    ((recv (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y y-0))))
      (send
        (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y y-0)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y y-0))))
      (send
        (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y y-0)))))
    ((recv (cat (exp (gen) ltxb) ltxa))
      (send (cat (exp (gen) ltxb) ltxa)))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul w y))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul w y y-0)))))))
    ((recv (cat (exp (gen) y-0) (mul (rec x-0) w y)))
      (send (cat (exp (gen) y-0) (mul (rec x-0) w y))))
    ((recv (cat (exp (gen) y) (mul w y-0)))
      (send (cat (exp (gen) y) (mul w y-0))))
    ((recv (cat (exp (gen) ltxa-0) (exp (gen) ltxb-0)))
      (recv (cat na-0 a-0 b-0 (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul ltxa-0 ltxb-0))
              (exp (gen) (mul x y))))))))
  (label 100)
  (parent 83)
  (unrealized (0 2) (4 0) (7 0) (8 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxb x rndx) (w expt) (l y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa l) (ltxb ltxb)
    (x x) (y (mul (rec x) w l y)))
  (deflistener (hash (exp (gen) (mul ltxb l)) (exp (gen) (mul w l y))))
  (defstrand ltx-gen 3 (self a) (l l))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener (cat (exp (gen) (mul ltxb l)) (exp (gen) (mul w l y))))
  (deflistener (cat (exp (gen) ltxb) l))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa l) (ltxb ltxb)
    (y y) (x (mul w l)))
  (deflistener (cat (exp (gen) y) (mul (rec x) w l)))
  (deflistener (cat (exp (gen) l) (mul w y)))
  (precedes ((0 1) (6 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (6 0)) ((2 2) (5 0)) ((3 0) (0 0)) ((3 0) (6 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (7 0)) ((6 2) (8 0))
    ((7 1) (0 2)) ((8 1) (4 0)))
  (absent (y (exp (gen) l)) (y (exp (gen) ltxb))
    (y (exp (gen) (mul w l))) (x (exp (gen) l)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a l) (b ltxb)) ("principal-of" (l a) (ltxb b)))
  (neq ((exp (gen) (mul w l)) (gen)) (a b)
    ((exp (gen) (mul (rec x) w l y)) (gen)))
  (precur (8 0) (7 0))
  (uniq-gen ltxb x l y)
  (uniq-orig na nb)
  (operation nonce-test (displaced 9 2 ltx-gen 1) (exp (gen) l-0) (8 0))
  (traces
    ((recv (cat (exp (gen) l) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) w l y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxb l)) (exp (gen) (mul w l y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul ltxb l)) (exp (gen) (mul w l y))))
      (send (hash (exp (gen) (mul ltxb l)) (exp (gen) (mul w l y)))))
    ((send (cat a (exp (gen) l))) (recv "end-of-protocol") (send l))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) (mul ltxb l)) (exp (gen) (mul w l y))))
      (send (cat (exp (gen) (mul ltxb l)) (exp (gen) (mul w l y)))))
    ((recv (cat (exp (gen) ltxb) l)) (send (cat (exp (gen) ltxb) l)))
    ((recv (cat (exp (gen) l) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul w l))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxb l)) (exp (gen) (mul w l y)))))))
    ((recv (cat (exp (gen) y) (mul (rec x) w l)))
      (send (cat (exp (gen) y) (mul (rec x) w l))))
    ((recv (cat (exp (gen) l) (mul w y)))
      (send (cat (exp (gen) l) (mul w y)))))
  (label 101)
  (parent 83)
  (unrealized (0 2) (7 0) (8 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa x rndx) (w expt) (l y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb l)
    (x x) (y (mul (rec x) w l y)))
  (deflistener (hash (exp (gen) (mul ltxa l)) (exp (gen) (mul w l y))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l l))
  (deflistener (cat (exp (gen) (mul ltxa l)) (exp (gen) (mul w l y))))
  (deflistener (cat (exp (gen) l) ltxa))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb l)
    (y y) (x (mul w l)))
  (deflistener (cat (exp (gen) y) (mul (rec x) w l)))
  (deflistener (cat (exp (gen) l) (mul w y)))
  (precedes ((0 1) (6 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (6 0)) ((2 2) (5 0)) ((3 0) (0 0)) ((3 0) (6 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (7 0)) ((6 2) (8 0))
    ((7 1) (0 2)) ((8 1) (4 0)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) l))
    (y (exp (gen) (mul w l))) (x (exp (gen) ltxa)) (x (exp (gen) l)))
  (fn-of ("ltx-of" (b l) (a ltxa)) ("principal-of" (l b) (ltxa a)))
  (neq ((exp (gen) (mul w l)) (gen)) (a b)
    ((exp (gen) (mul (rec x) w l y)) (gen)))
  (precur (8 0) (7 0))
  (uniq-gen ltxa x l y)
  (uniq-orig na nb)
  (operation nonce-test (displaced 9 3 ltx-gen 1) (exp (gen) l-0) (8 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) l)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) w l y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa l)) (exp (gen) (mul w l y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul ltxa l)) (exp (gen) (mul w l y))))
      (send (hash (exp (gen) (mul ltxa l)) (exp (gen) (mul w l y)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) l))) (recv "end-of-protocol") (send l))
    ((recv (cat (exp (gen) (mul ltxa l)) (exp (gen) (mul w l y))))
      (send (cat (exp (gen) (mul ltxa l)) (exp (gen) (mul w l y)))))
    ((recv (cat (exp (gen) l) ltxa)) (send (cat (exp (gen) l) ltxa)))
    ((recv (cat (exp (gen) ltxa) (exp (gen) l)))
      (recv (cat na a b (exp (gen) (mul w l))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa l)) (exp (gen) (mul w l y)))))))
    ((recv (cat (exp (gen) y) (mul (rec x) w l)))
      (send (cat (exp (gen) y) (mul (rec x) w l))))
    ((recv (cat (exp (gen) l) (mul w y)))
      (send (cat (exp (gen) l) (mul w y)))))
  (label 102)
  (parent 83)
  (unrealized (0 2) (4 0) (7 0) (8 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb data) (a b self name) (ltxa ltxb x rndx) (w expt)
    (l y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul (rec x) w l y)))
  (deflistener
    (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w l y))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener
    (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w l y))))
  (deflistener (cat (exp (gen) ltxb) ltxa))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x (mul w l)))
  (deflistener (cat (exp (gen) y) (mul (rec x) w l)))
  (deflistener (cat (exp (gen) l) (mul w y)))
  (defstrand ltx-gen 1 (self self) (l l))
  (precedes ((0 1) (6 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (6 0)) ((2 2) (5 0)) ((3 0) (0 0)) ((3 0) (6 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (7 0)) ((6 2) (8 0))
    ((7 1) (0 2)) ((8 1) (4 0)) ((9 0) (6 1)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) ltxb))
    (y (exp (gen) (mul w l))) (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (self l) (a ltxa) (b ltxb))
    ("principal-of" (l self) (ltxa a) (ltxb b)))
  (neq ((exp (gen) (mul w l)) (gen)) (a b)
    ((exp (gen) (mul (rec x) w l y)) (gen)))
  (precur (8 0) (7 0))
  (uniq-gen ltxa ltxb x l y)
  (uniq-orig na nb)
  (operation nonce-test (added-strand ltx-gen 1) (exp (gen) l) (8 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) w l y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul w l y)))))) (send nb))
    ((recv (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w l y))))
      (send (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w l y)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w l y))))
      (send (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w l y)))))
    ((recv (cat (exp (gen) ltxb) ltxa))
      (send (cat (exp (gen) ltxb) ltxa)))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul w l))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul w l y)))))))
    ((recv (cat (exp (gen) y) (mul (rec x) w l)))
      (send (cat (exp (gen) y) (mul (rec x) w l))))
    ((recv (cat (exp (gen) l) (mul w y)))
      (send (cat (exp (gen) l) (mul w y))))
    ((send (cat self (exp (gen) l)))))
  (label 103)
  (parent 83)
  (unrealized (0 2) (4 0) (7 0) (8 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa ltxb x rndx) (w expt) (y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul (rec x) w y)))
  (deflistener (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y))))
  (deflistener (cat (exp (gen) ltxa) ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x w))
  (deflistener (cat (exp (gen) y) (mul (rec x) w)))
  (deflistener (cat (gen) (mul w y)))
  (deflistener y)
  (precedes ((0 1) (6 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (6 0)) ((3 0) (0 0)) ((3 0) (6 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (7 0)) ((6 2) (9 0))
    ((7 1) (0 2)) ((8 1) (4 0)) ((9 1) (8 0)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) ltxb)) (y (exp (gen) w))
    (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a ltxa) (b ltxb))
    ("principal-of" (ltxa a) (ltxb b)))
  (neq ((exp (gen) w) (gen)) (a b)
    ((exp (gen) (mul (rec x) w y)) (gen)))
  (precur (8 0) (7 0))
  (uniq-gen ltxa ltxb x y)
  (uniq-orig na nb)
  (operation nonce-test (added-listener y) (mul w y) (8 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) w y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y))))
      (send (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y))))
      (send (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y)))))
    ((recv (cat (exp (gen) ltxa) ltxb))
      (send (cat (exp (gen) ltxa) ltxb)))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) w)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y)))))))
    ((recv (cat (exp (gen) y) (mul (rec x) w)))
      (send (cat (exp (gen) y) (mul (rec x) w))))
    ((recv (cat (gen) (mul w y))) (send (cat (gen) (mul w y))))
    ((recv y) (send y)))
  (label 104)
  (parent 88)
  (unrealized (0 2) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (w expt) (ltxa ltxb x y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul w y)))
  (deflistener
    (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w x y))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener
    (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w x y))))
  (deflistener (cat (exp (gen) ltxa) ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x (mul w x)))
  (deflistener (cat (exp (gen) y) w))
  (deflistener (cat (exp (gen) x) (mul w y)))
  (deflistener y)
  (precedes ((0 1) (6 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (6 0)) ((3 0) (0 0)) ((3 0) (6 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (7 0)) ((6 2) (9 0))
    ((7 1) (0 2)) ((8 1) (4 0)) ((9 1) (8 0)))
  (absent (x (exp (gen) ltxa)) (x (exp (gen) ltxb)) (y (exp (gen) ltxa))
    (y (exp (gen) ltxb)) (y (exp (gen) (mul w x))))
  (fn-of ("ltx-of" (a ltxa) (b ltxb))
    ("principal-of" (ltxa a) (ltxb b)))
  (neq ((exp (gen) (mul w x)) (gen)) (a b)
    ((exp (gen) (mul w y)) (gen)))
  (precur (8 0) (7 0))
  (uniq-gen ltxa ltxb x y)
  (uniq-orig na nb)
  (operation nonce-test (added-listener y) (mul w y) (8 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul w x y)))))) (send nb))
    ((recv (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w x y))))
      (send (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w x y)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w x y))))
      (send (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w x y)))))
    ((recv (cat (exp (gen) ltxa) ltxb))
      (send (cat (exp (gen) ltxa) ltxb)))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul w x))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul w x y)))))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w)))
    ((recv (cat (exp (gen) x) (mul w y)))
      (send (cat (exp (gen) x) (mul w y)))) ((recv y) (send y)))
  (label 105)
  (parent 89)
  (unrealized (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (na nb na-0 data) (a b a-0 b-0 name)
    (ltxa ltxb ltxa-0 ltxb-0 x rndx) (w expt) (x-0 y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul (rec x) w x-0 y)))
  (deflistener
    (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w x-0 y))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener
    (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w x-0 y))))
  (deflistener (cat (exp (gen) ltxa) ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x (mul w x-0)))
  (deflistener (cat (exp (gen) y) (mul (rec x) w x-0)))
  (deflistener (cat (exp (gen) x-0) (mul w y)))
  (defstrand init 2 (na na-0) (a a-0) (b b-0) (ltxa ltxa-0)
    (ltxb ltxb-0) (x x-0))
  (deflistener y)
  (precedes ((0 1) (6 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (6 0)) ((3 0) (0 0)) ((3 0) (6 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (7 0)) ((6 2) (10 0))
    ((7 1) (0 2)) ((8 1) (4 0)) ((9 1) (6 1)) ((10 1) (8 0)))
  (absent (x-0 (exp (gen) ltxa-0)) (x-0 (exp (gen) ltxb-0))
    (y (exp (gen) ltxa)) (y (exp (gen) ltxb))
    (y (exp (gen) (mul w x-0))) (x (exp (gen) ltxa))
    (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a-0 ltxa-0) (b-0 ltxb-0) (a ltxa) (b ltxb))
    ("principal-of" (ltxa-0 a-0) (ltxb-0 b-0) (ltxa a) (ltxb b)))
  (neq ((exp (gen) (mul w x-0)) (gen)) (a b)
    ((exp (gen) (mul (rec x) w x-0 y)) (gen)))
  (precur (8 0) (7 0))
  (uniq-gen ltxa ltxb x x-0 y)
  (uniq-orig na nb na-0)
  (operation nonce-test (added-listener y) (mul w y) (8 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) w x-0 y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul w x-0 y)))))) (send nb))
    ((recv (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w x-0 y))))
      (send
        (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w x-0 y)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w x-0 y))))
      (send
        (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w x-0 y)))))
    ((recv (cat (exp (gen) ltxa) ltxb))
      (send (cat (exp (gen) ltxa) ltxb)))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul w x-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul w x-0 y)))))))
    ((recv (cat (exp (gen) y) (mul (rec x) w x-0)))
      (send (cat (exp (gen) y) (mul (rec x) w x-0))))
    ((recv (cat (exp (gen) x-0) (mul w y)))
      (send (cat (exp (gen) x-0) (mul w y))))
    ((recv (cat (exp (gen) ltxa-0) (exp (gen) ltxb-0)))
      (send (cat na-0 a-0 b-0 (exp (gen) x-0)))) ((recv y) (send y)))
  (label 106)
  (parent 90)
  (unrealized (0 2) (7 0) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa ltxb y x rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y y))
  (deflistener (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x))))
  (deflistener (cat (exp (gen) ltxa) ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x x))
  (deflistener (cat (exp (gen) y) (one)))
  (deflistener (cat (exp (gen) y) x))
  (precedes ((0 1) (6 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (6 0)) ((3 0) (0 0)) ((3 0) (6 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (7 0)) ((6 2) (8 0))
    ((7 1) (0 2)) ((8 1) (4 0)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) ltxb)) (y (exp (gen) x))
    (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a ltxa) (b ltxb))
    ("principal-of" (ltxa a) (ltxb b)))
  (neq ((exp (gen) x) (gen)) (a b) ((exp (gen) y) (gen)))
  (precur (8 0) (7 0))
  (uniq-gen ltxa ltxb y x)
  (uniq-orig na nb)
  (operation nonce-test (contracted (x-0 x) (w x)) (one) (7 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x))))))
      (send nb))
    ((recv (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x))))
      (send (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x))))
      (send (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x)))))
    ((recv (cat (exp (gen) ltxa) ltxb))
      (send (cat (exp (gen) ltxa) ltxb)))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x)))))))
    ((recv (cat (exp (gen) y) (one))) (send (cat (exp (gen) y) (one))))
    ((recv (cat (exp (gen) y) x)) (send (cat (exp (gen) y) x))))
  (label 107)
  (parent 91)
  (unrealized (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (na nb data) (a b self name) (ltxa ltxb y x l rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul y l)))
  (deflistener
    (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x l))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener
    (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x l))))
  (deflistener (cat (exp (gen) ltxa) ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x (mul x l)))
  (deflistener (cat (exp (gen) y) l))
  (deflistener (cat (exp (gen) y) (mul x l)))
  (defstrand ltx-gen 3 (self self) (l l))
  (precedes ((0 1) (6 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (6 0)) ((3 0) (0 0)) ((3 0) (6 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (7 0)) ((6 2) (8 0))
    ((7 1) (0 2)) ((8 1) (4 0)) ((9 0) (6 1)) ((9 2) (7 0)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) ltxb))
    (y (exp (gen) (mul x l))) (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (self l) (a ltxa) (b ltxb))
    ("principal-of" (l self) (ltxa a) (ltxb b)))
  (neq ((exp (gen) (mul x l)) (gen)) (a b)
    ((exp (gen) (mul y l)) (gen)))
  (precur (8 0) (7 0))
  (uniq-gen ltxa ltxb y x l)
  (uniq-orig na nb)
  (operation nonce-test (added-strand ltx-gen 3) l (7 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y l))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul y x l)))))) (send nb))
    ((recv (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x l))))
      (send (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x l)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x l))))
      (send (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x l)))))
    ((recv (cat (exp (gen) ltxa) ltxb))
      (send (cat (exp (gen) ltxa) ltxb)))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul x l))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul y x l)))))))
    ((recv (cat (exp (gen) y) l)) (send (cat (exp (gen) y) l)))
    ((recv (cat (exp (gen) y) (mul x l)))
      (send (cat (exp (gen) y) (mul x l))))
    ((send (cat self (exp (gen) l))) (recv "end-of-protocol") (send l)))
  (label 108)
  (parent 91)
  (unrealized (4 0) (6 1) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa ltxb rndx) (w expt) (y x rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul w y)))
  (deflistener
    (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y x))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener
    (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y x))))
  (deflistener (cat (exp (gen) ltxa) ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x (mul w x)))
  (deflistener (cat (exp (gen) y) w))
  (deflistener (cat (exp (gen) y) (mul w x)))
  (precedes ((0 1) (6 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (6 0)) ((3 0) (0 0)) ((3 0) (6 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (7 0)) ((6 2) (8 0))
    ((7 1) (0 2)) ((8 1) (4 0)))
  (absent (x w) (y (exp (gen) ltxa)) (y (exp (gen) ltxb))
    (y (exp (gen) (mul w x))) (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a ltxa) (b ltxb))
    ("principal-of" (ltxa a) (ltxb b)))
  (neq ((exp (gen) (mul w x)) (gen)) (a b)
    ((exp (gen) (mul w y)) (gen)))
  (precur (8 0) (7 0))
  (uniq-gen ltxa ltxb y x)
  (uniq-orig na nb)
  (operation nonce-test (added-absence x w) w (7 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul w y x)))))) (send nb))
    ((recv (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y x))))
      (send (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y x)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y x))))
      (send (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y x)))))
    ((recv (cat (exp (gen) ltxa) ltxb))
      (send (cat (exp (gen) ltxa) ltxb)))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul w x))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul w y x)))))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w)))
    ((recv (cat (exp (gen) y) (mul w x)))
      (send (cat (exp (gen) y) (mul w x)))))
  (label 109)
  (parent 91)
  (unrealized (4 0) (8 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (x ltxa ltxb rndx) (w expt) (y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul (rec x) w y)))
  (deflistener (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y))))
  (deflistener (cat (exp (gen) ltxa) ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x w))
  (deflistener (cat (exp (gen) y) (mul (rec x) w)))
  (deflistener (cat (exp (gen) y) w))
  (deflistener x)
  (precedes ((0 1) (6 1)) ((0 1) (9 0)) ((0 3) (2 1)) ((0 3) (3 1))
    ((2 0) (0 0)) ((2 0) (6 0)) ((3 0) (0 0)) ((3 0) (6 0))
    ((3 2) (5 0)) ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (7 0))
    ((6 2) (8 0)) ((7 1) (0 2)) ((8 1) (4 0)) ((9 1) (7 0)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) ltxb)) (y (exp (gen) w))
    (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a ltxa) (b ltxb))
    ("principal-of" (ltxa a) (ltxb b)))
  (neq ((exp (gen) w) (gen)) (a b)
    ((exp (gen) (mul (rec x) w y)) (gen)))
  (precur (8 0) (7 0))
  (uniq-gen x ltxa ltxb y)
  (uniq-orig na nb)
  (operation nonce-test (added-listener x) (mul (rec x) w) (7 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) w y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y))))
      (send (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y))))
      (send (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y)))))
    ((recv (cat (exp (gen) ltxa) ltxb))
      (send (cat (exp (gen) ltxa) ltxb)))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) w)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y)))))))
    ((recv (cat (exp (gen) y) (mul (rec x) w)))
      (send (cat (exp (gen) y) (mul (rec x) w))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w)))
    ((recv x) (send x)))
  (label 110)
  (parent 91)
  (unrealized (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (na nb na-0 nb-0 data) (a b a-0 b-0 name)
    (ltxa ltxb ltxa-0 ltxb-0 rndx) (x expt) (x-0 rndx) (w expt)
    (y y-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x-0) (y (mul (rec x-0) w y y-0)))
  (deflistener
    (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y y-0))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener
    (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y y-0))))
  (deflistener (cat (exp (gen) ltxa) ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y-0) (x (mul w y)))
  (deflistener (cat (exp (gen) y-0) (mul (rec x-0) w y)))
  (deflistener (cat (exp (gen) y) (mul w y-0)))
  (defstrand resp 3 (na na-0) (nb nb-0) (a a-0) (b b-0) (ltxa ltxa-0)
    (ltxb ltxb-0) (y y) (x x))
  (deflistener y-0)
  (precedes ((0 1) (6 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (6 0)) ((3 0) (0 0)) ((3 0) (6 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (7 0)) ((6 2) (10 0))
    ((7 1) (0 2)) ((8 1) (4 0)) ((9 2) (6 1)) ((10 1) (8 0)))
  (absent (y (exp (gen) ltxa-0)) (y (exp (gen) ltxb-0))
    (y (exp (gen) x)) (y-0 (exp (gen) ltxa)) (y-0 (exp (gen) ltxb))
    (y-0 (exp (gen) (mul w y))) (x-0 (exp (gen) ltxa))
    (x-0 (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a-0 ltxa-0) (b-0 ltxb-0) (a ltxa) (b ltxb))
    ("principal-of" (ltxa-0 a-0) (ltxb-0 b-0) (ltxa a) (ltxb b)))
  (neq ((exp (gen) x) (gen)) ((exp (gen) (mul w y)) (gen)) (a b)
    ((exp (gen) (mul (rec x-0) w y y-0)) (gen)))
  (precur (8 0) (7 0))
  (uniq-gen ltxa ltxb x-0 y y-0)
  (uniq-orig na nb nb-0)
  (operation nonce-test (added-listener y-0) (mul w y-0) (8 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x-0)))
      (recv
        (cat (exp (gen) (mul (rec x-0) w y y-0))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul w y y-0)))))) (send nb))
    ((recv (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y y-0))))
      (send
        (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y y-0)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y y-0))))
      (send
        (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y y-0)))))
    ((recv (cat (exp (gen) ltxa) ltxb))
      (send (cat (exp (gen) ltxa) ltxb)))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul w y))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul w y y-0)))))))
    ((recv (cat (exp (gen) y-0) (mul (rec x-0) w y)))
      (send (cat (exp (gen) y-0) (mul (rec x-0) w y))))
    ((recv (cat (exp (gen) y) (mul w y-0)))
      (send (cat (exp (gen) y) (mul w y-0))))
    ((recv (cat (exp (gen) ltxa-0) (exp (gen) ltxb-0)))
      (recv (cat na-0 a-0 b-0 (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul ltxa-0 ltxb-0))
              (exp (gen) (mul x y))))))) ((recv y-0) (send y-0)))
  (label 111)
  (parent 92)
  (unrealized (0 2) (7 0) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxb x rndx) (w expt) (l y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa l) (ltxb ltxb)
    (x x) (y (mul (rec x) w l y)))
  (deflistener (hash (exp (gen) (mul ltxb l)) (exp (gen) (mul w l y))))
  (defstrand ltx-gen 3 (self a) (l l))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener (cat (exp (gen) (mul ltxb l)) (exp (gen) (mul w l y))))
  (deflistener (cat (exp (gen) l) ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa l) (ltxb ltxb)
    (y y) (x (mul w l)))
  (deflistener (cat (exp (gen) y) (mul (rec x) w l)))
  (deflistener (cat (exp (gen) l) (mul w y)))
  (deflistener y)
  (precedes ((0 1) (6 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (6 0)) ((3 0) (0 0)) ((3 0) (6 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (7 0)) ((6 2) (9 0))
    ((7 1) (0 2)) ((8 1) (4 0)) ((9 1) (8 0)))
  (absent (y (exp (gen) l)) (y (exp (gen) ltxb))
    (y (exp (gen) (mul w l))) (x (exp (gen) l)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a l) (b ltxb)) ("principal-of" (l a) (ltxb b)))
  (neq ((exp (gen) (mul w l)) (gen)) (a b)
    ((exp (gen) (mul (rec x) w l y)) (gen)))
  (precur (8 0) (7 0))
  (uniq-gen ltxb x l y)
  (uniq-orig na nb)
  (operation nonce-test (added-listener y) (mul w y) (8 0))
  (traces
    ((recv (cat (exp (gen) l) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) w l y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxb l)) (exp (gen) (mul w l y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul ltxb l)) (exp (gen) (mul w l y))))
      (send (hash (exp (gen) (mul ltxb l)) (exp (gen) (mul w l y)))))
    ((send (cat a (exp (gen) l))) (recv "end-of-protocol") (send l))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) (mul ltxb l)) (exp (gen) (mul w l y))))
      (send (cat (exp (gen) (mul ltxb l)) (exp (gen) (mul w l y)))))
    ((recv (cat (exp (gen) l) ltxb)) (send (cat (exp (gen) l) ltxb)))
    ((recv (cat (exp (gen) l) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul w l))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxb l)) (exp (gen) (mul w l y)))))))
    ((recv (cat (exp (gen) y) (mul (rec x) w l)))
      (send (cat (exp (gen) y) (mul (rec x) w l))))
    ((recv (cat (exp (gen) l) (mul w y)))
      (send (cat (exp (gen) l) (mul w y)))) ((recv y) (send y)))
  (label 112)
  (parent 93)
  (unrealized (0 2) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa x rndx) (w expt) (l y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb l)
    (x x) (y (mul (rec x) w l y)))
  (deflistener (hash (exp (gen) (mul ltxa l)) (exp (gen) (mul w l y))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l l))
  (deflistener (cat (exp (gen) (mul ltxa l)) (exp (gen) (mul w l y))))
  (deflistener (cat (exp (gen) ltxa) l))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb l)
    (y y) (x (mul w l)))
  (deflistener (cat (exp (gen) y) (mul (rec x) w l)))
  (deflistener (cat (exp (gen) l) (mul w y)))
  (deflistener y)
  (precedes ((0 1) (6 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (6 0)) ((3 0) (0 0)) ((3 0) (6 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (7 0)) ((6 2) (9 0))
    ((7 1) (0 2)) ((8 1) (4 0)) ((9 1) (8 0)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) l))
    (y (exp (gen) (mul w l))) (x (exp (gen) ltxa)) (x (exp (gen) l)))
  (fn-of ("ltx-of" (b l) (a ltxa)) ("principal-of" (l b) (ltxa a)))
  (neq ((exp (gen) (mul w l)) (gen)) (a b)
    ((exp (gen) (mul (rec x) w l y)) (gen)))
  (precur (8 0) (7 0))
  (uniq-gen ltxa x l y)
  (uniq-orig na nb)
  (operation nonce-test (added-listener y) (mul w y) (8 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) l)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) w l y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa l)) (exp (gen) (mul w l y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul ltxa l)) (exp (gen) (mul w l y))))
      (send (hash (exp (gen) (mul ltxa l)) (exp (gen) (mul w l y)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) l))) (recv "end-of-protocol") (send l))
    ((recv (cat (exp (gen) (mul ltxa l)) (exp (gen) (mul w l y))))
      (send (cat (exp (gen) (mul ltxa l)) (exp (gen) (mul w l y)))))
    ((recv (cat (exp (gen) ltxa) l)) (send (cat (exp (gen) ltxa) l)))
    ((recv (cat (exp (gen) ltxa) (exp (gen) l)))
      (recv (cat na a b (exp (gen) (mul w l))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa l)) (exp (gen) (mul w l y)))))))
    ((recv (cat (exp (gen) y) (mul (rec x) w l)))
      (send (cat (exp (gen) y) (mul (rec x) w l))))
    ((recv (cat (exp (gen) l) (mul w y)))
      (send (cat (exp (gen) l) (mul w y)))) ((recv y) (send y)))
  (label 113)
  (parent 94)
  (unrealized (0 2) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (na nb data) (a b self name) (ltxa ltxb x rndx) (w expt)
    (l y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul (rec x) w l y)))
  (deflistener
    (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w l y))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener
    (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w l y))))
  (deflistener (cat (exp (gen) ltxa) ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x (mul w l)))
  (deflistener (cat (exp (gen) y) (mul (rec x) w l)))
  (deflistener (cat (exp (gen) l) (mul w y)))
  (defstrand ltx-gen 1 (self self) (l l))
  (deflistener y)
  (precedes ((0 1) (6 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (6 0)) ((3 0) (0 0)) ((3 0) (6 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (7 0)) ((6 2) (10 0))
    ((7 1) (0 2)) ((8 1) (4 0)) ((9 0) (6 1)) ((10 1) (8 0)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) ltxb))
    (y (exp (gen) (mul w l))) (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (self l) (a ltxa) (b ltxb))
    ("principal-of" (l self) (ltxa a) (ltxb b)))
  (neq ((exp (gen) (mul w l)) (gen)) (a b)
    ((exp (gen) (mul (rec x) w l y)) (gen)))
  (precur (8 0) (7 0))
  (uniq-gen ltxa ltxb x l y)
  (uniq-orig na nb)
  (operation nonce-test (added-listener y) (mul w y) (8 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) w l y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul w l y)))))) (send nb))
    ((recv (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w l y))))
      (send (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w l y)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w l y))))
      (send (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w l y)))))
    ((recv (cat (exp (gen) ltxa) ltxb))
      (send (cat (exp (gen) ltxa) ltxb)))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul w l))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul w l y)))))))
    ((recv (cat (exp (gen) y) (mul (rec x) w l)))
      (send (cat (exp (gen) y) (mul (rec x) w l))))
    ((recv (cat (exp (gen) l) (mul w y)))
      (send (cat (exp (gen) l) (mul w y))))
    ((send (cat self (exp (gen) l)))) ((recv y) (send y)))
  (label 114)
  (parent 95)
  (unrealized (0 2) (7 0) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa ltxb x rndx) (w expt) (y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul (rec x) w y)))
  (deflistener (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y))))
  (deflistener (cat (exp (gen) ltxb) ltxa))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x w))
  (deflistener (cat (exp (gen) y) (mul (rec x) w)))
  (deflistener (cat (gen) (mul w y)))
  (deflistener y)
  (precedes ((0 1) (6 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (6 0)) ((2 2) (5 0)) ((3 0) (0 0)) ((3 0) (6 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (7 0)) ((6 2) (9 0))
    ((7 1) (0 2)) ((8 1) (4 0)) ((9 1) (8 0)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) ltxb)) (y (exp (gen) w))
    (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a ltxa) (b ltxb))
    ("principal-of" (ltxa a) (ltxb b)))
  (neq ((exp (gen) w) (gen)) (a b)
    ((exp (gen) (mul (rec x) w y)) (gen)))
  (precur (8 0) (7 0))
  (uniq-gen ltxa ltxb x y)
  (uniq-orig na nb)
  (operation nonce-test (added-listener y) (mul w y) (8 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) w y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y))))
      (send (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y))))
      (send (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y)))))
    ((recv (cat (exp (gen) ltxb) ltxa))
      (send (cat (exp (gen) ltxb) ltxa)))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) w)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y)))))))
    ((recv (cat (exp (gen) y) (mul (rec x) w)))
      (send (cat (exp (gen) y) (mul (rec x) w))))
    ((recv (cat (gen) (mul w y))) (send (cat (gen) (mul w y))))
    ((recv y) (send y)))
  (label 115)
  (parent 96)
  (unrealized (0 2) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (w expt) (ltxa ltxb x y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul w y)))
  (deflistener
    (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w x y))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener
    (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w x y))))
  (deflistener (cat (exp (gen) ltxb) ltxa))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x (mul w x)))
  (deflistener (cat (exp (gen) y) w))
  (deflistener (cat (exp (gen) x) (mul w y)))
  (deflistener y)
  (precedes ((0 1) (6 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (6 0)) ((2 2) (5 0)) ((3 0) (0 0)) ((3 0) (6 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (7 0)) ((6 2) (9 0))
    ((7 1) (0 2)) ((8 1) (4 0)) ((9 1) (8 0)))
  (absent (x (exp (gen) ltxa)) (x (exp (gen) ltxb)) (y (exp (gen) ltxa))
    (y (exp (gen) ltxb)) (y (exp (gen) (mul w x))))
  (fn-of ("ltx-of" (a ltxa) (b ltxb))
    ("principal-of" (ltxa a) (ltxb b)))
  (neq ((exp (gen) (mul w x)) (gen)) (a b)
    ((exp (gen) (mul w y)) (gen)))
  (precur (8 0) (7 0))
  (uniq-gen ltxa ltxb x y)
  (uniq-orig na nb)
  (operation nonce-test (added-listener y) (mul w y) (8 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul w x y)))))) (send nb))
    ((recv (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w x y))))
      (send (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w x y)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w x y))))
      (send (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w x y)))))
    ((recv (cat (exp (gen) ltxb) ltxa))
      (send (cat (exp (gen) ltxb) ltxa)))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul w x))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul w x y)))))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w)))
    ((recv (cat (exp (gen) x) (mul w y)))
      (send (cat (exp (gen) x) (mul w y)))) ((recv y) (send y)))
  (label 116)
  (parent 97)
  (unrealized (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (na nb na-0 data) (a b a-0 b-0 name)
    (ltxa ltxb ltxa-0 ltxb-0 x rndx) (w expt) (x-0 y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul (rec x) w x-0 y)))
  (deflistener
    (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w x-0 y))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener
    (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w x-0 y))))
  (deflistener (cat (exp (gen) ltxb) ltxa))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x (mul w x-0)))
  (deflistener (cat (exp (gen) y) (mul (rec x) w x-0)))
  (deflistener (cat (exp (gen) x-0) (mul w y)))
  (defstrand init 2 (na na-0) (a a-0) (b b-0) (ltxa ltxa-0)
    (ltxb ltxb-0) (x x-0))
  (deflistener y)
  (precedes ((0 1) (6 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (6 0)) ((2 2) (5 0)) ((3 0) (0 0)) ((3 0) (6 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (7 0)) ((6 2) (10 0))
    ((7 1) (0 2)) ((8 1) (4 0)) ((9 1) (6 1)) ((10 1) (8 0)))
  (absent (x-0 (exp (gen) ltxa-0)) (x-0 (exp (gen) ltxb-0))
    (y (exp (gen) ltxa)) (y (exp (gen) ltxb))
    (y (exp (gen) (mul w x-0))) (x (exp (gen) ltxa))
    (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a-0 ltxa-0) (b-0 ltxb-0) (a ltxa) (b ltxb))
    ("principal-of" (ltxa-0 a-0) (ltxb-0 b-0) (ltxa a) (ltxb b)))
  (neq ((exp (gen) (mul w x-0)) (gen)) (a b)
    ((exp (gen) (mul (rec x) w x-0 y)) (gen)))
  (precur (8 0) (7 0))
  (uniq-gen ltxa ltxb x x-0 y)
  (uniq-orig na nb na-0)
  (operation nonce-test (added-listener y) (mul w y) (8 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) w x-0 y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul w x-0 y)))))) (send nb))
    ((recv (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w x-0 y))))
      (send
        (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w x-0 y)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w x-0 y))))
      (send
        (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w x-0 y)))))
    ((recv (cat (exp (gen) ltxb) ltxa))
      (send (cat (exp (gen) ltxb) ltxa)))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul w x-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul w x-0 y)))))))
    ((recv (cat (exp (gen) y) (mul (rec x) w x-0)))
      (send (cat (exp (gen) y) (mul (rec x) w x-0))))
    ((recv (cat (exp (gen) x-0) (mul w y)))
      (send (cat (exp (gen) x-0) (mul w y))))
    ((recv (cat (exp (gen) ltxa-0) (exp (gen) ltxb-0)))
      (send (cat na-0 a-0 b-0 (exp (gen) x-0)))) ((recv y) (send y)))
  (label 117)
  (parent 98)
  (unrealized (0 2) (7 0) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa ltxb y x rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y y))
  (deflistener (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x))))
  (deflistener (cat (exp (gen) ltxb) ltxa))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x x))
  (deflistener (cat (exp (gen) y) (one)))
  (deflistener (cat (exp (gen) y) x))
  (precedes ((0 1) (6 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (6 0)) ((2 2) (5 0)) ((3 0) (0 0)) ((3 0) (6 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (7 0)) ((6 2) (8 0))
    ((7 1) (0 2)) ((8 1) (4 0)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) ltxb)) (y (exp (gen) x))
    (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a ltxa) (b ltxb))
    ("principal-of" (ltxa a) (ltxb b)))
  (neq ((exp (gen) x) (gen)) (a b) ((exp (gen) y) (gen)))
  (precur (8 0) (7 0))
  (uniq-gen ltxa ltxb y x)
  (uniq-orig na nb)
  (operation nonce-test (contracted (x-0 x) (w x)) (one) (7 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x))))))
      (send nb))
    ((recv (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x))))
      (send (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x))))
      (send (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x)))))
    ((recv (cat (exp (gen) ltxb) ltxa))
      (send (cat (exp (gen) ltxb) ltxa)))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x)))))))
    ((recv (cat (exp (gen) y) (one))) (send (cat (exp (gen) y) (one))))
    ((recv (cat (exp (gen) y) x)) (send (cat (exp (gen) y) x))))
  (label 118)
  (parent 99)
  (unrealized (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (na nb data) (a b self name) (ltxa ltxb y x l rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul y l)))
  (deflistener
    (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x l))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener
    (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x l))))
  (deflistener (cat (exp (gen) ltxb) ltxa))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x (mul x l)))
  (deflistener (cat (exp (gen) y) l))
  (deflistener (cat (exp (gen) y) (mul x l)))
  (defstrand ltx-gen 3 (self self) (l l))
  (precedes ((0 1) (6 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (6 0)) ((2 2) (5 0)) ((3 0) (0 0)) ((3 0) (6 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (7 0)) ((6 2) (8 0))
    ((7 1) (0 2)) ((8 1) (4 0)) ((9 0) (6 1)) ((9 2) (7 0)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) ltxb))
    (y (exp (gen) (mul x l))) (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (self l) (a ltxa) (b ltxb))
    ("principal-of" (l self) (ltxa a) (ltxb b)))
  (neq ((exp (gen) (mul x l)) (gen)) (a b)
    ((exp (gen) (mul y l)) (gen)))
  (precur (8 0) (7 0))
  (uniq-gen ltxa ltxb y x l)
  (uniq-orig na nb)
  (operation nonce-test (added-strand ltx-gen 3) l (7 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y l))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul y x l)))))) (send nb))
    ((recv (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x l))))
      (send (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x l)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x l))))
      (send (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x l)))))
    ((recv (cat (exp (gen) ltxb) ltxa))
      (send (cat (exp (gen) ltxb) ltxa)))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul x l))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul y x l)))))))
    ((recv (cat (exp (gen) y) l)) (send (cat (exp (gen) y) l)))
    ((recv (cat (exp (gen) y) (mul x l)))
      (send (cat (exp (gen) y) (mul x l))))
    ((send (cat self (exp (gen) l))) (recv "end-of-protocol") (send l)))
  (label 119)
  (parent 99)
  (unrealized (4 0) (6 1) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa ltxb rndx) (w expt) (y x rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul w y)))
  (deflistener
    (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y x))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener
    (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y x))))
  (deflistener (cat (exp (gen) ltxb) ltxa))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x (mul w x)))
  (deflistener (cat (exp (gen) y) w))
  (deflistener (cat (exp (gen) y) (mul w x)))
  (precedes ((0 1) (6 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (6 0)) ((2 2) (5 0)) ((3 0) (0 0)) ((3 0) (6 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (7 0)) ((6 2) (8 0))
    ((7 1) (0 2)) ((8 1) (4 0)))
  (absent (x w) (y (exp (gen) ltxa)) (y (exp (gen) ltxb))
    (y (exp (gen) (mul w x))) (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a ltxa) (b ltxb))
    ("principal-of" (ltxa a) (ltxb b)))
  (neq ((exp (gen) (mul w x)) (gen)) (a b)
    ((exp (gen) (mul w y)) (gen)))
  (precur (8 0) (7 0))
  (uniq-gen ltxa ltxb y x)
  (uniq-orig na nb)
  (operation nonce-test (added-absence x w) w (7 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul w y x)))))) (send nb))
    ((recv (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y x))))
      (send (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y x)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y x))))
      (send (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y x)))))
    ((recv (cat (exp (gen) ltxb) ltxa))
      (send (cat (exp (gen) ltxb) ltxa)))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul w x))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul w y x)))))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w)))
    ((recv (cat (exp (gen) y) (mul w x)))
      (send (cat (exp (gen) y) (mul w x)))))
  (label 120)
  (parent 99)
  (unrealized (4 0) (8 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (x ltxa ltxb rndx) (w expt) (y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul (rec x) w y)))
  (deflistener (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y))))
  (deflistener (cat (exp (gen) ltxb) ltxa))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x w))
  (deflistener (cat (exp (gen) y) (mul (rec x) w)))
  (deflistener (cat (exp (gen) y) w))
  (deflistener x)
  (precedes ((0 1) (6 1)) ((0 1) (9 0)) ((0 3) (2 1)) ((0 3) (3 1))
    ((2 0) (0 0)) ((2 0) (6 0)) ((2 2) (5 0)) ((3 0) (0 0))
    ((3 0) (6 0)) ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (7 0))
    ((6 2) (8 0)) ((7 1) (0 2)) ((8 1) (4 0)) ((9 1) (7 0)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) ltxb)) (y (exp (gen) w))
    (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a ltxa) (b ltxb))
    ("principal-of" (ltxa a) (ltxb b)))
  (neq ((exp (gen) w) (gen)) (a b)
    ((exp (gen) (mul (rec x) w y)) (gen)))
  (precur (8 0) (7 0))
  (uniq-gen x ltxa ltxb y)
  (uniq-orig na nb)
  (operation nonce-test (added-listener x) (mul (rec x) w) (7 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) w y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y))))
      (send (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y))))
      (send (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y)))))
    ((recv (cat (exp (gen) ltxb) ltxa))
      (send (cat (exp (gen) ltxb) ltxa)))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) w)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y)))))))
    ((recv (cat (exp (gen) y) (mul (rec x) w)))
      (send (cat (exp (gen) y) (mul (rec x) w))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w)))
    ((recv x) (send x)))
  (label 121)
  (parent 99)
  (unrealized (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (na nb na-0 nb-0 data) (a b a-0 b-0 name)
    (ltxa ltxb ltxa-0 ltxb-0 rndx) (x expt) (x-0 rndx) (w expt)
    (y y-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x-0) (y (mul (rec x-0) w y y-0)))
  (deflistener
    (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y y-0))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener
    (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y y-0))))
  (deflistener (cat (exp (gen) ltxb) ltxa))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y-0) (x (mul w y)))
  (deflistener (cat (exp (gen) y-0) (mul (rec x-0) w y)))
  (deflistener (cat (exp (gen) y) (mul w y-0)))
  (defstrand resp 3 (na na-0) (nb nb-0) (a a-0) (b b-0) (ltxa ltxa-0)
    (ltxb ltxb-0) (y y) (x x))
  (deflistener y-0)
  (precedes ((0 1) (6 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (6 0)) ((2 2) (5 0)) ((3 0) (0 0)) ((3 0) (6 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (7 0)) ((6 2) (10 0))
    ((7 1) (0 2)) ((8 1) (4 0)) ((9 2) (6 1)) ((10 1) (8 0)))
  (absent (y (exp (gen) ltxa-0)) (y (exp (gen) ltxb-0))
    (y (exp (gen) x)) (y-0 (exp (gen) ltxa)) (y-0 (exp (gen) ltxb))
    (y-0 (exp (gen) (mul w y))) (x-0 (exp (gen) ltxa))
    (x-0 (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a-0 ltxa-0) (b-0 ltxb-0) (a ltxa) (b ltxb))
    ("principal-of" (ltxa-0 a-0) (ltxb-0 b-0) (ltxa a) (ltxb b)))
  (neq ((exp (gen) x) (gen)) ((exp (gen) (mul w y)) (gen)) (a b)
    ((exp (gen) (mul (rec x-0) w y y-0)) (gen)))
  (precur (8 0) (7 0))
  (uniq-gen ltxa ltxb x-0 y y-0)
  (uniq-orig na nb nb-0)
  (operation nonce-test (added-listener y-0) (mul w y-0) (8 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x-0)))
      (recv
        (cat (exp (gen) (mul (rec x-0) w y y-0))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul w y y-0)))))) (send nb))
    ((recv (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y y-0))))
      (send
        (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y y-0)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y y-0))))
      (send
        (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y y-0)))))
    ((recv (cat (exp (gen) ltxb) ltxa))
      (send (cat (exp (gen) ltxb) ltxa)))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul w y))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul w y y-0)))))))
    ((recv (cat (exp (gen) y-0) (mul (rec x-0) w y)))
      (send (cat (exp (gen) y-0) (mul (rec x-0) w y))))
    ((recv (cat (exp (gen) y) (mul w y-0)))
      (send (cat (exp (gen) y) (mul w y-0))))
    ((recv (cat (exp (gen) ltxa-0) (exp (gen) ltxb-0)))
      (recv (cat na-0 a-0 b-0 (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul ltxa-0 ltxb-0))
              (exp (gen) (mul x y))))))) ((recv y-0) (send y-0)))
  (label 122)
  (parent 100)
  (unrealized (0 2) (7 0) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxb x rndx) (w expt) (l y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa l) (ltxb ltxb)
    (x x) (y (mul (rec x) w l y)))
  (deflistener (hash (exp (gen) (mul ltxb l)) (exp (gen) (mul w l y))))
  (defstrand ltx-gen 3 (self a) (l l))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener (cat (exp (gen) (mul ltxb l)) (exp (gen) (mul w l y))))
  (deflistener (cat (exp (gen) ltxb) l))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa l) (ltxb ltxb)
    (y y) (x (mul w l)))
  (deflistener (cat (exp (gen) y) (mul (rec x) w l)))
  (deflistener (cat (exp (gen) l) (mul w y)))
  (deflistener y)
  (precedes ((0 1) (6 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (6 0)) ((2 2) (5 0)) ((3 0) (0 0)) ((3 0) (6 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (7 0)) ((6 2) (9 0))
    ((7 1) (0 2)) ((8 1) (4 0)) ((9 1) (8 0)))
  (absent (y (exp (gen) l)) (y (exp (gen) ltxb))
    (y (exp (gen) (mul w l))) (x (exp (gen) l)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a l) (b ltxb)) ("principal-of" (l a) (ltxb b)))
  (neq ((exp (gen) (mul w l)) (gen)) (a b)
    ((exp (gen) (mul (rec x) w l y)) (gen)))
  (precur (8 0) (7 0))
  (uniq-gen ltxb x l y)
  (uniq-orig na nb)
  (operation nonce-test (added-listener y) (mul w y) (8 0))
  (traces
    ((recv (cat (exp (gen) l) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) w l y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxb l)) (exp (gen) (mul w l y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul ltxb l)) (exp (gen) (mul w l y))))
      (send (hash (exp (gen) (mul ltxb l)) (exp (gen) (mul w l y)))))
    ((send (cat a (exp (gen) l))) (recv "end-of-protocol") (send l))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) (mul ltxb l)) (exp (gen) (mul w l y))))
      (send (cat (exp (gen) (mul ltxb l)) (exp (gen) (mul w l y)))))
    ((recv (cat (exp (gen) ltxb) l)) (send (cat (exp (gen) ltxb) l)))
    ((recv (cat (exp (gen) l) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul w l))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxb l)) (exp (gen) (mul w l y)))))))
    ((recv (cat (exp (gen) y) (mul (rec x) w l)))
      (send (cat (exp (gen) y) (mul (rec x) w l))))
    ((recv (cat (exp (gen) l) (mul w y)))
      (send (cat (exp (gen) l) (mul w y)))) ((recv y) (send y)))
  (label 123)
  (parent 101)
  (unrealized (0 2) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa x rndx) (w expt) (l y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb l)
    (x x) (y (mul (rec x) w l y)))
  (deflistener (hash (exp (gen) (mul ltxa l)) (exp (gen) (mul w l y))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l l))
  (deflistener (cat (exp (gen) (mul ltxa l)) (exp (gen) (mul w l y))))
  (deflistener (cat (exp (gen) l) ltxa))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb l)
    (y y) (x (mul w l)))
  (deflistener (cat (exp (gen) y) (mul (rec x) w l)))
  (deflistener (cat (exp (gen) l) (mul w y)))
  (deflistener y)
  (precedes ((0 1) (6 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (6 0)) ((2 2) (5 0)) ((3 0) (0 0)) ((3 0) (6 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (7 0)) ((6 2) (9 0))
    ((7 1) (0 2)) ((8 1) (4 0)) ((9 1) (8 0)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) l))
    (y (exp (gen) (mul w l))) (x (exp (gen) ltxa)) (x (exp (gen) l)))
  (fn-of ("ltx-of" (b l) (a ltxa)) ("principal-of" (l b) (ltxa a)))
  (neq ((exp (gen) (mul w l)) (gen)) (a b)
    ((exp (gen) (mul (rec x) w l y)) (gen)))
  (precur (8 0) (7 0))
  (uniq-gen ltxa x l y)
  (uniq-orig na nb)
  (operation nonce-test (added-listener y) (mul w y) (8 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) l)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) w l y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa l)) (exp (gen) (mul w l y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul ltxa l)) (exp (gen) (mul w l y))))
      (send (hash (exp (gen) (mul ltxa l)) (exp (gen) (mul w l y)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) l))) (recv "end-of-protocol") (send l))
    ((recv (cat (exp (gen) (mul ltxa l)) (exp (gen) (mul w l y))))
      (send (cat (exp (gen) (mul ltxa l)) (exp (gen) (mul w l y)))))
    ((recv (cat (exp (gen) l) ltxa)) (send (cat (exp (gen) l) ltxa)))
    ((recv (cat (exp (gen) ltxa) (exp (gen) l)))
      (recv (cat na a b (exp (gen) (mul w l))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa l)) (exp (gen) (mul w l y)))))))
    ((recv (cat (exp (gen) y) (mul (rec x) w l)))
      (send (cat (exp (gen) y) (mul (rec x) w l))))
    ((recv (cat (exp (gen) l) (mul w y)))
      (send (cat (exp (gen) l) (mul w y)))) ((recv y) (send y)))
  (label 124)
  (parent 102)
  (unrealized (0 2) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (na nb data) (a b self name) (ltxa ltxb x rndx) (w expt)
    (l y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul (rec x) w l y)))
  (deflistener
    (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w l y))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener
    (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w l y))))
  (deflistener (cat (exp (gen) ltxb) ltxa))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x (mul w l)))
  (deflistener (cat (exp (gen) y) (mul (rec x) w l)))
  (deflistener (cat (exp (gen) l) (mul w y)))
  (defstrand ltx-gen 1 (self self) (l l))
  (deflistener y)
  (precedes ((0 1) (6 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (6 0)) ((2 2) (5 0)) ((3 0) (0 0)) ((3 0) (6 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (7 0)) ((6 2) (10 0))
    ((7 1) (0 2)) ((8 1) (4 0)) ((9 0) (6 1)) ((10 1) (8 0)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) ltxb))
    (y (exp (gen) (mul w l))) (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (self l) (a ltxa) (b ltxb))
    ("principal-of" (l self) (ltxa a) (ltxb b)))
  (neq ((exp (gen) (mul w l)) (gen)) (a b)
    ((exp (gen) (mul (rec x) w l y)) (gen)))
  (precur (8 0) (7 0))
  (uniq-gen ltxa ltxb x l y)
  (uniq-orig na nb)
  (operation nonce-test (added-listener y) (mul w y) (8 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) w l y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul w l y)))))) (send nb))
    ((recv (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w l y))))
      (send (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w l y)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w l y))))
      (send (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w l y)))))
    ((recv (cat (exp (gen) ltxb) ltxa))
      (send (cat (exp (gen) ltxb) ltxa)))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul w l))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul w l y)))))))
    ((recv (cat (exp (gen) y) (mul (rec x) w l)))
      (send (cat (exp (gen) y) (mul (rec x) w l))))
    ((recv (cat (exp (gen) l) (mul w y)))
      (send (cat (exp (gen) l) (mul w y))))
    ((send (cat self (exp (gen) l)))) ((recv y) (send y)))
  (label 125)
  (parent 103)
  (unrealized (0 2) (7 0) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa ltxb rndx) (w expt) (y x rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul w y)))
  (deflistener
    (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y x))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener
    (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y x))))
  (deflistener (cat (exp (gen) ltxa) ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x (mul w x)))
  (deflistener (cat (exp (gen) y) w))
  (deflistener (cat (exp (gen) y) (mul w x)))
  (deflistener x)
  (precedes ((0 1) (6 1)) ((0 1) (9 0)) ((0 3) (2 1)) ((0 3) (3 1))
    ((2 0) (0 0)) ((2 0) (6 0)) ((3 0) (0 0)) ((3 0) (6 0))
    ((3 2) (5 0)) ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (7 0))
    ((6 2) (8 0)) ((7 1) (0 2)) ((8 1) (4 0)) ((9 1) (8 0)))
  (absent (x w) (y (exp (gen) ltxa)) (y (exp (gen) ltxb))
    (y (exp (gen) (mul w x))) (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a ltxa) (b ltxb))
    ("principal-of" (ltxa a) (ltxb b)))
  (neq ((exp (gen) (mul w x)) (gen)) (a b)
    ((exp (gen) (mul w y)) (gen)))
  (precur (8 0) (7 0))
  (uniq-gen ltxa ltxb y x)
  (uniq-orig na nb)
  (operation nonce-test (added-listener x) (mul w x) (8 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul w y x)))))) (send nb))
    ((recv (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y x))))
      (send (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y x)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y x))))
      (send (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y x)))))
    ((recv (cat (exp (gen) ltxa) ltxb))
      (send (cat (exp (gen) ltxa) ltxb)))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul w x))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul w y x)))))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w)))
    ((recv (cat (exp (gen) y) (mul w x)))
      (send (cat (exp (gen) y) (mul w x)))) ((recv x) (send x)))
  (label 126)
  (parent 109)
  (unrealized (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa ltxb rndx) (w expt) (y x rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul w y)))
  (deflistener
    (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y x))))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener
    (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y x))))
  (deflistener (cat (exp (gen) ltxb) ltxa))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x (mul w x)))
  (deflistener (cat (exp (gen) y) w))
  (deflistener (cat (exp (gen) y) (mul w x)))
  (deflistener x)
  (precedes ((0 1) (6 1)) ((0 1) (9 0)) ((0 3) (2 1)) ((0 3) (3 1))
    ((2 0) (0 0)) ((2 0) (6 0)) ((2 2) (5 0)) ((3 0) (0 0))
    ((3 0) (6 0)) ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (7 0))
    ((6 2) (8 0)) ((7 1) (0 2)) ((8 1) (4 0)) ((9 1) (8 0)))
  (absent (x w) (y (exp (gen) ltxa)) (y (exp (gen) ltxb))
    (y (exp (gen) (mul w x))) (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a ltxa) (b ltxb))
    ("principal-of" (ltxa a) (ltxb b)))
  (neq ((exp (gen) (mul w x)) (gen)) (a b)
    ((exp (gen) (mul w y)) (gen)))
  (precur (8 0) (7 0))
  (uniq-gen ltxa ltxb y x)
  (uniq-orig na nb)
  (operation nonce-test (added-listener x) (mul w x) (8 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul w y x)))))) (send nb))
    ((recv (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y x))))
      (send (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y x)))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y x))))
      (send (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y x)))))
    ((recv (cat (exp (gen) ltxb) ltxa))
      (send (cat (exp (gen) ltxb) ltxa)))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul w x))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul w y x)))))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w)))
    ((recv (cat (exp (gen) y) (mul w x)))
      (send (cat (exp (gen) y) (mul w x)))) ((recv x) (send x)))
  (label 127)
  (parent 120)
  (unrealized (9 0))
  (dead)
  (comment "empty cohort"))

(comment "Nothing left to do")

(defprotocol dhcr-um diffie-hellman
  (defrole init
    (vars (ltxa ltxb x rndx) (y expt) (a b name) (na nb data))
    (trace (recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))))
      (send nb))
    (uniq-orig na)
    (uniq-gen x)
    (fn-of ("ltx-of" (a ltxa) (b ltxb))
      ("principal-of" (ltxa a) (ltxb b)))
    (neq ((exp (gen) y) (gen)))
    (absent (x (exp (gen) ltxa)) (x (exp (gen) ltxb))))
  (defrole resp
    (vars (ltxa ltxb y rndx) (x expt) (a b name) (na nb data))
    (trace (recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x))))))
      (recv nb))
    (uniq-orig nb)
    (uniq-gen y)
    (fn-of ("ltx-of" (a ltxa) (b ltxb))
      ("principal-of" (ltxa a) (ltxb b)))
    (neq ((exp (gen) x) (gen)))
    (absent (y (exp (gen) ltxa)) (y (exp (gen) ltxb))
      (y (exp (gen) x))))
  (defrole ltx-gen
    (vars (self name) (l rndx))
    (trace (send (cat self (exp (gen) l))) (recv "end-of-protocol")
      (send l))
    (uniq-gen l)
    (fn-of ("ltx-of" (self l)) ("principal-of" (l self)))))

(defskeleton dhcr-um
  (vars (na nb data) (a b self self-0 name) (ltxa ltxb x rndx) (y expt))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y y))
  (deflistener (exp (gen) (mul x y)))
  (defstrand ltx-gen 3 (self self) (l ltxa))
  (defstrand ltx-gen 3 (self self-0) (l ltxb))
  (precedes ((0 3) (2 1)) ((0 3) (3 1)))
  (absent (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (self-0 ltxb) (self ltxa) (a ltxa) (b ltxb))
    ("principal-of" (ltxb self-0) (ltxa self) (ltxa a) (ltxb b)))
  (neq (a b) ((exp (gen) y) (gen)))
  (uniq-gen ltxa ltxb x)
  (uniq-orig na)
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (exp (gen) (mul x y))) (send (exp (gen) (mul x y))))
    ((send (cat self (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat self-0 (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb)))
  (label 128)
  (unrealized (0 0) (0 2) (1 0))
  (preskeleton)
  (origs (na (0 1)))
  (comment "Not a skeleton"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa ltxb x rndx) (y expt))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y y))
  (deflistener (exp (gen) (mul x y)))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (precedes ((0 1) (1 0)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((3 0) (0 0)))
  (absent (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (b ltxb) (a ltxa))
    ("principal-of" (ltxb b) (ltxa a)))
  (neq (a b) ((exp (gen) y) (gen)))
  (uniq-gen ltxa ltxb x)
  (uniq-orig na)
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (exp (gen) (mul x y))) (send (exp (gen) (mul x y))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb)))
  (label 129)
  (parent 128)
  (unrealized (0 2))
  (origs (na (0 1)))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa ltxb x y rndx) (x-0 expt))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul (rec x) y x-0)))
  (deflistener (exp (gen) (mul y x-0)))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x x-0))
  (precedes ((0 1) (4 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (4 0)) ((3 0) (0 0)) ((3 0) (4 0)) ((4 2) (0 2))
    ((4 2) (1 0)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) ltxb)) (y (exp (gen) x-0))
    (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a ltxa) (b ltxb))
    ("principal-of" (ltxa a) (ltxb b)))
  (neq ((exp (gen) x-0) (gen)) (a b)
    ((exp (gen) (mul (rec x) y x-0)) (gen)))
  (uniq-gen ltxa ltxb x y)
  (uniq-orig na nb)
  (operation encryption-test (added-strand resp 3)
    (enc na nb a b
      (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x-0)))) (0 2))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y x-0))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul y x-0)))))) (send nb))
    ((recv (exp (gen) (mul y x-0))) (send (exp (gen) (mul y x-0))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) x-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul y x-0))))))))
  (label 130)
  (parent 129)
  (unrealized (0 2))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa ltxb x rndx) (y expt))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y y))
  (deflistener (exp (gen) (mul x y)))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))
  (precedes ((0 1) (1 0)) ((0 1) (4 0)) ((0 3) (2 1)) ((0 3) (3 1))
    ((2 0) (0 0)) ((3 0) (0 0)) ((4 1) (0 2)))
  (absent (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (b ltxb) (a ltxa))
    ("principal-of" (ltxb b) (ltxa a)))
  (neq (a b) ((exp (gen) y) (gen)))
  (uniq-gen ltxa ltxb x)
  (uniq-orig na)
  (operation encryption-test
    (added-listener
      (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))
    (enc na nb a b
      (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y)))) (0 2))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (exp (gen) (mul x y))) (send (exp (gen) (mul x y))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))))
  (label 131)
  (parent 129)
  (unrealized (4 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa ltxb x y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y y))
  (deflistener (exp (gen) (mul x y)))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x x))
  (precedes ((0 1) (4 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (4 0)) ((3 0) (0 0)) ((3 0) (4 0)) ((4 2) (0 2))
    ((4 2) (1 0)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) ltxb)) (y (exp (gen) x))
    (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a ltxa) (b ltxb))
    ("principal-of" (ltxa a) (ltxb b)))
  (neq ((exp (gen) x) (gen)) (a b) ((exp (gen) y) (gen)))
  (uniq-gen ltxa ltxb x y)
  (uniq-orig na nb)
  (operation nonce-test (displaced 5 4 resp 3) (exp (gen) y-0) (0 2))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (exp (gen) (mul x y))) (send (exp (gen) (mul x y))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x y))))))))
  (label 132)
  (parent 130)
  (unrealized (1 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa ltxb x y rndx) (x-0 w expt))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul (rec x) y x-0)))
  (deflistener (exp (gen) (mul y x-0)))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x x-0))
  (deflistener (cat (exp (gen) (mul (rec x) y x-0 (rec w))) w))
  (precedes ((0 1) (4 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (4 0)) ((3 0) (0 0)) ((3 0) (4 0)) ((4 2) (1 0))
    ((4 2) (5 0)) ((5 1) (0 2)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) ltxb)) (y (exp (gen) x-0))
    (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a ltxa) (b ltxb))
    ("principal-of" (ltxa a) (ltxb b)))
  (neq ((exp (gen) x-0) (gen)) (a b)
    ((exp (gen) (mul (rec x) y x-0)) (gen)))
  (uniq-gen ltxa ltxb x y)
  (uniq-orig na nb)
  (precur (5 0))
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec x) y x-0 (rec w))) w))
    (exp (gen) (mul (rec x) y x-0)) (0 2))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y x-0))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul y x-0)))))) (send nb))
    ((recv (exp (gen) (mul y x-0))) (send (exp (gen) (mul y x-0))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) x-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul y x-0)))))))
    ((recv (cat (exp (gen) (mul (rec x) y x-0 (rec w))) w))
      (send (cat (exp (gen) (mul (rec x) y x-0 (rec w))) w))))
  (label 133)
  (parent 130)
  (unrealized (5 0))
  (comment "8 in cohort - 8 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa ltxb x rndx) (y expt))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y y))
  (deflistener (exp (gen) (mul x y)))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))
  (precedes ((0 1) (1 0)) ((0 1) (5 0)) ((0 3) (2 1)) ((0 3) (3 1))
    ((2 0) (0 0)) ((3 0) (0 0)) ((4 1) (0 2)) ((5 1) (4 0)))
  (absent (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (b ltxb) (a ltxa))
    ("principal-of" (ltxb b) (ltxa a)))
  (neq (a b) ((exp (gen) y) (gen)))
  (uniq-gen ltxa ltxb x)
  (uniq-orig na)
  (operation encryption-test
    (added-listener
      (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))
    (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))) (4 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (exp (gen) (mul x y))) (send (exp (gen) (mul x y))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))))
  (label 134)
  (parent 131)
  (unrealized (5 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa ltxb x y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y y))
  (deflistener (exp (gen) (mul x y)))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x x))
  (deflistener (cat (exp (gen) x) y))
  (precedes ((0 1) (4 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (4 0)) ((3 0) (0 0)) ((3 0) (4 0)) ((4 2) (0 2))
    ((4 2) (5 0)) ((5 1) (1 0)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) ltxb)) (y (exp (gen) x))
    (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a ltxa) (b ltxb))
    ("principal-of" (ltxa a) (ltxb b)))
  (neq ((exp (gen) x) (gen)) (a b) ((exp (gen) y) (gen)))
  (uniq-gen ltxa ltxb x y)
  (uniq-orig na nb)
  (operation nonce-test (added-listener (cat (exp (gen) x) y))
    (exp (gen) (mul x y)) (1 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (exp (gen) (mul x y))) (send (exp (gen) (mul x y))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) x) y)) (send (cat (exp (gen) x) y))))
  (label 135)
  (parent 132)
  (unrealized (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa ltxb x y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y y))
  (deflistener (exp (gen) (mul x y)))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x x))
  (deflistener (cat (exp (gen) y) x))
  (precedes ((0 1) (4 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (4 0)) ((3 0) (0 0)) ((3 0) (4 0)) ((4 2) (0 2))
    ((4 2) (5 0)) ((5 1) (1 0)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) ltxb)) (y (exp (gen) x))
    (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a ltxa) (b ltxb))
    ("principal-of" (ltxa a) (ltxb b)))
  (neq ((exp (gen) x) (gen)) (a b) ((exp (gen) y) (gen)))
  (uniq-gen ltxa ltxb x y)
  (uniq-orig na nb)
  (operation nonce-test (added-listener (cat (exp (gen) y) x))
    (exp (gen) (mul x y)) (1 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (exp (gen) (mul x y))) (send (exp (gen) (mul x y))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) y) x)) (send (cat (exp (gen) y) x))))
  (label 136)
  (parent 132)
  (unrealized (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa ltxb x rndx) (w expt) (y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul w y)))
  (deflistener (exp (gen) (mul x w y)))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x (mul x w)))
  (deflistener (cat (gen) (mul w y)))
  (precedes ((0 1) (4 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (4 0)) ((3 0) (0 0)) ((3 0) (4 0)) ((4 2) (1 0))
    ((4 2) (5 0)) ((5 1) (0 2)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) ltxb))
    (y (exp (gen) (mul x w))) (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a ltxa) (b ltxb))
    ("principal-of" (ltxa a) (ltxb b)))
  (neq ((exp (gen) (mul x w)) (gen)) (a b)
    ((exp (gen) (mul w y)) (gen)))
  (uniq-gen ltxa ltxb x y)
  (uniq-orig na nb)
  (precur (5 0))
  (operation nonce-test
    (contracted (x-0 x) (y-0 y) (x-1 (mul x w)) (w-0 (mul w y)) (y-1 y)
      (w (mul w y))) (gen) (5 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x w y)))))) (send nb))
    ((recv (exp (gen) (mul x w y))) (send (exp (gen) (mul x w y))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul x w))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x w y)))))))
    ((recv (cat (gen) (mul w y))) (send (cat (gen) (mul w y)))))
  (label 137)
  (parent 133)
  (unrealized (1 0) (5 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (w expt) (ltxa ltxb x y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul w x y)))
  (deflistener (exp (gen) (mul w x x y)))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x (mul w x x)))
  (deflistener (cat (exp (gen) x) (mul w y)))
  (precedes ((0 1) (4 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (4 0)) ((3 0) (0 0)) ((3 0) (4 0)) ((4 2) (1 0))
    ((4 2) (5 0)) ((5 1) (0 2)))
  (absent (x (exp (gen) ltxa)) (x (exp (gen) ltxb)) (y (exp (gen) ltxa))
    (y (exp (gen) ltxb)) (y (exp (gen) (mul w x x))))
  (fn-of ("ltx-of" (a ltxa) (b ltxb))
    ("principal-of" (ltxa a) (ltxb b)))
  (neq ((exp (gen) (mul w x x)) (gen)) (a b)
    ((exp (gen) (mul w x y)) (gen)))
  (precur (5 0))
  (uniq-gen ltxa ltxb x y)
  (uniq-orig na nb)
  (operation nonce-test (displaced 6 0 init 2) (exp (gen) x-0) (5 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w x y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul w x x y)))))) (send nb))
    ((recv (exp (gen) (mul w x x y))) (send (exp (gen) (mul w x x y))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul w x x))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul w x x y)))))))
    ((recv (cat (exp (gen) x) (mul w y)))
      (send (cat (exp (gen) x) (mul w y)))))
  (label 138)
  (parent 133)
  (unrealized (0 2) (1 0) (4 1) (5 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb na-0 data) (a b a-0 b-0 name)
    (ltxa ltxb ltxa-0 ltxb-0 x rndx) (w expt) (x-0 y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul w x-0 y)))
  (deflistener (exp (gen) (mul x w x-0 y)))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x (mul x w x-0)))
  (deflistener (cat (exp (gen) x-0) (mul w y)))
  (defstrand init 2 (na na-0) (a a-0) (b b-0) (ltxa ltxa-0)
    (ltxb ltxb-0) (x x-0))
  (precedes ((0 1) (4 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (4 0)) ((3 0) (0 0)) ((3 0) (4 0)) ((4 2) (1 0))
    ((4 2) (5 0)) ((5 1) (0 2)) ((6 1) (4 1)))
  (absent (x-0 (exp (gen) ltxa-0)) (x-0 (exp (gen) ltxb-0))
    (y (exp (gen) ltxa)) (y (exp (gen) ltxb))
    (y (exp (gen) (mul x w x-0))) (x (exp (gen) ltxa))
    (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a-0 ltxa-0) (b-0 ltxb-0) (a ltxa) (b ltxb))
    ("principal-of" (ltxa-0 a-0) (ltxb-0 b-0) (ltxa a) (ltxb b)))
  (neq ((exp (gen) (mul x w x-0)) (gen)) (a b)
    ((exp (gen) (mul w x-0 y)) (gen)))
  (precur (5 0))
  (uniq-gen ltxa ltxb x x-0 y)
  (uniq-orig na nb na-0)
  (operation nonce-test (added-strand init 2) (exp (gen) x-0) (5 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w x-0 y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x w x-0 y)))))) (send nb))
    ((recv (exp (gen) (mul x w x-0 y)))
      (send (exp (gen) (mul x w x-0 y))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul x w x-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x w x-0 y)))))))
    ((recv (cat (exp (gen) x-0) (mul w y)))
      (send (cat (exp (gen) x-0) (mul w y))))
    ((recv (cat (exp (gen) ltxa-0) (exp (gen) ltxb-0)))
      (send (cat na-0 a-0 b-0 (exp (gen) x-0)))))
  (label 139)
  (parent 133)
  (unrealized (0 2) (1 0) (4 1) (5 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa ltxb x rndx) (w expt) (y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul w y)))
  (deflistener (exp (gen) (mul x w y)))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x (mul x w)))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 1) (4 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (4 0)) ((3 0) (0 0)) ((3 0) (4 0)) ((4 2) (1 0))
    ((4 2) (5 0)) ((5 1) (0 2)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) ltxb))
    (y (exp (gen) (mul x w))) (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a ltxa) (b ltxb))
    ("principal-of" (ltxa a) (ltxb b)))
  (neq ((exp (gen) (mul x w)) (gen)) (a b)
    ((exp (gen) (mul w y)) (gen)))
  (precur (5 0))
  (uniq-gen ltxa ltxb x y)
  (uniq-orig na nb)
  (operation nonce-test (displaced 6 4 resp 3) (exp (gen) y-0) (5 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x w y)))))) (send nb))
    ((recv (exp (gen) (mul x w y))) (send (exp (gen) (mul x w y))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul x w))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x w y)))))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 140)
  (parent 133)
  (unrealized (1 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb na-0 nb-0 data) (a b a-0 b-0 name)
    (ltxa ltxb ltxa-0 ltxb-0 rndx) (x expt) (x-0 rndx) (w expt)
    (y y-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x-0) (y (mul w y y-0)))
  (deflistener (exp (gen) (mul x-0 w y y-0)))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y-0) (x (mul x-0 w y)))
  (deflistener (cat (exp (gen) y) (mul w y-0)))
  (defstrand resp 3 (na na-0) (nb nb-0) (a a-0) (b b-0) (ltxa ltxa-0)
    (ltxb ltxb-0) (y y) (x x))
  (precedes ((0 1) (4 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (4 0)) ((3 0) (0 0)) ((3 0) (4 0)) ((4 2) (1 0))
    ((4 2) (5 0)) ((5 1) (0 2)) ((6 2) (4 1)))
  (absent (y (exp (gen) ltxa-0)) (y (exp (gen) ltxb-0))
    (y (exp (gen) x)) (y-0 (exp (gen) ltxa)) (y-0 (exp (gen) ltxb))
    (y-0 (exp (gen) (mul x-0 w y))) (x-0 (exp (gen) ltxa))
    (x-0 (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a-0 ltxa-0) (b-0 ltxb-0) (a ltxa) (b ltxb))
    ("principal-of" (ltxa-0 a-0) (ltxb-0 b-0) (ltxa a) (ltxb b)))
  (neq ((exp (gen) x) (gen)) ((exp (gen) (mul x-0 w y)) (gen)) (a b)
    ((exp (gen) (mul w y y-0)) (gen)))
  (precur (5 0))
  (uniq-gen ltxa ltxb x-0 y y-0)
  (uniq-orig na nb nb-0)
  (operation nonce-test (added-strand resp 3) (exp (gen) y) (5 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x-0)))
      (recv
        (cat (exp (gen) (mul w y y-0))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x-0 w y y-0)))))) (send nb))
    ((recv (exp (gen) (mul x-0 w y y-0)))
      (send (exp (gen) (mul x-0 w y y-0))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul x-0 w y))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x-0 w y y-0)))))))
    ((recv (cat (exp (gen) y) (mul w y-0)))
      (send (cat (exp (gen) y) (mul w y-0))))
    ((recv (cat (exp (gen) ltxa-0) (exp (gen) ltxb-0)))
      (recv (cat na-0 a-0 b-0 (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul ltxa-0 ltxb-0))
              (exp (gen) (mul x y))))))))
  (label 141)
  (parent 133)
  (unrealized (0 2) (1 0) (4 1) (5 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxb x rndx) (w expt) (l y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa l) (ltxb ltxb)
    (x x) (y (mul w l y)))
  (deflistener (exp (gen) (mul x w l y)))
  (defstrand ltx-gen 3 (self a) (l l))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa l) (ltxb ltxb)
    (y y) (x (mul x w l)))
  (deflistener (cat (exp (gen) l) (mul w y)))
  (precedes ((0 1) (4 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (4 0)) ((3 0) (0 0)) ((3 0) (4 0)) ((4 2) (1 0))
    ((4 2) (5 0)) ((5 1) (0 2)))
  (absent (y (exp (gen) l)) (y (exp (gen) ltxb))
    (y (exp (gen) (mul x w l))) (x (exp (gen) l)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a l) (b ltxb)) ("principal-of" (l a) (ltxb b)))
  (neq ((exp (gen) (mul x w l)) (gen)) (a b)
    ((exp (gen) (mul w l y)) (gen)))
  (precur (5 0))
  (uniq-gen ltxb x l y)
  (uniq-orig na nb)
  (operation nonce-test (displaced 6 2 ltx-gen 1) (exp (gen) l-0) (5 0))
  (traces
    ((recv (cat (exp (gen) l) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w l y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxb l)) (exp (gen) (mul x w l y))))))
      (send nb))
    ((recv (exp (gen) (mul x w l y))) (send (exp (gen) (mul x w l y))))
    ((send (cat a (exp (gen) l))) (recv "end-of-protocol") (send l))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) l) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul x w l))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxb l))
              (exp (gen) (mul x w l y)))))))
    ((recv (cat (exp (gen) l) (mul w y)))
      (send (cat (exp (gen) l) (mul w y)))))
  (label 142)
  (parent 133)
  (unrealized (0 2) (1 0) (4 1) (5 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa x rndx) (w expt) (l y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb l)
    (x x) (y (mul w l y)))
  (deflistener (exp (gen) (mul x w l y)))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l l))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb l)
    (y y) (x (mul x w l)))
  (deflistener (cat (exp (gen) l) (mul w y)))
  (precedes ((0 1) (4 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (4 0)) ((3 0) (0 0)) ((3 0) (4 0)) ((4 2) (1 0))
    ((4 2) (5 0)) ((5 1) (0 2)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) l))
    (y (exp (gen) (mul x w l))) (x (exp (gen) ltxa)) (x (exp (gen) l)))
  (fn-of ("ltx-of" (b l) (a ltxa)) ("principal-of" (l b) (ltxa a)))
  (neq ((exp (gen) (mul x w l)) (gen)) (a b)
    ((exp (gen) (mul w l y)) (gen)))
  (precur (5 0))
  (uniq-gen ltxa x l y)
  (uniq-orig na nb)
  (operation nonce-test (displaced 6 3 ltx-gen 1) (exp (gen) l-0) (5 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) l)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w l y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa l)) (exp (gen) (mul x w l y))))))
      (send nb))
    ((recv (exp (gen) (mul x w l y))) (send (exp (gen) (mul x w l y))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) l))) (recv "end-of-protocol") (send l))
    ((recv (cat (exp (gen) ltxa) (exp (gen) l)))
      (recv (cat na a b (exp (gen) (mul x w l))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa l))
              (exp (gen) (mul x w l y)))))))
    ((recv (cat (exp (gen) l) (mul w y)))
      (send (cat (exp (gen) l) (mul w y)))))
  (label 143)
  (parent 133)
  (unrealized (0 2) (1 0) (4 1) (5 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb data) (a b self name) (ltxa ltxb x rndx) (w expt)
    (l y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul w l y)))
  (deflistener (exp (gen) (mul x w l y)))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x (mul x w l)))
  (deflistener (cat (exp (gen) l) (mul w y)))
  (defstrand ltx-gen 1 (self self) (l l))
  (precedes ((0 1) (4 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (4 0)) ((3 0) (0 0)) ((3 0) (4 0)) ((4 2) (1 0))
    ((4 2) (5 0)) ((5 1) (0 2)) ((6 0) (4 1)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) ltxb))
    (y (exp (gen) (mul x w l))) (x (exp (gen) ltxa))
    (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (self l) (a ltxa) (b ltxb))
    ("principal-of" (l self) (ltxa a) (ltxb b)))
  (neq ((exp (gen) (mul x w l)) (gen)) (a b)
    ((exp (gen) (mul w l y)) (gen)))
  (precur (5 0))
  (uniq-gen ltxa ltxb x l y)
  (uniq-orig na nb)
  (operation nonce-test (added-strand ltx-gen 1) (exp (gen) l) (5 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w l y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x w l y)))))) (send nb))
    ((recv (exp (gen) (mul x w l y))) (send (exp (gen) (mul x w l y))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul x w l))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x w l y)))))))
    ((recv (cat (exp (gen) l) (mul w y)))
      (send (cat (exp (gen) l) (mul w y))))
    ((send (cat self (exp (gen) l)))))
  (label 144)
  (parent 133)
  (unrealized (0 2) (1 0) (4 1) (5 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa ltxb x rndx) (y expt))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y y))
  (deflistener (exp (gen) (mul x y)))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) ltxa) ltxb))
  (precedes ((0 1) (1 0)) ((0 1) (5 0)) ((0 3) (2 1)) ((0 3) (3 1))
    ((2 0) (0 0)) ((2 0) (6 0)) ((3 0) (0 0)) ((3 0) (6 0))
    ((4 1) (0 2)) ((5 1) (4 0)) ((6 1) (5 0)))
  (absent (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (b ltxb) (a ltxa))
    ("principal-of" (ltxb b) (ltxa a)))
  (neq (a b) ((exp (gen) y) (gen)))
  (uniq-gen ltxa ltxb x)
  (uniq-orig na)
  (operation nonce-test (added-listener (cat (exp (gen) ltxa) ltxb))
    (exp (gen) (mul ltxa ltxb)) (5 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (exp (gen) (mul x y))) (send (exp (gen) (mul x y))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) ltxa) ltxb))
      (send (cat (exp (gen) ltxa) ltxb))))
  (label 145)
  (parent 134)
  (unrealized (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa ltxb x rndx) (y expt))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y y))
  (deflistener (exp (gen) (mul x y)))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (deflistener (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) ltxb) ltxa))
  (precedes ((0 1) (1 0)) ((0 1) (5 0)) ((0 3) (2 1)) ((0 3) (3 1))
    ((2 0) (0 0)) ((2 0) (6 0)) ((3 0) (0 0)) ((3 0) (6 0))
    ((4 1) (0 2)) ((5 1) (4 0)) ((6 1) (5 0)))
  (absent (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (b ltxb) (a ltxa))
    ("principal-of" (ltxb b) (ltxa a)))
  (neq (a b) ((exp (gen) y) (gen)))
  (uniq-gen ltxa ltxb x)
  (uniq-orig na)
  (operation nonce-test (added-listener (cat (exp (gen) ltxb) ltxa))
    (exp (gen) (mul ltxa ltxb)) (5 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (exp (gen) (mul x y))) (send (exp (gen) (mul x y))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) ltxb) ltxa))
      (send (cat (exp (gen) ltxb) ltxa))))
  (label 146)
  (parent 134)
  (unrealized (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa ltxb x rndx) (w expt) (y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul w y)))
  (deflistener (exp (gen) (mul x w y)))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x (mul x w)))
  (deflistener (cat (gen) (mul w y)))
  (deflistener y)
  (precedes ((0 1) (4 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (4 0)) ((3 0) (0 0)) ((3 0) (4 0)) ((4 2) (1 0))
    ((4 2) (6 0)) ((5 1) (0 2)) ((6 1) (5 0)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) ltxb))
    (y (exp (gen) (mul x w))) (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a ltxa) (b ltxb))
    ("principal-of" (ltxa a) (ltxb b)))
  (neq ((exp (gen) (mul x w)) (gen)) (a b)
    ((exp (gen) (mul w y)) (gen)))
  (uniq-gen ltxa ltxb x y)
  (uniq-orig na nb)
  (precur (5 0))
  (operation nonce-test (added-listener y) (mul w y) (5 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x w y)))))) (send nb))
    ((recv (exp (gen) (mul x w y))) (send (exp (gen) (mul x w y))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul x w))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x w y)))))))
    ((recv (cat (gen) (mul w y))) (send (cat (gen) (mul w y))))
    ((recv y) (send y)))
  (label 147)
  (parent 137)
  (unrealized (1 0) (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (w expt) (ltxa ltxb x y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul w x y)))
  (deflistener (exp (gen) (mul w x x y)))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x (mul w x x)))
  (deflistener (cat (exp (gen) x) (mul w y)))
  (deflistener y)
  (precedes ((0 1) (4 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (4 0)) ((3 0) (0 0)) ((3 0) (4 0)) ((4 2) (1 0))
    ((4 2) (6 0)) ((5 1) (0 2)) ((6 1) (5 0)))
  (absent (x (exp (gen) ltxa)) (x (exp (gen) ltxb)) (y (exp (gen) ltxa))
    (y (exp (gen) ltxb)) (y (exp (gen) (mul w x x))))
  (fn-of ("ltx-of" (a ltxa) (b ltxb))
    ("principal-of" (ltxa a) (ltxb b)))
  (neq ((exp (gen) (mul w x x)) (gen)) (a b)
    ((exp (gen) (mul w x y)) (gen)))
  (precur (5 0))
  (uniq-gen ltxa ltxb x y)
  (uniq-orig na nb)
  (operation nonce-test (added-listener y) (mul w y) (5 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w x y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul w x x y)))))) (send nb))
    ((recv (exp (gen) (mul w x x y))) (send (exp (gen) (mul w x x y))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul w x x))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul w x x y)))))))
    ((recv (cat (exp (gen) x) (mul w y)))
      (send (cat (exp (gen) x) (mul w y)))) ((recv y) (send y)))
  (label 148)
  (parent 138)
  (unrealized (1 0) (4 1) (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (na nb na-0 data) (a b a-0 b-0 name)
    (ltxa ltxb ltxa-0 ltxb-0 x rndx) (w expt) (x-0 y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul w x-0 y)))
  (deflistener (exp (gen) (mul x w x-0 y)))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x (mul x w x-0)))
  (deflistener (cat (exp (gen) x-0) (mul w y)))
  (defstrand init 2 (na na-0) (a a-0) (b b-0) (ltxa ltxa-0)
    (ltxb ltxb-0) (x x-0))
  (deflistener y)
  (precedes ((0 1) (4 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (4 0)) ((3 0) (0 0)) ((3 0) (4 0)) ((4 2) (1 0))
    ((4 2) (7 0)) ((5 1) (0 2)) ((6 1) (4 1)) ((7 1) (5 0)))
  (absent (x-0 (exp (gen) ltxa-0)) (x-0 (exp (gen) ltxb-0))
    (y (exp (gen) ltxa)) (y (exp (gen) ltxb))
    (y (exp (gen) (mul x w x-0))) (x (exp (gen) ltxa))
    (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a-0 ltxa-0) (b-0 ltxb-0) (a ltxa) (b ltxb))
    ("principal-of" (ltxa-0 a-0) (ltxb-0 b-0) (ltxa a) (ltxb b)))
  (neq ((exp (gen) (mul x w x-0)) (gen)) (a b)
    ((exp (gen) (mul w x-0 y)) (gen)))
  (precur (5 0))
  (uniq-gen ltxa ltxb x x-0 y)
  (uniq-orig na nb na-0)
  (operation nonce-test (added-listener y) (mul w y) (5 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w x-0 y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x w x-0 y)))))) (send nb))
    ((recv (exp (gen) (mul x w x-0 y)))
      (send (exp (gen) (mul x w x-0 y))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul x w x-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x w x-0 y)))))))
    ((recv (cat (exp (gen) x-0) (mul w y)))
      (send (cat (exp (gen) x-0) (mul w y))))
    ((recv (cat (exp (gen) ltxa-0) (exp (gen) ltxb-0)))
      (send (cat na-0 a-0 b-0 (exp (gen) x-0)))) ((recv y) (send y)))
  (label 149)
  (parent 139)
  (unrealized (1 0) (4 1) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa ltxb x rndx) (w expt) (y rndx)
    (w-0 expt))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul w y)))
  (deflistener (exp (gen) (mul x w y)))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x (mul x w)))
  (deflistener (cat (exp (gen) y) w))
  (deflistener (cat (exp (gen) (mul x w y (rec w-0))) w-0))
  (precedes ((0 1) (4 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (4 0)) ((3 0) (0 0)) ((3 0) (4 0)) ((4 2) (5 0))
    ((4 2) (6 0)) ((5 1) (0 2)) ((6 1) (1 0)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) ltxb))
    (y (exp (gen) (mul x w))) (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a ltxa) (b ltxb))
    ("principal-of" (ltxa a) (ltxb b)))
  (neq ((exp (gen) (mul x w)) (gen)) (a b)
    ((exp (gen) (mul w y)) (gen)))
  (precur (6 0) (5 0))
  (uniq-gen ltxa ltxb x y)
  (uniq-orig na nb)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul x w y (rec w-0))) w-0))
    (exp (gen) (mul x w y)) (1 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x w y)))))) (send nb))
    ((recv (exp (gen) (mul x w y))) (send (exp (gen) (mul x w y))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul x w))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x w y)))))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w)))
    ((recv (cat (exp (gen) (mul x w y (rec w-0))) w-0))
      (send (cat (exp (gen) (mul x w y (rec w-0))) w-0))))
  (label 150)
  (parent 140)
  (unrealized (6 0))
  (comment "8 in cohort - 8 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb na-0 nb-0 data) (a b a-0 b-0 name)
    (ltxa ltxb ltxa-0 ltxb-0 rndx) (x expt) (x-0 rndx) (w expt)
    (y y-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x-0) (y (mul w y y-0)))
  (deflistener (exp (gen) (mul x-0 w y y-0)))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y-0) (x (mul x-0 w y)))
  (deflistener (cat (exp (gen) y) (mul w y-0)))
  (defstrand resp 3 (na na-0) (nb nb-0) (a a-0) (b b-0) (ltxa ltxa-0)
    (ltxb ltxb-0) (y y) (x x))
  (deflistener y-0)
  (precedes ((0 1) (4 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (4 0)) ((3 0) (0 0)) ((3 0) (4 0)) ((4 2) (1 0))
    ((4 2) (7 0)) ((5 1) (0 2)) ((6 2) (4 1)) ((7 1) (5 0)))
  (absent (y (exp (gen) ltxa-0)) (y (exp (gen) ltxb-0))
    (y (exp (gen) x)) (y-0 (exp (gen) ltxa)) (y-0 (exp (gen) ltxb))
    (y-0 (exp (gen) (mul x-0 w y))) (x-0 (exp (gen) ltxa))
    (x-0 (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a-0 ltxa-0) (b-0 ltxb-0) (a ltxa) (b ltxb))
    ("principal-of" (ltxa-0 a-0) (ltxb-0 b-0) (ltxa a) (ltxb b)))
  (neq ((exp (gen) x) (gen)) ((exp (gen) (mul x-0 w y)) (gen)) (a b)
    ((exp (gen) (mul w y y-0)) (gen)))
  (precur (5 0))
  (uniq-gen ltxa ltxb x-0 y y-0)
  (uniq-orig na nb nb-0)
  (operation nonce-test (added-listener y-0) (mul w y-0) (5 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x-0)))
      (recv
        (cat (exp (gen) (mul w y y-0))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x-0 w y y-0)))))) (send nb))
    ((recv (exp (gen) (mul x-0 w y y-0)))
      (send (exp (gen) (mul x-0 w y y-0))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul x-0 w y))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x-0 w y y-0)))))))
    ((recv (cat (exp (gen) y) (mul w y-0)))
      (send (cat (exp (gen) y) (mul w y-0))))
    ((recv (cat (exp (gen) ltxa-0) (exp (gen) ltxb-0)))
      (recv (cat na-0 a-0 b-0 (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul ltxa-0 ltxb-0))
              (exp (gen) (mul x y))))))) ((recv y-0) (send y-0)))
  (label 151)
  (parent 141)
  (unrealized (1 0) (4 1) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxb x rndx) (w expt) (l y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa l) (ltxb ltxb)
    (x x) (y (mul w l y)))
  (deflistener (exp (gen) (mul x w l y)))
  (defstrand ltx-gen 3 (self a) (l l))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa l) (ltxb ltxb)
    (y y) (x (mul x w l)))
  (deflistener (cat (exp (gen) l) (mul w y)))
  (deflistener y)
  (precedes ((0 1) (4 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (4 0)) ((3 0) (0 0)) ((3 0) (4 0)) ((4 2) (1 0))
    ((4 2) (6 0)) ((5 1) (0 2)) ((6 1) (5 0)))
  (absent (y (exp (gen) l)) (y (exp (gen) ltxb))
    (y (exp (gen) (mul x w l))) (x (exp (gen) l)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a l) (b ltxb)) ("principal-of" (l a) (ltxb b)))
  (neq ((exp (gen) (mul x w l)) (gen)) (a b)
    ((exp (gen) (mul w l y)) (gen)))
  (precur (5 0))
  (uniq-gen ltxb x l y)
  (uniq-orig na nb)
  (operation nonce-test (added-listener y) (mul w y) (5 0))
  (traces
    ((recv (cat (exp (gen) l) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w l y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxb l)) (exp (gen) (mul x w l y))))))
      (send nb))
    ((recv (exp (gen) (mul x w l y))) (send (exp (gen) (mul x w l y))))
    ((send (cat a (exp (gen) l))) (recv "end-of-protocol") (send l))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) l) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul x w l))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxb l))
              (exp (gen) (mul x w l y)))))))
    ((recv (cat (exp (gen) l) (mul w y)))
      (send (cat (exp (gen) l) (mul w y)))) ((recv y) (send y)))
  (label 152)
  (parent 142)
  (unrealized (1 0) (4 1) (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa x rndx) (w expt) (l y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb l)
    (x x) (y (mul w l y)))
  (deflistener (exp (gen) (mul x w l y)))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l l))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb l)
    (y y) (x (mul x w l)))
  (deflistener (cat (exp (gen) l) (mul w y)))
  (deflistener y)
  (precedes ((0 1) (4 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (4 0)) ((3 0) (0 0)) ((3 0) (4 0)) ((4 2) (1 0))
    ((4 2) (6 0)) ((5 1) (0 2)) ((6 1) (5 0)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) l))
    (y (exp (gen) (mul x w l))) (x (exp (gen) ltxa)) (x (exp (gen) l)))
  (fn-of ("ltx-of" (b l) (a ltxa)) ("principal-of" (l b) (ltxa a)))
  (neq ((exp (gen) (mul x w l)) (gen)) (a b)
    ((exp (gen) (mul w l y)) (gen)))
  (precur (5 0))
  (uniq-gen ltxa x l y)
  (uniq-orig na nb)
  (operation nonce-test (added-listener y) (mul w y) (5 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) l)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w l y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa l)) (exp (gen) (mul x w l y))))))
      (send nb))
    ((recv (exp (gen) (mul x w l y))) (send (exp (gen) (mul x w l y))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) l))) (recv "end-of-protocol") (send l))
    ((recv (cat (exp (gen) ltxa) (exp (gen) l)))
      (recv (cat na a b (exp (gen) (mul x w l))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa l))
              (exp (gen) (mul x w l y)))))))
    ((recv (cat (exp (gen) l) (mul w y)))
      (send (cat (exp (gen) l) (mul w y)))) ((recv y) (send y)))
  (label 153)
  (parent 143)
  (unrealized (1 0) (4 1) (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (na nb data) (a b self name) (ltxa ltxb x rndx) (w expt)
    (l y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul w l y)))
  (deflistener (exp (gen) (mul x w l y)))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x (mul x w l)))
  (deflistener (cat (exp (gen) l) (mul w y)))
  (defstrand ltx-gen 1 (self self) (l l))
  (deflistener y)
  (precedes ((0 1) (4 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (4 0)) ((3 0) (0 0)) ((3 0) (4 0)) ((4 2) (1 0))
    ((4 2) (7 0)) ((5 1) (0 2)) ((6 0) (4 1)) ((7 1) (5 0)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) ltxb))
    (y (exp (gen) (mul x w l))) (x (exp (gen) ltxa))
    (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (self l) (a ltxa) (b ltxb))
    ("principal-of" (l self) (ltxa a) (ltxb b)))
  (neq ((exp (gen) (mul x w l)) (gen)) (a b)
    ((exp (gen) (mul w l y)) (gen)))
  (precur (5 0))
  (uniq-gen ltxa ltxb x l y)
  (uniq-orig na nb)
  (operation nonce-test (added-listener y) (mul w y) (5 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w l y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x w l y)))))) (send nb))
    ((recv (exp (gen) (mul x w l y))) (send (exp (gen) (mul x w l y))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul x w l))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul x w l y)))))))
    ((recv (cat (exp (gen) l) (mul w y)))
      (send (cat (exp (gen) l) (mul w y))))
    ((send (cat self (exp (gen) l)))) ((recv y) (send y)))
  (label 154)
  (parent 144)
  (unrealized (1 0) (4 1) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa ltxb x rndx) (w expt) (y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul (rec x) w y)))
  (deflistener (exp (gen) (mul w y)))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x w))
  (deflistener (cat (exp (gen) y) (mul (rec x) w)))
  (deflistener (cat (gen) (mul w y)))
  (precedes ((0 1) (4 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (4 0)) ((3 0) (0 0)) ((3 0) (4 0)) ((4 2) (5 0))
    ((4 2) (6 0)) ((5 1) (0 2)) ((6 1) (1 0)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) ltxb)) (y (exp (gen) w))
    (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a ltxa) (b ltxb))
    ("principal-of" (ltxa a) (ltxb b)))
  (neq ((exp (gen) w) (gen)) (a b)
    ((exp (gen) (mul (rec x) w y)) (gen)))
  (precur (6 0) (5 0))
  (uniq-gen ltxa ltxb x y)
  (uniq-orig na nb)
  (operation nonce-test
    (contracted (x-0 x) (w-0 (mul (rec x) w)) (y-0 y) (w-1 (mul w y))
      (y-1 y) (w (mul w y))) (gen) (6 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) w y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y))))))
      (send nb))
    ((recv (exp (gen) (mul w y))) (send (exp (gen) (mul w y))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) w)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y)))))))
    ((recv (cat (exp (gen) y) (mul (rec x) w)))
      (send (cat (exp (gen) y) (mul (rec x) w))))
    ((recv (cat (gen) (mul w y))) (send (cat (gen) (mul w y)))))
  (label 155)
  (parent 150)
  (unrealized (0 2) (5 0) (6 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (w expt) (ltxa ltxb x y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul w y)))
  (deflistener (exp (gen) (mul w x y)))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x (mul w x)))
  (deflistener (cat (exp (gen) y) w))
  (deflistener (cat (exp (gen) x) (mul w y)))
  (precedes ((0 1) (4 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (4 0)) ((3 0) (0 0)) ((3 0) (4 0)) ((4 2) (5 0))
    ((4 2) (6 0)) ((5 1) (0 2)) ((6 1) (1 0)))
  (absent (x (exp (gen) ltxa)) (x (exp (gen) ltxb)) (y (exp (gen) ltxa))
    (y (exp (gen) ltxb)) (y (exp (gen) (mul w x))))
  (fn-of ("ltx-of" (a ltxa) (b ltxb))
    ("principal-of" (ltxa a) (ltxb b)))
  (neq ((exp (gen) (mul w x)) (gen)) (a b)
    ((exp (gen) (mul w y)) (gen)))
  (precur (6 0) (5 0))
  (uniq-gen ltxa ltxb x y)
  (uniq-orig na nb)
  (operation nonce-test (displaced 7 0 init 2) (exp (gen) x-0) (6 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul w x y)))))) (send nb))
    ((recv (exp (gen) (mul w x y))) (send (exp (gen) (mul w x y))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul w x))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul w x y)))))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w)))
    ((recv (cat (exp (gen) x) (mul w y)))
      (send (cat (exp (gen) x) (mul w y)))))
  (label 156)
  (parent 150)
  (unrealized (1 0) (6 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb na-0 data) (a b a-0 b-0 name)
    (ltxa ltxb ltxa-0 ltxb-0 x rndx) (w expt) (x-0 y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul (rec x) w x-0 y)))
  (deflistener (exp (gen) (mul w x-0 y)))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x (mul w x-0)))
  (deflistener (cat (exp (gen) y) (mul (rec x) w x-0)))
  (deflistener (cat (exp (gen) x-0) (mul w y)))
  (defstrand init 2 (na na-0) (a a-0) (b b-0) (ltxa ltxa-0)
    (ltxb ltxb-0) (x x-0))
  (precedes ((0 1) (4 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (4 0)) ((3 0) (0 0)) ((3 0) (4 0)) ((4 2) (5 0))
    ((4 2) (6 0)) ((5 1) (0 2)) ((6 1) (1 0)) ((7 1) (4 1)))
  (absent (x-0 (exp (gen) ltxa-0)) (x-0 (exp (gen) ltxb-0))
    (y (exp (gen) ltxa)) (y (exp (gen) ltxb))
    (y (exp (gen) (mul w x-0))) (x (exp (gen) ltxa))
    (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a-0 ltxa-0) (b-0 ltxb-0) (a ltxa) (b ltxb))
    ("principal-of" (ltxa-0 a-0) (ltxb-0 b-0) (ltxa a) (ltxb b)))
  (neq ((exp (gen) (mul w x-0)) (gen)) (a b)
    ((exp (gen) (mul (rec x) w x-0 y)) (gen)))
  (precur (6 0) (5 0))
  (uniq-gen ltxa ltxb x x-0 y)
  (uniq-orig na nb na-0)
  (operation nonce-test (added-strand init 2) (exp (gen) x-0) (6 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) w x-0 y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul w x-0 y)))))) (send nb))
    ((recv (exp (gen) (mul w x-0 y))) (send (exp (gen) (mul w x-0 y))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul w x-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul w x-0 y)))))))
    ((recv (cat (exp (gen) y) (mul (rec x) w x-0)))
      (send (cat (exp (gen) y) (mul (rec x) w x-0))))
    ((recv (cat (exp (gen) x-0) (mul w y)))
      (send (cat (exp (gen) x-0) (mul w y))))
    ((recv (cat (exp (gen) ltxa-0) (exp (gen) ltxb-0)))
      (send (cat na-0 a-0 b-0 (exp (gen) x-0)))))
  (label 157)
  (parent 150)
  (unrealized (0 2) (1 0) (5 0) (6 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (x ltxa ltxb rndx) (w expt) (y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul (rec x) w y)))
  (deflistener (exp (gen) (mul w y)))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x w))
  (deflistener (cat (exp (gen) y) (mul (rec x) w)))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 1) (4 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (4 0)) ((3 0) (0 0)) ((3 0) (4 0)) ((4 2) (5 0))
    ((4 2) (6 0)) ((5 1) (0 2)) ((6 1) (1 0)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) ltxb)) (y (exp (gen) w))
    (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a ltxa) (b ltxb))
    ("principal-of" (ltxa a) (ltxb b)))
  (neq ((exp (gen) w) (gen)) (a b)
    ((exp (gen) (mul (rec x) w y)) (gen)))
  (precur (6 0) (5 0))
  (uniq-gen x ltxa ltxb y)
  (uniq-orig na nb)
  (operation nonce-test (displaced 7 4 resp 3) (exp (gen) y-0) (6 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) w y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y))))))
      (send nb))
    ((recv (exp (gen) (mul w y))) (send (exp (gen) (mul w y))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) w)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y)))))))
    ((recv (cat (exp (gen) y) (mul (rec x) w)))
      (send (cat (exp (gen) y) (mul (rec x) w))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 158)
  (parent 150)
  (unrealized (0 2) (5 0))
  (comment "4 in cohort - 4 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb na-0 nb-0 data) (a b a-0 b-0 name)
    (ltxa ltxb ltxa-0 ltxb-0 rndx) (x expt) (x-0 rndx) (w expt)
    (y y-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x-0) (y (mul (rec x-0) w y y-0)))
  (deflistener (exp (gen) (mul w y y-0)))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y-0) (x (mul w y)))
  (deflistener (cat (exp (gen) y-0) (mul (rec x-0) w y)))
  (deflistener (cat (exp (gen) y) (mul w y-0)))
  (defstrand resp 3 (na na-0) (nb nb-0) (a a-0) (b b-0) (ltxa ltxa-0)
    (ltxb ltxb-0) (y y) (x x))
  (precedes ((0 1) (4 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (4 0)) ((3 0) (0 0)) ((3 0) (4 0)) ((4 2) (5 0))
    ((4 2) (6 0)) ((5 1) (0 2)) ((6 1) (1 0)) ((7 2) (4 1)))
  (absent (y (exp (gen) ltxa-0)) (y (exp (gen) ltxb-0))
    (y (exp (gen) x)) (y-0 (exp (gen) ltxa)) (y-0 (exp (gen) ltxb))
    (y-0 (exp (gen) (mul w y))) (x-0 (exp (gen) ltxa))
    (x-0 (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a-0 ltxa-0) (b-0 ltxb-0) (a ltxa) (b ltxb))
    ("principal-of" (ltxa-0 a-0) (ltxb-0 b-0) (ltxa a) (ltxb b)))
  (neq ((exp (gen) x) (gen)) ((exp (gen) (mul w y)) (gen)) (a b)
    ((exp (gen) (mul (rec x-0) w y y-0)) (gen)))
  (precur (6 0) (5 0))
  (uniq-gen ltxa ltxb x-0 y y-0)
  (uniq-orig na nb nb-0)
  (operation nonce-test (added-strand resp 3) (exp (gen) y) (6 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x-0)))
      (recv
        (cat (exp (gen) (mul (rec x-0) w y y-0))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul w y y-0)))))) (send nb))
    ((recv (exp (gen) (mul w y y-0))) (send (exp (gen) (mul w y y-0))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul w y))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul w y y-0)))))))
    ((recv (cat (exp (gen) y-0) (mul (rec x-0) w y)))
      (send (cat (exp (gen) y-0) (mul (rec x-0) w y))))
    ((recv (cat (exp (gen) y) (mul w y-0)))
      (send (cat (exp (gen) y) (mul w y-0))))
    ((recv (cat (exp (gen) ltxa-0) (exp (gen) ltxb-0)))
      (recv (cat na-0 a-0 b-0 (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul ltxa-0 ltxb-0))
              (exp (gen) (mul x y))))))))
  (label 159)
  (parent 150)
  (unrealized (0 2) (1 0) (5 0) (6 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxb x rndx) (w expt) (l y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa l) (ltxb ltxb)
    (x x) (y (mul (rec x) w l y)))
  (deflistener (exp (gen) (mul w l y)))
  (defstrand ltx-gen 3 (self a) (l l))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa l) (ltxb ltxb)
    (y y) (x (mul w l)))
  (deflistener (cat (exp (gen) y) (mul (rec x) w l)))
  (deflistener (cat (exp (gen) l) (mul w y)))
  (precedes ((0 1) (4 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (4 0)) ((3 0) (0 0)) ((3 0) (4 0)) ((4 2) (5 0))
    ((4 2) (6 0)) ((5 1) (0 2)) ((6 1) (1 0)))
  (absent (y (exp (gen) l)) (y (exp (gen) ltxb))
    (y (exp (gen) (mul w l))) (x (exp (gen) l)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a l) (b ltxb)) ("principal-of" (l a) (ltxb b)))
  (neq ((exp (gen) (mul w l)) (gen)) (a b)
    ((exp (gen) (mul (rec x) w l y)) (gen)))
  (precur (6 0) (5 0))
  (uniq-gen ltxb x l y)
  (uniq-orig na nb)
  (operation nonce-test (displaced 7 2 ltx-gen 1) (exp (gen) l-0) (6 0))
  (traces
    ((recv (cat (exp (gen) l) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) w l y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxb l)) (exp (gen) (mul w l y))))))
      (send nb))
    ((recv (exp (gen) (mul w l y))) (send (exp (gen) (mul w l y))))
    ((send (cat a (exp (gen) l))) (recv "end-of-protocol") (send l))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) l) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul w l))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxb l)) (exp (gen) (mul w l y)))))))
    ((recv (cat (exp (gen) y) (mul (rec x) w l)))
      (send (cat (exp (gen) y) (mul (rec x) w l))))
    ((recv (cat (exp (gen) l) (mul w y)))
      (send (cat (exp (gen) l) (mul w y)))))
  (label 160)
  (parent 150)
  (unrealized (0 2) (1 0) (5 0) (6 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa x rndx) (w expt) (l y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb l)
    (x x) (y (mul (rec x) w l y)))
  (deflistener (exp (gen) (mul w l y)))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l l))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb l)
    (y y) (x (mul w l)))
  (deflistener (cat (exp (gen) y) (mul (rec x) w l)))
  (deflistener (cat (exp (gen) l) (mul w y)))
  (precedes ((0 1) (4 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (4 0)) ((3 0) (0 0)) ((3 0) (4 0)) ((4 2) (5 0))
    ((4 2) (6 0)) ((5 1) (0 2)) ((6 1) (1 0)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) l))
    (y (exp (gen) (mul w l))) (x (exp (gen) ltxa)) (x (exp (gen) l)))
  (fn-of ("ltx-of" (b l) (a ltxa)) ("principal-of" (l b) (ltxa a)))
  (neq ((exp (gen) (mul w l)) (gen)) (a b)
    ((exp (gen) (mul (rec x) w l y)) (gen)))
  (precur (6 0) (5 0))
  (uniq-gen ltxa x l y)
  (uniq-orig na nb)
  (operation nonce-test (displaced 7 3 ltx-gen 1) (exp (gen) l-0) (6 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) l)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) w l y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa l)) (exp (gen) (mul w l y))))))
      (send nb))
    ((recv (exp (gen) (mul w l y))) (send (exp (gen) (mul w l y))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) l))) (recv "end-of-protocol") (send l))
    ((recv (cat (exp (gen) ltxa) (exp (gen) l)))
      (recv (cat na a b (exp (gen) (mul w l))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa l)) (exp (gen) (mul w l y)))))))
    ((recv (cat (exp (gen) y) (mul (rec x) w l)))
      (send (cat (exp (gen) y) (mul (rec x) w l))))
    ((recv (cat (exp (gen) l) (mul w y)))
      (send (cat (exp (gen) l) (mul w y)))))
  (label 161)
  (parent 150)
  (unrealized (0 2) (1 0) (5 0) (6 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb data) (a b self name) (ltxa ltxb x rndx) (w expt)
    (l y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul (rec x) w l y)))
  (deflistener (exp (gen) (mul w l y)))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x (mul w l)))
  (deflistener (cat (exp (gen) y) (mul (rec x) w l)))
  (deflistener (cat (exp (gen) l) (mul w y)))
  (defstrand ltx-gen 1 (self self) (l l))
  (precedes ((0 1) (4 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (4 0)) ((3 0) (0 0)) ((3 0) (4 0)) ((4 2) (5 0))
    ((4 2) (6 0)) ((5 1) (0 2)) ((6 1) (1 0)) ((7 0) (4 1)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) ltxb))
    (y (exp (gen) (mul w l))) (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (self l) (a ltxa) (b ltxb))
    ("principal-of" (l self) (ltxa a) (ltxb b)))
  (neq ((exp (gen) (mul w l)) (gen)) (a b)
    ((exp (gen) (mul (rec x) w l y)) (gen)))
  (precur (6 0) (5 0))
  (uniq-gen ltxa ltxb x l y)
  (uniq-orig na nb)
  (operation nonce-test (added-strand ltx-gen 1) (exp (gen) l) (6 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) w l y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul w l y)))))) (send nb))
    ((recv (exp (gen) (mul w l y))) (send (exp (gen) (mul w l y))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul w l))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul w l y)))))))
    ((recv (cat (exp (gen) y) (mul (rec x) w l)))
      (send (cat (exp (gen) y) (mul (rec x) w l))))
    ((recv (cat (exp (gen) l) (mul w y)))
      (send (cat (exp (gen) l) (mul w y))))
    ((send (cat self (exp (gen) l)))))
  (label 162)
  (parent 150)
  (unrealized (0 2) (1 0) (5 0) (6 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa ltxb x rndx) (w expt) (y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul (rec x) w y)))
  (deflistener (exp (gen) (mul w y)))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x w))
  (deflistener (cat (exp (gen) y) (mul (rec x) w)))
  (deflistener (cat (gen) (mul w y)))
  (deflistener y)
  (precedes ((0 1) (4 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (4 0)) ((3 0) (0 0)) ((3 0) (4 0)) ((4 2) (5 0))
    ((4 2) (7 0)) ((5 1) (0 2)) ((6 1) (1 0)) ((7 1) (6 0)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) ltxb)) (y (exp (gen) w))
    (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a ltxa) (b ltxb))
    ("principal-of" (ltxa a) (ltxb b)))
  (neq ((exp (gen) w) (gen)) (a b)
    ((exp (gen) (mul (rec x) w y)) (gen)))
  (precur (6 0) (5 0))
  (uniq-gen ltxa ltxb x y)
  (uniq-orig na nb)
  (operation nonce-test (added-listener y) (mul w y) (6 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) w y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y))))))
      (send nb))
    ((recv (exp (gen) (mul w y))) (send (exp (gen) (mul w y))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) w)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y)))))))
    ((recv (cat (exp (gen) y) (mul (rec x) w)))
      (send (cat (exp (gen) y) (mul (rec x) w))))
    ((recv (cat (gen) (mul w y))) (send (cat (gen) (mul w y))))
    ((recv y) (send y)))
  (label 163)
  (parent 155)
  (unrealized (0 2) (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (w expt) (ltxa ltxb x y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul w y)))
  (deflistener (exp (gen) (mul w x y)))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x (mul w x)))
  (deflistener (cat (exp (gen) y) w))
  (deflistener (cat (exp (gen) x) (mul w y)))
  (deflistener y)
  (precedes ((0 1) (4 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (4 0)) ((3 0) (0 0)) ((3 0) (4 0)) ((4 2) (5 0))
    ((4 2) (7 0)) ((5 1) (0 2)) ((6 1) (1 0)) ((7 1) (6 0)))
  (absent (x (exp (gen) ltxa)) (x (exp (gen) ltxb)) (y (exp (gen) ltxa))
    (y (exp (gen) ltxb)) (y (exp (gen) (mul w x))))
  (fn-of ("ltx-of" (a ltxa) (b ltxb))
    ("principal-of" (ltxa a) (ltxb b)))
  (neq ((exp (gen) (mul w x)) (gen)) (a b)
    ((exp (gen) (mul w y)) (gen)))
  (precur (6 0) (5 0))
  (uniq-gen ltxa ltxb x y)
  (uniq-orig na nb)
  (operation nonce-test (added-listener y) (mul w y) (6 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul w x y)))))) (send nb))
    ((recv (exp (gen) (mul w x y))) (send (exp (gen) (mul w x y))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul w x))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul w x y)))))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w)))
    ((recv (cat (exp (gen) x) (mul w y)))
      (send (cat (exp (gen) x) (mul w y)))) ((recv y) (send y)))
  (label 164)
  (parent 156)
  (unrealized (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (na nb na-0 data) (a b a-0 b-0 name)
    (ltxa ltxb ltxa-0 ltxb-0 x rndx) (w expt) (x-0 y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul (rec x) w x-0 y)))
  (deflistener (exp (gen) (mul w x-0 y)))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x (mul w x-0)))
  (deflistener (cat (exp (gen) y) (mul (rec x) w x-0)))
  (deflistener (cat (exp (gen) x-0) (mul w y)))
  (defstrand init 2 (na na-0) (a a-0) (b b-0) (ltxa ltxa-0)
    (ltxb ltxb-0) (x x-0))
  (deflistener y)
  (precedes ((0 1) (4 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (4 0)) ((3 0) (0 0)) ((3 0) (4 0)) ((4 2) (5 0))
    ((4 2) (8 0)) ((5 1) (0 2)) ((6 1) (1 0)) ((7 1) (4 1))
    ((8 1) (6 0)))
  (absent (x-0 (exp (gen) ltxa-0)) (x-0 (exp (gen) ltxb-0))
    (y (exp (gen) ltxa)) (y (exp (gen) ltxb))
    (y (exp (gen) (mul w x-0))) (x (exp (gen) ltxa))
    (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a-0 ltxa-0) (b-0 ltxb-0) (a ltxa) (b ltxb))
    ("principal-of" (ltxa-0 a-0) (ltxb-0 b-0) (ltxa a) (ltxb b)))
  (neq ((exp (gen) (mul w x-0)) (gen)) (a b)
    ((exp (gen) (mul (rec x) w x-0 y)) (gen)))
  (precur (6 0) (5 0))
  (uniq-gen ltxa ltxb x x-0 y)
  (uniq-orig na nb na-0)
  (operation nonce-test (added-listener y) (mul w y) (6 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) w x-0 y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul w x-0 y)))))) (send nb))
    ((recv (exp (gen) (mul w x-0 y))) (send (exp (gen) (mul w x-0 y))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul w x-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul w x-0 y)))))))
    ((recv (cat (exp (gen) y) (mul (rec x) w x-0)))
      (send (cat (exp (gen) y) (mul (rec x) w x-0))))
    ((recv (cat (exp (gen) x-0) (mul w y)))
      (send (cat (exp (gen) x-0) (mul w y))))
    ((recv (cat (exp (gen) ltxa-0) (exp (gen) ltxb-0)))
      (send (cat na-0 a-0 b-0 (exp (gen) x-0)))) ((recv y) (send y)))
  (label 165)
  (parent 157)
  (unrealized (0 2) (5 0) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa ltxb y x rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y y))
  (deflistener (exp (gen) (mul y x)))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x x))
  (deflistener (cat (exp (gen) y) (one)))
  (deflistener (cat (exp (gen) y) x))
  (precedes ((0 1) (4 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (4 0)) ((3 0) (0 0)) ((3 0) (4 0)) ((4 2) (5 0))
    ((4 2) (6 0)) ((5 1) (0 2)) ((6 1) (1 0)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) ltxb)) (y (exp (gen) x))
    (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a ltxa) (b ltxb))
    ("principal-of" (ltxa a) (ltxb b)))
  (neq ((exp (gen) x) (gen)) (a b) ((exp (gen) y) (gen)))
  (precur (6 0) (5 0))
  (uniq-gen ltxa ltxb y x)
  (uniq-orig na nb)
  (operation nonce-test (contracted (x-0 x) (w x)) (one) (5 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x))))))
      (send nb))
    ((recv (exp (gen) (mul y x))) (send (exp (gen) (mul y x))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul y x)))))))
    ((recv (cat (exp (gen) y) (one))) (send (cat (exp (gen) y) (one))))
    ((recv (cat (exp (gen) y) x)) (send (cat (exp (gen) y) x))))
  (label 166)
  (parent 158)
  (unrealized (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (na nb data) (a b self name) (ltxa ltxb y x l rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul y l)))
  (deflistener (exp (gen) (mul y x l)))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x (mul x l)))
  (deflistener (cat (exp (gen) y) l))
  (deflistener (cat (exp (gen) y) (mul x l)))
  (defstrand ltx-gen 3 (self self) (l l))
  (precedes ((0 1) (4 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (4 0)) ((3 0) (0 0)) ((3 0) (4 0)) ((4 2) (5 0))
    ((4 2) (6 0)) ((5 1) (0 2)) ((6 1) (1 0)) ((7 0) (4 1))
    ((7 2) (5 0)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) ltxb))
    (y (exp (gen) (mul x l))) (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (self l) (a ltxa) (b ltxb))
    ("principal-of" (l self) (ltxa a) (ltxb b)))
  (neq ((exp (gen) (mul x l)) (gen)) (a b)
    ((exp (gen) (mul y l)) (gen)))
  (precur (6 0) (5 0))
  (uniq-gen ltxa ltxb y x l)
  (uniq-orig na nb)
  (operation nonce-test (added-strand ltx-gen 3) l (5 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y l))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul y x l)))))) (send nb))
    ((recv (exp (gen) (mul y x l))) (send (exp (gen) (mul y x l))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul x l))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul y x l)))))))
    ((recv (cat (exp (gen) y) l)) (send (cat (exp (gen) y) l)))
    ((recv (cat (exp (gen) y) (mul x l)))
      (send (cat (exp (gen) y) (mul x l))))
    ((send (cat self (exp (gen) l))) (recv "end-of-protocol") (send l)))
  (label 167)
  (parent 158)
  (unrealized (1 0) (4 1) (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa ltxb rndx) (w expt) (y x rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul w y)))
  (deflistener (exp (gen) (mul w y x)))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x (mul w x)))
  (deflistener (cat (exp (gen) y) w))
  (deflistener (cat (exp (gen) y) (mul w x)))
  (precedes ((0 1) (4 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (4 0)) ((3 0) (0 0)) ((3 0) (4 0)) ((4 2) (5 0))
    ((4 2) (6 0)) ((5 1) (0 2)) ((6 1) (1 0)))
  (absent (x w) (y (exp (gen) ltxa)) (y (exp (gen) ltxb))
    (y (exp (gen) (mul w x))) (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a ltxa) (b ltxb))
    ("principal-of" (ltxa a) (ltxb b)))
  (neq ((exp (gen) (mul w x)) (gen)) (a b)
    ((exp (gen) (mul w y)) (gen)))
  (precur (6 0) (5 0))
  (uniq-gen ltxa ltxb y x)
  (uniq-orig na nb)
  (operation nonce-test (added-absence x w) w (5 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul w y x)))))) (send nb))
    ((recv (exp (gen) (mul w y x))) (send (exp (gen) (mul w y x))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul w x))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul w y x)))))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w)))
    ((recv (cat (exp (gen) y) (mul w x)))
      (send (cat (exp (gen) y) (mul w x)))))
  (label 168)
  (parent 158)
  (unrealized (1 0) (6 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (x ltxa ltxb rndx) (w expt) (y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul (rec x) w y)))
  (deflistener (exp (gen) (mul w y)))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x w))
  (deflistener (cat (exp (gen) y) (mul (rec x) w)))
  (deflistener (cat (exp (gen) y) w))
  (deflistener x)
  (precedes ((0 1) (4 1)) ((0 1) (7 0)) ((0 3) (2 1)) ((0 3) (3 1))
    ((2 0) (0 0)) ((2 0) (4 0)) ((3 0) (0 0)) ((3 0) (4 0))
    ((4 2) (5 0)) ((4 2) (6 0)) ((5 1) (0 2)) ((6 1) (1 0))
    ((7 1) (5 0)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) ltxb)) (y (exp (gen) w))
    (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a ltxa) (b ltxb))
    ("principal-of" (ltxa a) (ltxb b)))
  (neq ((exp (gen) w) (gen)) (a b)
    ((exp (gen) (mul (rec x) w y)) (gen)))
  (precur (6 0) (5 0))
  (uniq-gen x ltxa ltxb y)
  (uniq-orig na nb)
  (operation nonce-test (added-listener x) (mul (rec x) w) (5 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) w y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y))))))
      (send nb))
    ((recv (exp (gen) (mul w y))) (send (exp (gen) (mul w y))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) w)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb)) (exp (gen) (mul w y)))))))
    ((recv (cat (exp (gen) y) (mul (rec x) w)))
      (send (cat (exp (gen) y) (mul (rec x) w))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w)))
    ((recv x) (send x)))
  (label 169)
  (parent 158)
  (unrealized (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (na nb na-0 nb-0 data) (a b a-0 b-0 name)
    (ltxa ltxb ltxa-0 ltxb-0 rndx) (x expt) (x-0 rndx) (w expt)
    (y y-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x-0) (y (mul (rec x-0) w y y-0)))
  (deflistener (exp (gen) (mul w y y-0)))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y-0) (x (mul w y)))
  (deflistener (cat (exp (gen) y-0) (mul (rec x-0) w y)))
  (deflistener (cat (exp (gen) y) (mul w y-0)))
  (defstrand resp 3 (na na-0) (nb nb-0) (a a-0) (b b-0) (ltxa ltxa-0)
    (ltxb ltxb-0) (y y) (x x))
  (deflistener y-0)
  (precedes ((0 1) (4 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (4 0)) ((3 0) (0 0)) ((3 0) (4 0)) ((4 2) (5 0))
    ((4 2) (8 0)) ((5 1) (0 2)) ((6 1) (1 0)) ((7 2) (4 1))
    ((8 1) (6 0)))
  (absent (y (exp (gen) ltxa-0)) (y (exp (gen) ltxb-0))
    (y (exp (gen) x)) (y-0 (exp (gen) ltxa)) (y-0 (exp (gen) ltxb))
    (y-0 (exp (gen) (mul w y))) (x-0 (exp (gen) ltxa))
    (x-0 (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a-0 ltxa-0) (b-0 ltxb-0) (a ltxa) (b ltxb))
    ("principal-of" (ltxa-0 a-0) (ltxb-0 b-0) (ltxa a) (ltxb b)))
  (neq ((exp (gen) x) (gen)) ((exp (gen) (mul w y)) (gen)) (a b)
    ((exp (gen) (mul (rec x-0) w y y-0)) (gen)))
  (precur (6 0) (5 0))
  (uniq-gen ltxa ltxb x-0 y y-0)
  (uniq-orig na nb nb-0)
  (operation nonce-test (added-listener y-0) (mul w y-0) (6 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x-0)))
      (recv
        (cat (exp (gen) (mul (rec x-0) w y y-0))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul w y y-0)))))) (send nb))
    ((recv (exp (gen) (mul w y y-0))) (send (exp (gen) (mul w y y-0))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul w y))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul w y y-0)))))))
    ((recv (cat (exp (gen) y-0) (mul (rec x-0) w y)))
      (send (cat (exp (gen) y-0) (mul (rec x-0) w y))))
    ((recv (cat (exp (gen) y) (mul w y-0)))
      (send (cat (exp (gen) y) (mul w y-0))))
    ((recv (cat (exp (gen) ltxa-0) (exp (gen) ltxb-0)))
      (recv (cat na-0 a-0 b-0 (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul ltxa-0 ltxb-0))
              (exp (gen) (mul x y))))))) ((recv y-0) (send y-0)))
  (label 170)
  (parent 159)
  (unrealized (0 2) (5 0) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxb x rndx) (w expt) (l y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa l) (ltxb ltxb)
    (x x) (y (mul (rec x) w l y)))
  (deflistener (exp (gen) (mul w l y)))
  (defstrand ltx-gen 3 (self a) (l l))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa l) (ltxb ltxb)
    (y y) (x (mul w l)))
  (deflistener (cat (exp (gen) y) (mul (rec x) w l)))
  (deflistener (cat (exp (gen) l) (mul w y)))
  (deflistener y)
  (precedes ((0 1) (4 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (4 0)) ((3 0) (0 0)) ((3 0) (4 0)) ((4 2) (5 0))
    ((4 2) (7 0)) ((5 1) (0 2)) ((6 1) (1 0)) ((7 1) (6 0)))
  (absent (y (exp (gen) l)) (y (exp (gen) ltxb))
    (y (exp (gen) (mul w l))) (x (exp (gen) l)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a l) (b ltxb)) ("principal-of" (l a) (ltxb b)))
  (neq ((exp (gen) (mul w l)) (gen)) (a b)
    ((exp (gen) (mul (rec x) w l y)) (gen)))
  (precur (6 0) (5 0))
  (uniq-gen ltxb x l y)
  (uniq-orig na nb)
  (operation nonce-test (added-listener y) (mul w y) (6 0))
  (traces
    ((recv (cat (exp (gen) l) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) w l y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxb l)) (exp (gen) (mul w l y))))))
      (send nb))
    ((recv (exp (gen) (mul w l y))) (send (exp (gen) (mul w l y))))
    ((send (cat a (exp (gen) l))) (recv "end-of-protocol") (send l))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) l) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul w l))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxb l)) (exp (gen) (mul w l y)))))))
    ((recv (cat (exp (gen) y) (mul (rec x) w l)))
      (send (cat (exp (gen) y) (mul (rec x) w l))))
    ((recv (cat (exp (gen) l) (mul w y)))
      (send (cat (exp (gen) l) (mul w y)))) ((recv y) (send y)))
  (label 171)
  (parent 160)
  (unrealized (0 2) (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa x rndx) (w expt) (l y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb l)
    (x x) (y (mul (rec x) w l y)))
  (deflistener (exp (gen) (mul w l y)))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l l))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb l)
    (y y) (x (mul w l)))
  (deflistener (cat (exp (gen) y) (mul (rec x) w l)))
  (deflistener (cat (exp (gen) l) (mul w y)))
  (deflistener y)
  (precedes ((0 1) (4 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (4 0)) ((3 0) (0 0)) ((3 0) (4 0)) ((4 2) (5 0))
    ((4 2) (7 0)) ((5 1) (0 2)) ((6 1) (1 0)) ((7 1) (6 0)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) l))
    (y (exp (gen) (mul w l))) (x (exp (gen) ltxa)) (x (exp (gen) l)))
  (fn-of ("ltx-of" (b l) (a ltxa)) ("principal-of" (l b) (ltxa a)))
  (neq ((exp (gen) (mul w l)) (gen)) (a b)
    ((exp (gen) (mul (rec x) w l y)) (gen)))
  (precur (6 0) (5 0))
  (uniq-gen ltxa x l y)
  (uniq-orig na nb)
  (operation nonce-test (added-listener y) (mul w y) (6 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) l)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) w l y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa l)) (exp (gen) (mul w l y))))))
      (send nb))
    ((recv (exp (gen) (mul w l y))) (send (exp (gen) (mul w l y))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) l))) (recv "end-of-protocol") (send l))
    ((recv (cat (exp (gen) ltxa) (exp (gen) l)))
      (recv (cat na a b (exp (gen) (mul w l))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa l)) (exp (gen) (mul w l y)))))))
    ((recv (cat (exp (gen) y) (mul (rec x) w l)))
      (send (cat (exp (gen) y) (mul (rec x) w l))))
    ((recv (cat (exp (gen) l) (mul w y)))
      (send (cat (exp (gen) l) (mul w y)))) ((recv y) (send y)))
  (label 172)
  (parent 161)
  (unrealized (0 2) (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (na nb data) (a b self name) (ltxa ltxb x rndx) (w expt)
    (l y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul (rec x) w l y)))
  (deflistener (exp (gen) (mul w l y)))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x (mul w l)))
  (deflistener (cat (exp (gen) y) (mul (rec x) w l)))
  (deflistener (cat (exp (gen) l) (mul w y)))
  (defstrand ltx-gen 1 (self self) (l l))
  (deflistener y)
  (precedes ((0 1) (4 1)) ((0 3) (2 1)) ((0 3) (3 1)) ((2 0) (0 0))
    ((2 0) (4 0)) ((3 0) (0 0)) ((3 0) (4 0)) ((4 2) (5 0))
    ((4 2) (8 0)) ((5 1) (0 2)) ((6 1) (1 0)) ((7 0) (4 1))
    ((8 1) (6 0)))
  (absent (y (exp (gen) ltxa)) (y (exp (gen) ltxb))
    (y (exp (gen) (mul w l))) (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (self l) (a ltxa) (b ltxb))
    ("principal-of" (l self) (ltxa a) (ltxb b)))
  (neq ((exp (gen) (mul w l)) (gen)) (a b)
    ((exp (gen) (mul (rec x) w l y)) (gen)))
  (precur (6 0) (5 0))
  (uniq-gen ltxa ltxb x l y)
  (uniq-orig na nb)
  (operation nonce-test (added-listener y) (mul w y) (6 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) w l y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul w l y)))))) (send nb))
    ((recv (exp (gen) (mul w l y))) (send (exp (gen) (mul w l y))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul w l))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul w l y)))))))
    ((recv (cat (exp (gen) y) (mul (rec x) w l)))
      (send (cat (exp (gen) y) (mul (rec x) w l))))
    ((recv (cat (exp (gen) l) (mul w y)))
      (send (cat (exp (gen) l) (mul w y))))
    ((send (cat self (exp (gen) l)))) ((recv y) (send y)))
  (label 173)
  (parent 162)
  (unrealized (0 2) (5 0) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (ltxa ltxb rndx) (w expt) (y x rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (x x) (y (mul w y)))
  (deflistener (exp (gen) (mul w y x)))
  (defstrand ltx-gen 3 (self a) (l ltxa))
  (defstrand ltx-gen 3 (self b) (l ltxb))
  (defstrand resp 3 (na na) (nb nb) (a a) (b b) (ltxa ltxa) (ltxb ltxb)
    (y y) (x (mul w x)))
  (deflistener (cat (exp (gen) y) w))
  (deflistener (cat (exp (gen) y) (mul w x)))
  (deflistener x)
  (precedes ((0 1) (4 1)) ((0 1) (7 0)) ((0 3) (2 1)) ((0 3) (3 1))
    ((2 0) (0 0)) ((2 0) (4 0)) ((3 0) (0 0)) ((3 0) (4 0))
    ((4 2) (5 0)) ((4 2) (6 0)) ((5 1) (0 2)) ((6 1) (1 0))
    ((7 1) (6 0)))
  (absent (x w) (y (exp (gen) ltxa)) (y (exp (gen) ltxb))
    (y (exp (gen) (mul w x))) (x (exp (gen) ltxa)) (x (exp (gen) ltxb)))
  (fn-of ("ltx-of" (a ltxa) (b ltxb))
    ("principal-of" (ltxa a) (ltxb b)))
  (neq ((exp (gen) (mul w x)) (gen)) (a b)
    ((exp (gen) (mul w y)) (gen)))
  (precur (6 0) (5 0))
  (uniq-gen ltxa ltxb y x)
  (uniq-orig na nb)
  (operation nonce-test (added-listener x) (mul w x) (6 0))
  (traces
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul w y x)))))) (send nb))
    ((recv (exp (gen) (mul w y x))) (send (exp (gen) (mul w y x))))
    ((send (cat a (exp (gen) ltxa))) (recv "end-of-protocol")
      (send ltxa))
    ((send (cat b (exp (gen) ltxb))) (recv "end-of-protocol")
      (send ltxb))
    ((recv (cat (exp (gen) ltxa) (exp (gen) ltxb)))
      (recv (cat na a b (exp (gen) (mul w x))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul ltxa ltxb))
              (exp (gen) (mul w y x)))))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w)))
    ((recv (cat (exp (gen) y) (mul w x)))
      (send (cat (exp (gen) y) (mul w x)))) ((recv x) (send x)))
  (label 174)
  (parent 168)
  (unrealized (7 0))
  (dead)
  (comment "empty cohort"))

(comment "Nothing left to do")
